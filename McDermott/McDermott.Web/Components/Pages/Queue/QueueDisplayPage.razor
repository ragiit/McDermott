@page "/queue/queue-displays"
@rendermode InteractiveServer

<PageTitle>McHealthCare - Master data Queue Display </PageTitle>

@if (IsAccess && UserAccessCRUID is not null && UserAccessCRUID.IsRead)
{
    <div class="wrapper">
        <BaseHeaderPage Title="Queue Display" OnClickBack="@(async () => await LoadData())" ShowBackButton="false" />

        <section class="content">
            <div class="container-fluid">
                <div class="row">
                    <div class="col">
                        <div class="card">
                            <InputFile id="fileInput" style="display:none" OnChange="@ImportExcelFile" accept=".xlsx" multiple="false"></InputFile>

                            <DxLoadingPanel @bind-Visible="PanelVisible"
                                            IndicatorAnimationType="WaitIndicatorAnimationType.Pulse"
                                            IsContentBlocked="true"
                                            ApplyBackgroundShading="true"
                                            IndicatorAreaVisible="false"
                                            Text="Fetching Data...">
                                <MyGrid @ref="Grid"
                                        Data="QueueDisplay"
                                        PageSize="10"
                                        @bind-SelectedDataItems="@SelectedDataItems"
                                        KeyFieldName="Id"
                                        EditModelSaving="OnSave"
                                        DataItemDeleting="OnDelete"
                                        FocusedRowChanged="Grid_FocusedRowChanged">

                                    <ToolbarTemplate>
                                        <MyDxToolbarBase TItem="QueueDisplayDto"
                                                         Items="@QueueDisplay"
                                                         SelectedDataItems="@SelectedDataItems"
                                                         NewItem_Click="@NewItem_Click"
                                                         EditItem_Click="@EditItem_Click"
                                                         DeleteItem_Click="@DeleteItem_Click"
                                                         Refresh_Click="@Refresh_Click"
                                                         IsImport="false"
                                                         Grid="Grid"
                                                         VisibleNew="UserAccessCRUID.IsCreate"
                                                         VisibleEdit="UserAccessCRUID.IsUpdate"
                                                         VisibleDelete="UserAccessCRUID.IsDelete" />
                                    </ToolbarTemplate>

                                    <Columns>
                                        <DxGridSelectionColumn Width="15px" />
                                        <DxGridDataColumn FieldName="Name" Caption="Queue Display" SortIndex="0" />
                                        <DxGridDataColumn FieldName="NameCounter" Caption="Counter" />
                                        <DxGridDataColumn Caption=" Action Display">
                                            <CellDisplayTemplate>
                                                <DxButton RenderStyle="@ButtonRenderStyle.Success" CssClass="text-center" IconCssClass="fa-solid fa-play mr-1" Text="Start" @onclick="() => OnRenderTo((QueueDisplayDto)context.DataItem)"></DxButton>
                                            </CellDisplayTemplate>
                                        </DxGridDataColumn>
                                    </Columns>

                                    <EditFormTemplate Context="EditFormContext">
                                        @{
                                            var a = (QueueDisplayDto)EditFormContext.EditModel;
                                        }
                                        <DxFormLayout CssClass="w-100">
                                            <DxFormLayoutItem CaptionCssClass="required-caption normal-caption" Caption="Name" ColSpanMd="12">
                                                <div class="pop-warning">
                                                    <DxTextBox @bind-Text="@a.Name" NullText="Name Display.."></DxTextBox>
                                                </div>
                                            </DxFormLayoutItem>
                                          

                                            <DxFormLayoutItem ColSpanMd="12" CaptionCssClass="normal-caption" Caption="Counters">
                                                <Template>
                                                    <div class="row w-100">
                                                        <div class="col-md-12">
                                                            <DxMaskedInput NullText="Search Counter"
                                                                           ValueExpression="@(() => SearchTextCounter)"
                                                                           Value="SearchTextCounter"
                                                                           ValueChanged="@((string s) => OnSearchCounter(s))"
                                                                           ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto">
                                                                <Buttons>
                                                                    <DxEditorButton Click="OnSearchCounterndexDecrement"
                                                                                    IconCssClass="fa-solid fa-caret-left"
                                                                                    Tooltip="Previous Index" />
                                                                    <DxEditorButton Click="OnSearchCounterClick"
                                                                                    IconCssClass="fa-solid fa-magnifying-glass"
                                                                                    Tooltip="Search" />
                                                                    <DxEditorButton Click="OnSearchCounterIndexIncrement"
                                                                                    IconCssClass="fa-solid fa-caret-right"
                                                                                    Tooltip="Next Index" />
                                                                </Buttons>
                                                            </DxMaskedInput>
                                                        </div>
                                                        <div class="col-md-12 mt-2">
                                                            <DxTagBox Data="@Counters"
                                                                      FilteringMode="@DataGridFilteringMode.Contains"
                                                                      @bind-Values="@selectedCounter"
                                                                      TextFieldName="Name"
                                                                      CssClass="w-100"
                                                                      NullText="Select Service"
                                                                      ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto">
                                                                <Columns>
                                                                    <DxListEditorColumn FieldName="@nameof(Counter.Name)" Caption="Name"/>
                                                                </Columns>
                                                            </DxTagBox>
                                                        </div>
                                                    </div>
                                                </Template>
                                            </DxFormLayoutItem>
                                        </DxFormLayout>
                                    </EditFormTemplate>
                                </MyGrid>
                            </DxLoadingPanel>
                            @*  <DxPopup @bind-Visible="@showPopUp" HeaderText="Set Display">
                        <EditForm Model="@FormDisplays" Context="EditFormContext">
                        <DxFormLayout CssClass="w-100">
                        <DxFormLayoutItem CaptionCssClass="required-caption" Caption="Name:" ColSpanMd="12">
                        <div class="pop-warning">
                        <DxTextBox @bind-Text="@FormDisplays.Name" NullText="Name Display.."></DxTextBox>
                        </div>
                        </DxFormLayoutItem>
                        <DxFormLayoutItem ColSpanMd="12" Caption="Counter">
                        <DxTagBox Data="@counteres" FilteringMode="@DataGridFilteringMode.Contains"
                        @bind-Values="@selectedCounter"
                        NullText="Select Counter.."
                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                        TextFieldName="Name" />
                        </DxFormLayoutItem>
                        <DxFormLayoutItem ColSpanMd="12">
                        <div class="row justify-content-end">
                        <div class="col-5 align-self-end">
                        <DxButton Text="Save" RenderStyleMode="ButtonRenderStyleMode.Outline" RenderStyle="ButtonRenderStyle.Primary" SubmitFormOnClick="true" Click="OnSave"></DxButton>
                        <DxButton Text="Discard" RenderStyleMode="ButtonRenderStyleMode.Outline" RenderStyle="ButtonRenderStyle.Danger" SubmitFormOnClick="true" Click="OnCancel"></DxButton>
                        </div>
                        </div>
                        </DxFormLayoutItem>
                        </DxFormLayout>
                        </EditForm>
                        </DxPopup> *@
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
}
else if (UserAccessCRUID is not null && !UserAccessCRUID.IsRead)
{
    <InvalidPermissionPage />
}
else
{
    <LoadingIndicatorLayout />
}