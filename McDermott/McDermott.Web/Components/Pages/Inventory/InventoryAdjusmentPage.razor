@page "/inventory/inventory-adjusment"
@rendermode InteractiveServer

<PageTitle>McHealthCare - Inventory Adjusment</PageTitle>

@if (IsAccess)
{
    <div class="wrapper">
        <section class="content-header">
            <div class="container-fluid">
                <div class="row mb-2">
                    <div class="col-sm-6">
                        <h1>Inventory Adjusment</h1>
                    </div>
                    <div class="col-sm-6">
                        <ol class="breadcrumb float-sm-right">
                            <li class="breadcrumb-item"><a class="no-underline" href="/">Home</a></li>
                            <li class="breadcrumb-item" @onclick="LoadData"><a class="no-underline" href="/inventory/inventory-adjusment">Inventory Adjusment</a></li>
                        </ol>
                    </div>
                </div>
            </div>
        </section>

        <section class="content">
            <div class="container-fluid">
                <div class="row">
                    <div class="col">

                        @if (!ShowForm)
                        {
                            <div class="card">
                                <div class="card-body">
                                    <DxLoadingPanel @bind-Visible="PanelVisible"
                                                    IndicatorAnimationType="WaitIndicatorAnimationType.Pulse"
                                                    IsContentBlocked="true"
                                                    ApplyBackgroundShading="true"
                                                    IndicatorAreaVisible="false"
                                                    Text="Fetching Data...">
                                        <DxGrid @ref="Grid"
                                                Data="InventoryAdjusments"
                                                @bind-SelectedDataItems="@SelectedDataItems"
                                                DataItemDeleting="OnDelete"
                                                FocusedRowChanged="Grid_FocusedRowChanged"
                                                RowDoubleClick="EditItem_Click"
                                                PagerNavigationMode="PagerNavigationMode.InputBox"
                                                EditorRenderMode="GridEditorRenderMode.Detached"
                                                PageSize="10"
                                                FilterMenuButtonDisplayMode="GridFilterMenuButtonDisplayMode.Always"
                                                KeyFieldName="Id"
                                                CustomizeDataRowEditor="@GridExtention.Grid_CustomizeDataRowEditor"
                                                AllowSelectRowByClick="true"
                                                PagerPosition="GridPagerPosition.Bottom"
                                                PageSizeSelectorVisible="true"
                                                PageSizeSelectorItems="@(new int[] { 10, 20, 50, 100 })"
                                                PageSizeSelectorAllRowsItemVisible="true"
                                                PagerSwitchToInputBoxButtonCount="10"
                                                FocusedRowEnabled="true"
                                                PagerVisibleNumericButtonCount="10"
                                                ShowGroupPanel="true"
                                                AutoExpandAllGroupRows="true"
                                                ShowFilterRow="true"
                                                CustomizeElement="@GridExtention.Grid_CustomizeElement"
                                                ShowSearchBox="true"
                                                SelectAllCheckboxMode="GridSelectAllCheckboxMode.Mixed"
                                                KeyboardNavigationEnabled="true">

                                            <ToolbarTemplate>
                                                <DxToolbar ItemRenderStyleMode="ToolbarRenderStyleMode.Contained">
                                                    <DxToolbarItem Visible="@UserAccessCRUID.Create" Text="New" Click="NewItem_Click" IconCssClass="fa-solid fa-plus" />
                                                    <DxToolbarItem Visible="@UserAccessCRUID.Update" Text="Edit" Click="EditItem_Click" IconCssClass="fa-solid fa-pen-to-square" Enabled="SelectedDataItems.Count > 0 && InventoryAdjusments.Count > 0" />
                                                    <DxToolbarItem Visible="@UserAccessCRUID.Delete" Text="Delete" Click="DeleteItem_Click" IconCssClass="fa-solid fa-trash" Enabled="SelectedDataItems.Count > 0 && InventoryAdjusments.Count > 0 && IsDeletedAdjusment" />
                                                    <DxToolbarItem BeginGroup="true" Text="Refresh" Click="Refresh_Click" IconCssClass="fa-solid fa-arrows-rotate" />
                                                    <DxToolbarItem Text="Column Chooser" Click="(() => GridExtention.ColumnChooserButton_Click(Grid))" BeginGroup="true" IconCssClass="fa-solid fa-table-columns" />
                                                    <DxToolbarItem Text="Export" BeginGroup="true" IconCssClass="fa-solid fa-file-export">
                                                        <Items>
                                                            <DxToolbarItem Text="To CSV" Click="(() => GridExtention.ExportCsvItem_Click(Grid))" />
                                                            <DxToolbarItem Text="To XLSX" Click="(() => GridExtention.ExportXlsxItem_Click(Grid))" />
                                                            <DxToolbarItem Text="To XLS" Click="(() => GridExtention.ExportXlsItem_Click(Grid))" />
                                                        </Items>
                                                    </DxToolbarItem>
                                                </DxToolbar>
                                            </ToolbarTemplate>

                                            <Columns>
                                                <DxGridSelectionColumn Width="15px" />
                                                <DxGridDataColumn MinWidth="200" FieldName="Name" SortIndex="0" />
                                                <DxGridDataColumn MinWidth="200" FieldName="Date" />
                                                <DxGridDataColumn MinWidth="200" FieldName="Company.Name" Caption="Company" />
                                                <DxGridDataColumn MinWidth="200" FieldName="Location.Name" Caption="Location" />
                                                <DxGridDataColumn MinWidth="200" FieldName="StatusName" Caption="Status" />
                                            </Columns>

                                        </DxGrid>
                                    </DxLoadingPanel>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="row justify-content-end mb-3">
                                <div class="col-auto align-self-end">
                                    <DxTabs>
                                        <DxTab Text="@EnumStatusInventoryAdjusment.Draft.GetDisplayName()" Enabled="@IsStatus(EnumStatusInventoryAdjusment.Draft)"></DxTab>
                                        <DxTab Text="@EnumStatusInventoryAdjusment.InProgress.GetDisplayName()" Enabled="@IsStatus(EnumStatusInventoryAdjusment.InProgress)"></DxTab>
                                        <DxTab Text="@EnumStatusInventoryAdjusment.Invalidate.GetDisplayName()" Enabled="@IsStatus(EnumStatusInventoryAdjusment.Invalidate)"></DxTab>
                                    </DxTabs>
                                </div>
                            </div>

                            @if (InventoryAdjusment.Id != 0 && !InventoryAdjusment.Status.Equals(EnumStatusInventoryAdjusment.Invalidate))
                            {
                                <div class="card">
                                    <div class="card-body">
                                        <div class="w-100">
                                            <div class="col align-self-center">
                                                <DxButton IconCssClass="fa-solid fa-check" Text="@StagingText" Click="OnClickConfirm" RenderStyle="ButtonRenderStyle.Primary"></DxButton>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }

                            <div class="card">
                                <div class="card-header">
                                    <span class="fw-bolder">@(InventoryAdjusment.Id == 0 ? "Add Inventory Adjusment" : "Edit Inventory Adjusment")</span>
                                </div>
                                <div class="card-body">
                                    <EditForm Model="@InventoryAdjusment" @onkeypress="@KeyPressHandler" Context="EditFormContext22" OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="@HandleInvalidSubmit">
                                        <DataAnnotationsValidator />
                                        <DxFormLayout CssClass="w-100">

                                            @if (InventoryAdjusment.Id != 0)
                                            {
                                                <DxFormLayoutItem ColSpanMd="12">
                                                    <h3 class="fw-bolder">@InventoryAdjusment.Name</h3>
                                                </DxFormLayoutItem>
                                            }

                                            <DxFormLayoutItem Caption="Name" CssClass="mt-2" CaptionCssClass="required-caption normal-caption" ColSpanMd="12">
                                                <DxTextBox @bind-Text="@InventoryAdjusment.Name"
                                                           ShowValidationIcon="true"
                                                           ReadOnly="@(!IsStatus(EnumStatusInventoryAdjusment.Draft))"
                                                           ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                           NullText="Name" />
                                                <ValidationMessage For="@(() => InventoryAdjusment.Name)"   />
                                            </DxFormLayoutItem>

                                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Location" ColSpanMd="12">
                                                <DxComboBox ShowValidationIcon="true" Data="@Locations"
                                                            NullText="Select Location..."
                                                            TextFieldName="Name"
                                                            ReadOnly="@(!IsStatus(EnumStatusInventoryAdjusment.Draft))"
                                                            ValueFieldName="Id"
                                                            SelectedItemChanged="@((LocationDto freq)=>SelectLocation(freq))"
                                                            ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                            FilteringMode="@DataGridFilteringMode.Contains"
                                                            @bind-Value="InventoryAdjusment.LocationId">
                                                </DxComboBox>
                                                <ValidationMessage For="@(() => InventoryAdjusment.LocationId)" />
                                            </DxFormLayoutItem>

                                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Company" ColSpanMd="12">
                                                <DxComboBox ShowValidationIcon="true" Data="@Companies"
                                                            NullText="Select Company..."
                                                            ReadOnly="@(!IsStatus(EnumStatusInventoryAdjusment.Draft))"
                                                            TextFieldName="Name"
                                                            ValueFieldName="Id"
                                                            FilteringMode="@DataGridFilteringMode.Contains"
                                                            @bind-Value="InventoryAdjusment.CompanyId">
                                                </DxComboBox>
                                                <ValidationMessage For="@(() => InventoryAdjusment.CompanyId)" />
                                            </DxFormLayoutItem>

                                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Date" ColSpanMd="12">
                                                <DxDateEdit ShowValidationIcon="true"
                                                            ReadOnly="@(!IsStatus(EnumStatusInventoryAdjusment.Draft))"
                                                            @bind-Date="@InventoryAdjusment.Date"
                                                            Mask="@DateTimeMask.ShortDate"
                                                            NullText="Select Date">
                                                </DxDateEdit>
                                                <ValidationMessage For="@(() => InventoryAdjusment.Date)" />
                                            </DxFormLayoutItem>
                                        </DxFormLayout>

                                        <hr />

                                        <DxFormLayout>
                                            <DxFormLayoutGroup Caption="Inventory Adjusment Details" ColSpanMd="12" ExpandButtonDisplayMode="GroupExpandButtonDisplayMode.Start" AnimationType="LayoutAnimationType.Slide">
                                                <Items>
                                                    <DxLoadingPanel @bind-Visible="PanelVisible"
                                                                    IndicatorAnimationType="WaitIndicatorAnimationType.Pulse"
                                                                    IsContentBlocked="true"
                                                                    ApplyBackgroundShading="true"
                                                                    IndicatorAreaVisible="false"
                                                                    Text="Fetching Data...">
                                                        <DxGrid @ref="GridDetail"
                                                                Data="InventoryAdjusmentDetails"
                                                                @bind-SelectedDataItems="@SelectedDetailDataItems"
                                                                EditModelSaving="SaveInventoryAdjusmentDetail"
                                                                DataItemDeleting="OnDeleteInventoryAdjusmentDetail"
                                                                FocusedRowChanged="GridDetail_FocusedRowChanged"
                                                                PagerNavigationMode="PagerNavigationMode.InputBox"
                                                                EditorRenderMode="GridEditorRenderMode.Detached"
                                                                PageSize="10"
                                                                FilterMenuButtonDisplayMode="GridFilterMenuButtonDisplayMode.Always"
                                                                KeyFieldName="Id"
                                                                CustomizeDataRowEditor="@GridExtention.Grid_CustomizeDataRowEditor"
                                                                AllowSelectRowByClick="true"
                                                                PagerPosition="GridPagerPosition.Bottom"
                                                                PageSizeSelectorVisible="true"
                                                                PageSizeSelectorItems="@(new int[] { 10, 20, 50, 100 })"
                                                                PageSizeSelectorAllRowsItemVisible="true"
                                                                PagerSwitchToInputBoxButtonCount="10"
                                                                FocusedRowEnabled="true"
                                                                PagerVisibleNumericButtonCount="10"
                                                                ShowGroupPanel="true"
                                                                AutoExpandAllGroupRows="true"
                                                                ShowFilterRow="true"
                                                                CustomizeElement="@GridExtention.Grid_CustomizeElement"
                                                                ShowSearchBox="true"
                                                                SelectAllCheckboxMode="GridSelectAllCheckboxMode.Mixed"
                                                                KeyboardNavigationEnabled="true">

                                                            <ToolbarTemplate>
                                                                <DxToolbar ItemRenderStyleMode="ToolbarRenderStyleMode.Plain">
                                                                    <DxToolbarItem Visible="@UserAccessCRUID.Create" Text="New" Enabled="@IsStatus(EnumStatusInventoryAdjusment.InProgress)" Click="NewItemDetail_Click" IconCssClass="fa-solid fa-plus" />
                                                                    <DxToolbarItem Visible="@UserAccessCRUID.Update" Text="Edit" Click="() => EditItemDetail_Click(context.Grid)" IconCssClass="fa-solid fa-pen-to-square" Enabled="SelectedDetailDataItems.Count > 0 && InventoryAdjusmentDetails.Count > 0 && IsStatus(EnumStatusInventoryAdjusment.InProgress)" />
                                                                    <DxToolbarItem Visible="@UserAccessCRUID.Delete" Text="Delete" Click="DeleteItemDetail_Click" IconCssClass="fa-solid fa-trash" Enabled="SelectedDetailDataItems.Count > 0 && InventoryAdjusmentDetails.Count > 0 && IsStatus(EnumStatusInventoryAdjusment.InProgress) " />
                                                                    <DxToolbarItem BeginGroup="true" Text="Refresh" Click="RefreshDetails_Click" IconCssClass="fa-solid fa-arrows-rotate" />
                                                                    <DxToolbarItem Text="Column Chooser" Click="(() => GridExtention.ColumnChooserButton_Click(GridDetail))" BeginGroup="true" IconCssClass="fa-solid fa-table-columns" />
                                                                    <DxToolbarItem Text="Export" BeginGroup="true" IconCssClass="fa-solid fa-file-export">
                                                                        <Items>
                                                                            <DxToolbarItem Text="To CSV" Click="(() => GridExtention.ExportCsvItem_Click(GridDetail))" />
                                                                            <DxToolbarItem Text="To XLSX" Click="(() => GridExtention.ExportXlsxItem_Click(GridDetail))" />
                                                                            <DxToolbarItem Text="To XLS" Click="(() => GridExtention.ExportXlsItem_Click(GridDetail))" />
                                                                        </Items>
                                                                    </DxToolbarItem>
                                                                </DxToolbar>
                                                            </ToolbarTemplate>

                                                            <Columns>
                                                                <DxGridSelectionColumn Width="15px" />
                                                                <DxGridDataColumn MinWidth="200" FieldName="Product.Name" Caption="Product" SortIndex="0" />
                                                                <DxGridDataColumn MinWidth="200" FieldName="TeoriticalQty" Caption="Teoritical Qty" />
                                                                <DxGridDataColumn MinWidth="200" FieldName="RealQty" Caption="Real Qty" />
                                                                <DxGridDataColumn MinWidth="200" FieldName="LotSerialNumber" Caption="Lot Serial Number" />
                                                                <DxGridDataColumn MinWidth="200" FieldName="ExpiredDate" Caption="Expired Date" />
                                                                <DxGridDataColumn MinWidth="200" FieldName="Product.Uom.Name" Caption="UoM" />
                                                            </Columns>
                                                            <EditFormTemplate Context="EditFormContext">
                                                                @{
                                                                    var a = (InventoryAdjusmentDetailDto)EditFormContext.EditModel;

                                                                    @if (ExpiredDate is not null)
                                                                    {
                                                                        a.ExpiredDate = ExpiredDate;
                                                                    }
                                                                }
                                                                <div class="row w-100">
                                                                    <div class="col-md-6">
                                                                        <DxFormLayout CssClass="w-100">
                                                                            <DxFormLayoutItem Caption="Product" CaptionCssClass="normal-caption" ColSpanMd="12">
                                                                                <DxComboBox Data="@Products"
                                                                                            @bind-Value="@a.ProductId"
                                                                                            FilteringMode="@DataGridFilteringMode.Contains"
                                                                                            NullText="Select Product..."
                                                                                            TextFieldName="Name"
                                                                                            ReadOnly="@(!IsStatus(EnumStatusInventoryAdjusment.InProgress))"
                                                                                            ValueFieldName="Id"
                                                                                            SelectedItemChanged="@((ProductDto freq) => OnSelectProduct(freq))"
                                                                                            ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                                                            ShowValidationIcon="true" />
                                                                                <ValidationMessage For="@(()=> a.ProductId)"   />
                                                                            </DxFormLayoutItem>

                                                                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Teoritical Qty" ColSpanMd="12">
                                                                                @{
                                                                                    a.TeoriticalQty = TotalQty;
                                                                                }

                                                                                <DxSpinEdit ShowValidationIcon="true"
                                                                                            ReadOnly
                                                                                            MinValue="0" @bind-Value="@a.TeoriticalQty"
                                                                                            NullText="Teoritical Qty"
                                                                                            ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto" />
                                                                                <ValidationMessage For="@(()=> a.TeoriticalQty)"   />
                                                                            </DxFormLayoutItem>

                                                                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Real Qty" ColSpanMd="12">
                                                                                <DxSpinEdit ShowValidationIcon="true"
                                                                                            MinValue="0" @bind-Value="@a.RealQty"
                                                                                            NullText="Real Qty"
                                                                                            ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto" />
                                                                                <ValidationMessage For="@(()=> a.RealQty)"   />
                                                                            </DxFormLayoutItem>
                                                                        </DxFormLayout>
                                                                    </div>

                                                                    <div class="col-md-6">
                                                                        <DxFormLayout CssClass="w-100">
                                                                            @* <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Lot Serial Number" ColSpanMd="12">
                                                                    @{
                                                                    a.LotSerialNumber = LotSerialNumber;
                                                                    }

                                                                    <DxTextBox ShowValidationIcon="true"
                                                                    @bind-Text="@a.LotSerialNumber"
                                                                    ReadOnly
                                                                    NullText="Lot Serial Number"
                                                                    ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto" />
                                                                    <ValidationMessage For="@(()=> a.LotSerialNumber)"   />
                                                                    </DxFormLayoutItem> *@

                                                                            <DxFormLayoutItem Caption="Batch" CaptionCssClass="normal-caption" ColSpanMd="12">
                                                                                <DxComboBox ShowValidationIcon="true" Data="@Batch"
                                                                                            NullText="Select Batch..."
                                                                                            @bind-Value="@a.StockProductId"
                                                                                            TextFieldName="Batch"
                                                                                            ValueFieldName="Id"
                                                                                            SelectedItemChanged="@((StockProductDto a)=> SelectedBatch(a))"
                                                                                            ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                                                            FilteringMode="@DataGridFilteringMode.Contains">
                                                                                </DxComboBox>
                                                                                <ValidationMessage For="@(() => a.StockProductId)" />

                                                                            </DxFormLayoutItem>

                                                                            <DxFormLayoutItem Caption="Expired Date" CaptionCssClass="normal-caption" ColSpanMd="12">
                                                                                <DxDateEdit ShowValidationIcon="true"
                                                                                            ReadOnly
                                                                                            @bind-Date="@SelectedBatchExpired"
                                                                                            NullText="Expired Date">
                                                                                </DxDateEdit>
                                                                            </DxFormLayoutItem>

                                                                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="UoM" ColSpanMd="12">
                                                                                @{
                                                                                    a.UomId = UomId;
                                                                                }

                                                                                <DxComboBox ShowValidationIcon="true" Data="@Uoms"
                                                                                            NullText="UoM"
                                                                                            ReadOnly
                                                                                            TextFieldName="Name"
                                                                                            ValueFieldName="Id"
                                                                                            ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                                                            FilteringMode="@DataGridFilteringMode.Contains"
                                                                                            @bind-Value="a.UomId">
                                                                                </DxComboBox>
                                                                                <ValidationMessage For="@(() => a.UomId)" />
                                                                            </DxFormLayoutItem>

                                                                        </DxFormLayout>
                                                                    </div>
                                                                </div>
                                                            </EditFormTemplate>
                                                        </DxGrid>
                                                    </DxLoadingPanel>
                                                </Items>
                                            </DxFormLayoutGroup>
                                        </DxFormLayout>

                                        @if (IsStatus(EnumStatusInventoryAdjusment.Draft))
                                        {
                                            <div class="card-footer">
                                                <div class="row  justify-content-end">
                                                    <div class="col-auto align-self-end">

                                                        <DxButton RenderStyle="ButtonRenderStyle.Primary" IconCssClass="fa-solid fa-floppy-disk" Text="Save" SubmitFormOnClick="true" />

                                                        <DxButton RenderStyle="ButtonRenderStyle.Danger" IconCssClass="fa-solid fa-xmark" Text="Cancel" Click="CancelItem_Click"></DxButton>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </EditForm>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </section>
    </div>
}
else
{
    <div class="wrapper">
        <McDermott.Web.Components.Layout.BaseContentHeaderLayout Title="Inventory Adjusment" />

        <LoadingIndicatorLayout></LoadingIndicatorLayout>
    </div>
} 