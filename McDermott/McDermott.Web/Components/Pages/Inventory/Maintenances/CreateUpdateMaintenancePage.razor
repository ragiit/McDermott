@page "/inventory/Maintenance/{PageMode}"
@using McDermott.Web.Components.Layout
@rendermode InteractiveServer

<PageTitle>McHealthCare - Maintenance</PageTitle>
<style>
    .upload-container,
    .upload-container > div:first-child {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        width: 100%;
    }

    .drop-file-icon {
        background-size: contain;
        mask-repeat: no-repeat;
        -webkit-mask-repeat: no-repeat;
        background-position: center center;
        background-color: #ADB5BD;
        width: 48px;
        height: 48px;
        -webkit-mask-image: url("../image/icons/drop-file.svg");
        mask-image: url("../image/icons/drop-file.svg");
    }

    .drop-file-label {
        font-weight: 500;
        font-size: 1rem;
    }
</style>

@if (IsAccess && UserAccessCRUID is not null && (UserAccessCRUID.IsCreate || UserAccessCRUID.IsUpdate))
{
    <div class="wrapper">
        <BaseHeaderPage Title="Maintenance" OnClickBack="@(async () => NavigationManager.NavigateTo("inventory/Maintenance"))" ShowBackButton="true" />

        <div class="content">
            <div class="container-fluid">
                <div class="row">
                    <div class="col">
                        @if (postMaintenance.Id != 0)
                        {
                            <div class="row justify-content-end mb-3">
                                <div class="col-auto align-self-end">
                                    <DxTabs RenderMode="TabsRenderMode.AllTabs">
                                        <DxTab Text="Request" Enabled="@(postMaintenance.Status == EnumStatusMaintenance.Request)"></DxTab>
                                        <DxTab Text="In Progress" Enabled="@(postMaintenance.Status == EnumStatusMaintenance.InProgress)"></DxTab>
                                        <DxTab Text="Done" Enabled="@(postMaintenance.Status == EnumStatusMaintenance.Done)"></DxTab>
                                        <DxTab Text="Cancel" Enabled="@(postMaintenance.Status == EnumStatusMaintenance.Canceled)"></DxTab>
                                    </DxTabs>
                                </div>
                            </div>
                        }

                        @if (postMaintenance.Status != EnumStatusMaintenance.Done && postMaintenance.Status != EnumStatusMaintenance.Canceled && postMaintenance.Status != EnumStatusMaintenance.Scrap)
                        {
                            <div class="sticky">
                                <div class="card">
                                    <div class="card-body">
                                        <div class="row justify-content-between">
                                            <div class="col-auto align-self-start">
                                                @if (DataDetailProduct is not null)
                                                {
                                                    <DxButton Text="In Progress" Visible="@(postMaintenance.Status == EnumStatusMaintenance.Request)" RenderStyle="ButtonRenderStyle.Primary" IconCssClass="fa-solid fa-check" Click="InProgress_Click"></DxButton>
                                                    <DxButton Text="Cancel" Visible="@(postMaintenance.Status == EnumStatusMaintenance.Request)" RenderStyle="ButtonRenderStyle.Danger" IconCssClass="fa-solid fa-xmark" Click="Cancel_Click"></DxButton>
                                                    <DxButton Text="Done" Visible="@(postMaintenance.Status == EnumStatusMaintenance.Repaired)" RenderStyle="ButtonRenderStyle.Success" IconCssClass="fa-solid fa-check" Click="Done_Click"></DxButton>
                                                    <DxButton Text="Cancel" Visible="@(postMaintenance.Status == EnumStatusMaintenance.Repaired || postMaintenance.Status == EnumStatusMaintenance.Scrap)" RenderStyle="ButtonRenderStyle.Danger" IconCssClass="fa-solid fa-xmark" Click="Cancel_Click"></DxButton>
                                                }
                                            </div>
                                            <div class="col-auto align-self-start">
                                                <DxButton RenderStyle="ButtonRenderStyle.Primary" Visible="@(postMaintenance.Id == 0 || postMaintenance.Status == EnumStatusMaintenance.Request)" RenderStyleMode="@ButtonRenderStyleMode.Outline" IconCssClass="fa-solid fa-floppy-disk" Text="Save" SubmitFormOnClick="true" Click="OnSave"></DxButton>
                                                <DxButton RenderStyle="ButtonRenderStyle.Danger" Visible="@(postMaintenance.Id == 0 || postMaintenance.Status == EnumStatusMaintenance.Request)" RenderStyleMode="@ButtonRenderStyleMode.Outline" IconCssClass="fa-solid fa-xmark" CssClass="ml-1" Text="Discard" Click="onDiscard"></DxButton>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }

                        <DxLoadingPanel @bind-Visible="PanelVisible"
                                        IsContentBlocked="true"
                                        ApplyBackgroundShading="true"
                                        IndicatorAreaVisible="true"
                                        Text="Fetching Data...">
                            <div class="card">
                                <div class="card-body">
                                    <EditForm Model="@postMaintenance" Context="EditContext" OnInvalidSubmit="@HandleInvalidSubmit" OnValidSubmit="@HandleValidSubmit">
                                        <DataAnnotationsValidator />
                                        <AntiforgeryToken />
                                        <div class="row w-100">
                                            <DxFormLayout CssClass="w-100">
                                                <DxFormLayoutItem ColSpanMd="12" CssClass="ml-2" Caption="Sequence Kode">
                                                    <h5>@postMaintenance.Sequence</h5>
                                                </DxFormLayoutItem>
                                            </DxFormLayout>
                                            <DxFormLayout CssClass="w-100">
                                                <DxFormLayoutItem CaptionCssClass="normal-caption" CssClass="ml-2" ColSpanMd="12" Caption="Title">
                                                    <MyTextBox @bind-Text="@postMaintenance.Title"
                                                               NullText="Input Title..."
                                                               ReadOnly="@IsReadOnly"
                                                               ShowValidationIcon="true" />
                                                    <ValidationMessage For="@(()=>postMaintenance.Title)"></ValidationMessage>
                                                </DxFormLayoutItem>
                                            </DxFormLayout>
                                            <div class="col-md-6">
                                                <DxFormLayout CssClass="mt w-100">
                                                    <DxFormLayoutItem CaptionCssClass="normal-caption" ColSpanMd="12" Caption="Request By">
                                                        <MyDxComboBox Data="@getRequestBy"
                                                                      NullText="Select Request By.."
                                                                      AllowUserInput="true"
                                                                      @bind-Value="@postMaintenance.RequestById"
                                                                      TextFieldName="Name"
                                                                      ReadOnly="@IsReadOnly"
                                                                      ValueFieldName="Id"
                                                                      @oninput="OnInputRequestBy">

                                                            <Columns>
                                                                <DxListEditorColumn FieldName="@nameof(User.Name)" Caption="Name" />
                                                            </Columns>
                                                        </MyDxComboBox>
                                                    </DxFormLayoutItem>
                                                    <DxFormLayoutItem CaptionCssClass="normal-caption" ColSpanMd="12" Caption="Request Date">
                                                        <DxDateEdit @bind-Date="@postMaintenance.RequestDate" DisplayFormat="dd MMMM yyyy" ReadOnly="@IsReadOnly"></DxDateEdit>
                                                    </DxFormLayoutItem>
                                                    <DxFormLayoutItem CaptionCssClass="normal-caption" ColSpanMd="12" Caption="Location">
                                                        <MyDxComboBox Data="@getLocation"
                                                                      AllowUserInput="true"
                                                                      NullText="Select Location"
                                                                      @bind-Value="@postMaintenance.LocationId"
                                                                      TextFieldName="Name"
                                                                      ReadOnly="@IsReadOnly"
                                                                      ValueFieldName="Id"
                                                                      @oninput="OnInputLocation">

                                                            <Columns>
                                                                <DxListEditorColumn FieldName="@nameof(Locations.Name)" Caption="Name" />
                                                                <DxListEditorColumn FieldName="@nameof(Locations.Type)" Caption="Code" />
                                                            </Columns>
                                                        </MyDxComboBox>
                                                        @if (!string.IsNullOrEmpty(Message))
                                                        {
                                                            <p>@Message</p>
                                                        }
                                                    </DxFormLayoutItem>
                                                    <DxFormLayoutItem CaptionCssClass="normal-caption" ColSpanMd="12" Caption="Maintenance By">
                                                        <DxCheckBox Checked="postMaintenance.isInternal"
                                                                    CheckedExpression="@(()=>postMaintenance.isInternal)"
                                                                    CssClass="w-100"
                                                                    ReadOnly="@IsReadOnly"
                                                                    CheckedChanged="@((bool value)=>unCheckIN(value))">
                                                            <div class="normal-caption">
                                                                Internal
                                                            </div>
                                                        </DxCheckBox>
                                                        <div class="row">
                                                            <div class="col-md-4">
                                                                <DxCheckBox Checked="@postMaintenance.isExternal"
                                                                            CssClass="w-100"
                                                                            ReadOnly="@IsReadOnly"
                                                                            CheckedExpression="@(()=>postMaintenance.isExternal)"
                                                                            CheckedChanged="@((bool value)=>unCheckEX(value))">
                                                                    <div class="normal-caption">
                                                                        External
                                                                    </div>
                                                                </DxCheckBox>
                                                            </div>
                                                            @if (postMaintenance.isExternal)
                                                            {
                                                                <div class="col-md-8">
                                                                    <MyTextBox @bind-Text="@postMaintenance.VendorBy" ReadOnly="@IsReadOnly" NullText="Vendor By" />
                                                                </div>
                                                            }
                                                        </div>
                                                    </DxFormLayoutItem>

                                                </DxFormLayout>
                                            </div>
                                            <div class="col-md-6">
                                                <DxFormLayout CssClass="mt w-100">
                                                    <DxFormLayoutItem CaptionCssClass="normal-caption" ColSpanMd="12" Caption="Responsible">
                                                        <MyDxComboBox Data="@getResponsibleBy"
                                                                      NullText="Select Responsible By.."
                                                                      AllowUserInput="true"
                                                                      @bind-Value="@postMaintenance.ResponsibleById"
                                                                      TextFieldName="Name"
                                                                      ReadOnly="@IsReadOnly"
                                                                      ValueFieldName="Id"
                                                                      @oninput="OnInputResponsibleBy">
                                                            <Columns>
                                                                <DxListEditorColumn FieldName="@nameof(User.Name)" Caption="Name" />
                                                            </Columns>
                                                        </MyDxComboBox>
                                                    </DxFormLayoutItem>
                                                    <DxFormLayoutItem CaptionCssClass="normal-caption" ColSpanMd="12" Caption="Schedule Date">
                                                        <DxDateEdit @bind-Date="@postMaintenance.ScheduleDate" DisplayFormat="dd MMMM yyyy" ReadOnly="@IsReadOnly"></DxDateEdit>
                                                    </DxFormLayoutItem>
                                                    <DxFormLayoutItem CaptionCssClass="normal-caption" ColSpanMd="12" Caption="Maintenance Type">
                                                        <DxCheckBox Checked="postMaintenance.isCorrective"
                                                                    CheckedExpression="@(()=>postMaintenance.isCorrective)"
                                                                    CssClass="w-100"
                                                                    ReadOnly="@IsReadOnly"
                                                                    CheckedChanged="@((bool value)=>unCheckCR(value))">
                                                            <div class="normal-caption">
                                                                Corrective
                                                            </div>
                                                        </DxCheckBox>
                                                        <DxCheckBox Checked="@postMaintenance.isPreventive"
                                                                    CssClass="w-100"
                                                                    ReadOnly="@IsReadOnly"
                                                                    CheckedExpression="@(()=>postMaintenance.isPreventive)"
                                                                    CheckedChanged="@((bool value)=>unCheckPR(value))">
                                                            <div class="normal-caption">
                                                                Preventive
                                                            </div>
                                                        </DxCheckBox>
                                                    </DxFormLayoutItem>
                                                    @if (postMaintenance.isPreventive)
                                                    {
                                                        <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Recurrent" ColSpanMd="12">
                                                            <DxCheckBox Checked="postMaintenance.Recurrent"
                                                                        CheckedExpression="@(()=>postMaintenance.Recurrent)"
                                                                        CheckedChanged="@((bool value)=>unCheckRE(value))"
                                                                        ReadOnly="@IsReadOnly"
                                                                        CssClass="w-100">
                                                            </DxCheckBox>
                                                        </DxFormLayoutItem>
                                                    }
                                                    @if (postMaintenance.Recurrent)
                                                    {
                                                        var aa = postMaintenance.Recurrent;
                                                        <DxFormLayoutItem CaptionCssClass="normal-caption" ColSpanMd="12" Caption="Repeat Every">
                                                            <div class="row">
                                                                <div class="col-md-3">
                                                                    <DxSpinEdit @bind-Value="@postMaintenance.RepeatNumber" NullText="Number" ReadOnly="@IsReadOnly" />
                                                                </div>
                                                                <div class="col-md-9">
                                                                    <MyDxComboBox Data="@RepeatWork" @bind-Value="@postMaintenance.RepeatWork" ReadOnly="@IsReadOnly"></MyDxComboBox>
                                                                </div>
                                                            </div>
                                                        </DxFormLayoutItem>
                                                    }
                                                </DxFormLayout>
                                            </div>
                                        </div>
                                        @if (postMaintenance.Id != 0)
                                        {
                                            <DxFormLayout CssClass="w-100">
                                                <DxFormLayoutItem CaptionCssClass=" required-caption" Context="ItemContext" CaptionPosition="CaptionPosition.Vertical" ColSpanMd="12">
                                                    <Template>
                                                        <DxLoadingPanel @bind-Visible="PanelVisibleProduct"
                                                                        IsContentBlocked="true"
                                                                        ApplyBackgroundShading="true"
                                                                        IndicatorAreaVisible="true"
                                                                        Text="Fetching Data...">
                                                            <_BaseMyGrid @ref="Grid"
                                                                         Data="DataDetailProduct"
                                                                         @bind-SelectedDataItems="@SelectedDataItems"
                                                                         EditModelSaving="OnSaveProduct"
                                                                         DataItemDeleting="DeleteProduct"
                                                                         FocusedRowChanged="Grid_FocusedRowChanged"
                                                                         SearchTextChanged="OnSearchBoxChanged"
                                                                         KeyFieldName="Id">
                                                                <ToolbarTemplate>
                                                                    <MyDxToolbarBase TItem="MaintenanceProduct"
                                                                                     SelectedDataItems="@SelectedDataItems"
                                                                                     NewItem_Click="@NewItem_Click"
                                                                                     EditItem_Click="@(()=>EditItem_Click(context.Grid))"
                                                                                     DeleteItem_Click="@DeleteItem_Click"
                                                                                     Refresh_Click="@Refresh_Click"
                                                                                     IsImport="false"
                                                                                     VisibleNew="UserAccessCRUID.IsCreate"
                                                                                     VisibleEdit="UserAccessCRUID.IsUpdate"
                                                                                     VisibleDelete="@isActiveButton" />
                                                                </ToolbarTemplate>
                                                                <Columns>
                                                                    <DxGridSelectionColumn Width="15px" />
                                                                    <DxGridDataColumn FieldName="Product.Name" Caption="Product Name" SortIndex="0" />
                                                                    <DxGridDataColumn FieldName="SerialNumber" Caption="Serial Number" />
                                                                    <DxGridDataColumn FieldName="Expired" Caption="Expired" />
                                                                    <DxGridDataColumn FieldName="Note" Caption="Note" />

                                                                    @if (postMaintenance.Status == EnumStatusMaintenance.InProgress)
                                                                    {
                                                                        <DxGridDataColumn Caption="Document">
                                                                            <CellDisplayTemplate>
                                                                                @{
                                                                                    var Doc = (context.DataItem as MaintenanceProduct); // Extract the current Maintenance object
                                                                                }

                                                                                <div style="display: flex; justify-content: center; align-items: center; height: 100%;">
                                                                                    <DxButton RenderStyle="ButtonRenderStyle.Secondary"
                                                                                              CssClass="align-self-center"
                                                                                              Attributes="@(new Dictionary<string, object> { ["title"] = "Upload Document Maintenance" })"
                                                                                              IconCssClass="fa-solid fa-file-arrow-up"
                                                                                              Click="@(() => OpenPopUp(Doc))" /> <!-- Pass the extracted object to the method -->

                                                                                </div>

                                                                            </CellDisplayTemplate>
                                                                        </DxGridDataColumn>


                                                                        <DxGridDataColumn FieldName="Status" Caption="Status">
                                                                            <CellDisplayTemplate>
                                                                                @{
                                                                                    var status = (context.DataItem as MaintenanceProduct)?.Status;
                                                                                }

                                                                                @if (status == null)
                                                                                {
                                                                                    <DxComboBox Data="@listString"
                                                                                                NullText="Select Status"
                                                                                                @bind-Value="StatusString"
                                                                                                SelectedItemChanged="((string value) => selectedStatus((context.DataItem as MaintenanceProduct).Id, value))" />
                                                                                }
                                                                                else
                                                                                {
                                                                                    @status
                                                                                }
                                                                            </CellDisplayTemplate>
                                                                        </DxGridDataColumn>

                                                                    }
                                                                    else if (postMaintenance.Status == EnumStatusMaintenance.Done)
                                                                    {
                                                                        <DxGridDataColumn Caption="Document">
                                                                            <CellDisplayTemplate>
                                                                                @{
                                                                                    var Doc = (context.DataItem as MaintenanceProduct);
                                                                                }
                                                                                <div style="display: flex; justify-content: center; align-items: center; height: 100%;">
                                                                                    <DxButton RenderStyle="ButtonRenderStyle.Primary"
                                                                                              CssClass="align-self-center"
                                                                                              Attributes="@(new Dictionary<string, object> { ["title"] = "Upload Document Maintenance" })"
                                                                                              IconCssClass="fa-solid fa-file"
                                                                                              Click="@(() => OpenFile(Doc))" /> <!-- Pass the extracted object to the method -->

                                                                                </div>
                                                                            </CellDisplayTemplate>
                                                                        </DxGridDataColumn>
                                                                        <DxGridDataColumn FieldName="Status" Caption="Status">
                                                                            <CellDisplayTemplate>
                                                                                @((MarkupString)GetIssueStatusIconHtml((context.DataItem as MaintenanceProduct).Status))
                                                                            </CellDisplayTemplate>
                                                                        </DxGridDataColumn>
                                                                    }
                                                                </Columns>

                                                                <EditFormTemplate Context="EditFormContextt">
                                                                    @{
                                                                        postMaintenanceProduct = (MaintenanceProduct)EditFormContextt.EditModel;
                                                                    }
                                                                    <div class="row">
                                                                        <div class="col-6">
                                                                            <DxFormLayout CssClass="w-100">
                                                                                <DxFormLayoutItem CaptionCssClass="normal-caption" ColSpanMd="12" Caption="Product Name">
                                                                                    <MyDxComboBox Data="@getProduct"
                                                                                                  NullText="Select Product..."
                                                                                                  AllowUserInput="true"
                                                                                                  @bind-Value="@postMaintenanceProduct.ProductId"
                                                                                                  TextFieldName="Name"
                                                                                                  ValueFieldName="Id"
                                                                                                  SelectedItemChanged="((ProductDto value)=>selectByProduct(value))"
                                                                                                  @oninput="OnInputProduct">
                                                                                        <Columns>
                                                                                            <DxListEditorColumn FieldName="@nameof(ProductDto.Name)" Caption="Name" />
                                                                                            <DxListEditorColumn FieldName="@nameof(ProductDto.Brand)" Caption="Brand" />
                                                                                        </Columns>
                                                                                    </MyDxComboBox>
                                                                                </DxFormLayoutItem>
                                                                                <DxFormLayoutItem Caption="Batch" CaptionCssClass="normal-caption" ColSpanMd="12">
                                                                                    <MyDxComboBox Data="@Batch"
                                                                                                  NullText="Select Batch..."
                                                                                                  @bind-Value="@postMaintenanceProduct.SerialNumber"
                                                                                                  SelectedItemChanged="((string value) => selectByBatch(value))"></MyDxComboBox>
                                                                                </DxFormLayoutItem>
                                                                                <DxFormLayoutItem Caption="current Maintenance Date" CaptionCssClass="normal-caption" ColSpanMd="12">
                                                                                    <DxDateEdit @bind-Date="@currentExpiryDate" ReadOnly></DxDateEdit>
                                                                                </DxFormLayoutItem>
                                                                            </DxFormLayout>
                                                                        </div>
                                                                        <div class="col-6">
                                                                            <DxFormLayout CssClass="w-100">
                                                                                @if (postMaintenance.Recurrent == true)
                                                                                {
                                                                                    <DxFormLayoutItem Caption="Next Maintenance Date" CaptionCssClass="normal-caption" ColSpanMd="12">
                                                                                        <DxDateEdit @bind-Date="@postMaintenanceProduct.Expired" ReadOnly></DxDateEdit>
                                                                                    </DxFormLayoutItem>
                                                                                }
                                                                                <DxFormLayoutItem Caption="Note" CaptionCssClass="normal-caption" ColSpanMd="12">
                                                                                    <DxMemo @bind-Text="@postMaintenanceProduct.Note" NullText="Entri Note Here..."></DxMemo>
                                                                                </DxFormLayoutItem>

                                                                            </DxFormLayout>
                                                                        </div>
                                                                    </div>
                                                                </EditFormTemplate>
                                                            </_BaseMyGrid>
                                                        </DxLoadingPanel>
                                                    </Template>
                                                </DxFormLayoutItem>
                                            </DxFormLayout>
                                        }

                                    </EditForm>
                                </div>
                            </div>
                        </DxLoadingPanel>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <DxPopup HeaderText="Upload Document" HeaderCssClass="fw-bold"
             HorizontalAlignment="@DevExpress.Blazor.HorizontalAlignment.Center"
             VerticalAlignment="@DevExpress.Blazor.VerticalAlignment.Center"
             @bind-Visible="@showPopUpUpload" ShowCloseButton="true" Closed="OnPopupClosed">
        <div class="upload-container">
            <div style="@(SelectedFilesCount > 0 ? "display: none" : string.Empty)">
                <span class="drop-file-icon mb-3"></span>
                <span class="drop-file-label mb-3">Click the Select File button to select files</span>
            </div>
            <DxUpload Name="myFile"
                      AllowMultiFileUpload="true"
                      UploadUrl="@GetUploadUrl($"api/UploadFiles/UploadMultipleFiles")"
                      SelectedFilesChanged="@OnSelectedFilesChanged"
                      MaxFileSize="300000"
                      AllowedFileExtensions="@(new List<string> { ".pdf", ".docx" })"
                      UploadMode="UploadMode.Instant"
                      UploadError="OnUploadError"
                      UploadCompleted="OnUploadCompleted">
            </DxUpload>

            @if (!string.IsNullOrEmpty(UploadErrorMessage))
            {
                <div class="alert alert-danger mt-3">@UploadErrorMessage</div>
            }
            @if (UploadSuccessMessage != null)
            {
                <div class="alert alert-success mt-3">@UploadSuccessMessage</div>
            }
        </div>
    </DxPopup>

    <DxPopup HeaderText="Upload Document" HeaderCssClass="fw-bold" Width="auto"
             HorizontalAlignment="@DevExpress.Blazor.HorizontalAlignment.Center"
             VerticalAlignment="@DevExpress.Blazor.VerticalAlignment.Center"
             @bind-Visible="@showPopUpFile" ShowCloseButton="true" Closed="OnPopupFileClosed">

        <DxLoadingPanel @bind-Visible="PanelVisibleProduct"
                        IsContentBlocked="true"
                        ApplyBackgroundShading="true"
                        IndicatorAreaVisible="true"
                        Text="Fetching Data...">
            <_BaseMyGrid @ref="Grid"
                         Data="eData"
                         @bind-SelectedDataItems="@SelectedDataItemsFile"                        
                         FocusedRowChanged="GridFile_FocusedRowChanged"
                         SearchTextChanged="OnSearchBoxChanged"
                         KeyFieldName="Id">
                <ToolbarTemplate>
                    <MyDxToolbarBase TItem="MaintenanceRecord"
                                     SelectedDataItems="@SelectedDataItemsFile"
                                     Refresh_Click="@RefreshFile_Click"
                                     IsExport="false"
                                     IsImport="false"
                                     VisibleNew="false"
                                     VisibleEdit="false"
                                     VisibleDelete="false"/>
                </ToolbarTemplate>
                <Columns>
                    <DxGridSelectionColumn Width="15px" />
                    <DxGridDataColumn FieldName="Product.Name" Caption="Product Name" SortIndex="0" />
                    <DxGridDataColumn FieldName="SequenceProduct" Caption="Sequence" />
                    <DxGridDataColumn FieldName="DocumentName" Caption="Document Name" />
                    <DxGridDataColumn Caption="Action">
                        <CellDisplayTemplate>
                            @{
                                var Doc = (context.DataItem as MaintenanceRecord); // Extract the current Maintenance object
                            }

                            <div style="display: flex; justify-content: center; align-items: center; height: 100%;">
                                <DxButton RenderStyle="ButtonRenderStyle.Secondary"
                                          CssClass="align-self-center"
                                          Attributes="@(new Dictionary<string, object> { ["title"] = "Download Document Maintenance" })"
                                          IconCssClass="fa-solid fa-file-arrow-down"/> <!-- Pass the extracted object to the method -->

                            </div>

                        </CellDisplayTemplate>
                    </DxGridDataColumn>
                </Columns>
            </_BaseMyGrid>
        </DxLoadingPanel>
    </DxPopup>
}
else if (UserAccessCRUID is not null && !UserAccessCRUID.IsRead)
{
    <InvalidPermissionPage />
}
else
{
    <LoadingIndicatorLayout />
}
