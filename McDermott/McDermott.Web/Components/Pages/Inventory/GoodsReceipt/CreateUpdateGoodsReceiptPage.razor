@page "/inventory/goods-receipts/{PageMode}"
@using McDermott.Web.Components.Layout
@rendermode InteractiveServer

<PageTitle>McHealthCare - Good Receipt</PageTitle>

@if (IsAccess && UserAccessCRUID is not null && (UserAccessCRUID.IsCreate || UserAccessCRUID.IsUpdate))
{
    <div class="wrapper">
        <BaseHeaderPage Title="Good Receipt" OnClickBack="@(async () => NavigationManager.NavigateTo("inventory/goods-receipts"))" ShowBackButton="true" />

        <div class="content">
            <div class="container-fluid">
                <div class="row">
                    <div class="col">
                        <DxLoadingPanel @bind-Visible="PanelVisible"
                                        IsContentBlocked="true"
                                        ApplyBackgroundShading="true"
                                        IndicatorAreaVisible="true"
                                        Text="Fetching Data...">
                            <EditForm Model="@postGoodsReceipt" @onkeypress="@KeyPressHandler" Context="EditFormContext" OnInvalidSubmit="@HandleInvalidSubmit" OnValidSubmit="@HandleValidSubmit">
                                <DataAnnotationsValidator />
                                <AntiforgeryToken />
                                @if (postGoodsReceipt.Id != 0)
                                {
                                    <div class="row justify-content-end mb-3">
                                        <div class="col-auto align-self-end">
                                            <DxTabs RenderMode="TabsRenderMode.AllTabs">
                                                <DxTab Text="Draft" Enabled="@(postGoodsReceipt.Status == EnumStatusGoodsReceipt.Draft)"></DxTab>
                                                <DxTab Text="Process" Enabled="@(postGoodsReceipt.Status == EnumStatusGoodsReceipt.Process)"></DxTab>
                                                <DxTab Text="Done" Enabled="@(postGoodsReceipt.Status == EnumStatusGoodsReceipt.Done)"></DxTab>
                                                <DxTab Text="Cancel" Enabled="@(postGoodsReceipt.Status == EnumStatusGoodsReceipt.Cancel)"></DxTab>
                                            </DxTabs>
                                        </div>
                                    </div>
                                }


                                @if (postGoodsReceipt.Status != EnumStatusGoodsReceipt.Done && postGoodsReceipt.Status != EnumStatusGoodsReceipt.Cancel)
                                {
                                    <div class="sticky">
                                        <div class="card">
                                            <div class="card-body">
                                                <div class="row justify-content-between">
                                                    <div class="col-auto align-self-start">
                                                        @if (getGoodsReceiptDetails.Count > 0 && postGoodsReceipt.Id != 0)
                                                        {
                                                            <DxButton Text="Process" Visible="@(postGoodsReceipt.Id != 0 && postGoodsReceipt.Status == EnumStatusGoodsReceipt.Draft)" RenderStyle="ButtonRenderStyle.Primary" IconCssClass="fa-solid fa-circle-check" Click="onProcess"></DxButton>
                                                            <DxButton Text="Cancel" Visible="@(postGoodsReceipt.Id != 0 && postGoodsReceipt.Status == EnumStatusGoodsReceipt.Draft)" RenderStyle="ButtonRenderStyle.Danger" IconCssClass="fa-solid fa-circle-xmark" Click="onCancel"></DxButton>
                                                            <DxButton Text="Validation" Visible="@(postGoodsReceipt.Id != 0 && postGoodsReceipt.Status == EnumStatusGoodsReceipt.Process)" RenderStyle="ButtonRenderStyle.Primary" IconCssClass="fa-solid fa-circle-check" Click="onValidation"></DxButton>
                                                            <DxButton Text="Cancel" Visible="@(postGoodsReceipt.Id != 0 && postGoodsReceipt.Status == EnumStatusGoodsReceipt.Process)" RenderStyle="ButtonRenderStyle.Danger" IconCssClass="fa-solid fa-circle-xmark" Click="onCancel"></DxButton>
                                                        }
                                                    </div>
                                                    <div class="col-auto align-self-start">
                                                        <DxButton RenderStyle="ButtonRenderStyle.Primary" Visible="@(postGoodsReceipt.Id == 0 ||  postGoodsReceipt.Status == EnumStatusGoodsReceipt.Draft)" RenderStyleMode="@ButtonRenderStyleMode.Outline" CssClass="mr-1" IconCssClass="fa-solid fa-floppy-disk" Text="Save" SubmitFormOnClick="true"></DxButton>
                                                        <DxButton RenderStyle="ButtonRenderStyle.Danger" Visible="@(postGoodsReceipt.Id == 0 || postGoodsReceipt.Status == EnumStatusGoodsReceipt.Draft)" RenderStyleMode="@ButtonRenderStyleMode.Outline" IconCssClass="fa-solid fa-xmark" Text="Discard" Click="onDiscard"></DxButton>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }

                                <div class="card">
                                    <div class="card-header">
                                    </div>
                                    <div class="card-body">

                                        <DxFormLayout CssClass="mt">
                                            @if (postGoodsReceipt.Id != 0)
                                            {
                                                <DxFormLayoutItem ColSpanMd="12">
                                                    <h3 class="fw-bolder">@postGoodsReceipt.ReceiptNumber</h3>
                                                </DxFormLayoutItem>
                                            }
                                            <DxFormLayoutItem Caption="Schedule Date" CaptionCssClass="normal-caption" ColSpanMd="12">
                                                <DxDateEdit @bind-Date="@postGoodsReceipt.SchenduleDate" DisplayFormat="dd MMMM yyyy" Format="d" ReadOnly="@(postGoodsReceipt.Id != 0 && postGoodsReceipt.Status != EnumStatusGoodsReceipt.Draft)"></DxDateEdit>
                                            </DxFormLayoutItem>
                                            <!-- Checkbox for GR (Gudang Resource) -->
                                            <DxFormLayoutItem Caption="GR (Gudang Resource)" CaptionCssClass="normal-caption" ColSpanMd="12">
                                                <DxCheckBox @bind-Checked="@isGrChecked" Text="Enable Source Selection" ReadOnly="@(postGoodsReceipt.Id != 0 && postGoodsReceipt.Status != EnumStatusGoodsReceipt.Draft)"></DxCheckBox>
                                            </DxFormLayoutItem>
                                            @if (isGrChecked)
                                            {
                                                <DxFormLayoutItem Caption="Resource Location" CaptionCssClass="normal-caption warcing-caption" ColSpanMd="12">
                                                    <MyDxComboBox Data="@getSource"
                                                                  NullText="Select Source"
                                                                  @ref="refSourceComboBox"
                                                                  @bind-Value="@postGoodsReceipt.SourceId"
                                                                  TextFieldName="Name"
                                                                  ReadOnly="@(postGoodsReceipt.Id != 0 && postGoodsReceipt.Status != EnumStatusGoodsReceipt.Draft)"
                                                                  ValueFieldName="Id"
                                                                  TextChanged="((string e) => OnInputSourceChanged(e))">
                                                        <Buttons>
                                                            <DxEditorButton Click="OnSearchSourceIndexDecrement"
                                                                            IconCssClass="fa-solid fa-caret-left"
                                                                            Tooltip="Previous Index" />
                                                            <DxEditorButton Click="OnSearchSource"
                                                                            IconCssClass="fa-solid fa-magnifying-glass"
                                                                            Tooltip="Search" />
                                                            <DxEditorButton Click="OnSearchSourceIndexIncrement"
                                                                            IconCssClass="fa-solid fa-caret-right"
                                                                            Tooltip="Next Index" />
                                                        </Buttons>
                                                        <Columns>
                                                            <DxListEditorColumn FieldName="@nameof(Locations.Name)" Caption="Name" />
                                                            <DxListEditorColumn FieldName="@nameof(Locations.ParentLocation.Name)" Caption="Parent" />
                                                        </Columns>
                                                    </MyDxComboBox>

                                                </DxFormLayoutItem>
                                            }
                                            <DxFormLayoutItem Caption="Destination Location" CaptionCssClass="normal-caption warcing-caption" ColSpanMd="12">
                                                <MyDxComboBox Data="@getDestination"
                                                              NullText="Select Destination"
                                                              @ref="refDestinationComboBox"
                                                              @bind-Value="@postGoodsReceipt.DestinationId"
                                                              ReadOnly="@(postGoodsReceipt.Id != 0 && postGoodsReceipt.Status != EnumStatusGoodsReceipt.Draft)"
                                                              TextFieldName="Name"
                                                              ValueFieldName="Id"
                                                              TextChanged="((string e) => OnInputDestinationChanged(e))">
                                                    <Buttons>
                                                        <DxEditorButton Click="OnSearchDestinationIndexDecrement"
                                                                        IconCssClass="fa-solid fa-caret-left"
                                                                        Tooltip="Previous Index" />
                                                        <DxEditorButton Click="OnSearchDestination"
                                                                        IconCssClass="fa-solid fa-magnifying-glass"
                                                                        Tooltip="Search" />
                                                        <DxEditorButton Click="OnSearchDestinationIndexIncrement"
                                                                        IconCssClass="fa-solid fa-caret-right"
                                                                        Tooltip="Next Index" />
                                                    </Buttons>
                                                    <Columns>
                                                        <DxListEditorColumn FieldName="@nameof(Locations.Name)" Caption="Name" />
                                                        <DxListEditorColumn FieldName="@nameof(Locations.ParentLocation.Name)" Caption="Parent" />
                                                    </Columns>
                                                </MyDxComboBox>
                                                <ValidationMessage For="@(()=>postGoodsReceipt.DestinationId)"></ValidationMessage>
                                            </DxFormLayoutItem>
                                            <DxFormLayoutItem Caption="Purchase Number" CaptionCssClass="normal-caption" ColSpanMd="12">
                                                <DxTextBox @bind-Text="@postGoodsReceipt.NumberPurchase"
                                                           NullText="Input Purchase Number..."
                                                           ReadOnly="@(postGoodsReceipt.Id != 0 && postGoodsReceipt.Status != EnumStatusGoodsReceipt.Draft)"
                                                           ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                           ShowValidationIcon="true" />
                                            </DxFormLayoutItem>
                                            <hr />
                                            @if (postGoodsReceipt.Id != 0)
                                            {
                                                <DxFormLayoutGroup Caption="Product Lines" ColSpanMd="12" CssClass="mt-3">
                                                    <Items>
                                                        <DxLoadingPanel @bind-Visible="PanelVisible"
                                                                        IsContentBlocked="true"
                                                                        ApplyBackgroundShading="true"
                                                                        IndicatorAreaVisible="true"
                                                                        Text="Fetching Data...">
                                                            <MyGrid @ref="Grid"
                                                                    Data="getGoodsReceiptDetails"
                                                                    @bind-SelectedDataItems="@SelectedDataItems"
                                                                    EditModelSaving="OnSaveProduct"
                                                                    DataItemDeleting="OnDelete"
                                                                    FocusedRowChanged="Grid_FocusedRowChanged"
                                                                    SearchTextChanged="OnSearchBoxChanged"
                                                                    KeyFieldName="Id">
                                                                <ToolbarTemplate>
                                                                    <MyDxToolbarBase TItem="GoodsReceiptDetailDto"
                                                                                     Items="@getGoodsReceiptDetails"
                                                                                     Grid="Grid"
                                                                                     SelectedDataItems="@SelectedDataItems"
                                                                                     NewItem_Click="@NewItem_Click"
                                                                                     EditItem_Click="@(async () => await EditItem_Click(context.Grid))"
                                                                                     DeleteItem_Click="@DeleteItem_Click"
                                                                                     Refresh_Click="@RefreshItem_Click"
                                                                                     IsImport="false"
                                                                                     EnableUpdate="@(postGoodsReceipt.Id != 0 && postGoodsReceipt.Status != EnumStatusGoodsReceipt.Process && postGoodsReceipt.Status != EnumStatusGoodsReceipt.Done)"
                                                                                     EnableCreate="@(postGoodsReceipt.Id != 0 && postGoodsReceipt.Status == EnumStatusGoodsReceipt.Draft)"
                                                                                     EnableDelete="@(postGoodsReceipt.Id != 0 && postGoodsReceipt.Status == EnumStatusGoodsReceipt.Draft)"
                                                                                     VisibleNew="UserAccessCRUID.IsCreate"
                                                                                     VisibleEdit="UserAccessCRUID.IsUpdate"
                                                                                     VisibleDelete="UserAccessCRUID.IsDelete" />
                                                                </ToolbarTemplate>
                                                                <Columns>
                                                                    <DxGridSelectionColumn Width="15px" />
                                                                    <DxGridDataColumn FieldName="Product.Name" Caption="Product Name" SortIndex="0" />
                                                                    <DxGridDataColumn FieldName="Qty" Caption="Stock" MinWidth="90" Width="190" />
                                                                    <DxGridDataColumn FieldName="Product.PurchaseUom.Name" Caption="Purchase Of Measure" MinWidth="90" Width="190" />
                                                                    <DxGridDataColumn FieldName="Product.Uom.Name" Caption="Unit Of Measure" />
                                                                    <DxGridDataColumn FieldName="Batch" Caption="Serial Number" />
                                                                    <DxGridDataColumn FieldName="ExpiredDate" Caption="Expired Date" />
                                                                </Columns>
                                                                <EditFormTemplate Context="EditFormContextt">
                                                                    @{
                                                                        postGoodsReceiptDetail = (GoodsReceiptDetailDto)EditFormContextt.EditModel;
                                                                        if (postGoodsReceiptDetail?.Product?.TraceAbility == true)
                                                                        {
                                                                            postGoodsReceiptDetail.TraceAbility = true;
                                                                        }
                                                                        else if (postGoodsReceiptDetail?.Product?.TraceAbility == false)
                                                                        {
                                                                            postGoodsReceiptDetail.TraceAbility = false;
                                                                        }

                                                                    }
                                                                    <DxFormLayout CssClass="w-100 mt">
                                                                        <div class="col-md-6">
                                                                            <DxFormLayoutItem Caption="Product Name" CaptionCssClass="normal-caption" ColSpanMd="12" CaptionPosition="CaptionPosition.Vertical">
                                                                                <DxComboBox Data="@getProduct"
                                                                                            @bind-Value="@postGoodsReceiptDetail.ProductId"
                                                                                            NullText="Select Product Name.."
                                                                                            TextFieldName="Name"
                                                                                            ValueFieldName="Id"
                                                                                            FilteringMode="@DataGridFilteringMode.Contains"
                                                                                            SelectedItemChanged="@((ProductDto product)=> SelectedChangeProduct(product))"
                                                                                            ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                                                            ShowValidationIcon="true"></DxComboBox>
                                                                                <ValidationMessage For="@(()=>postGoodsReceiptDetail.ProductId)"></ValidationMessage>
                                                                            </DxFormLayoutItem>
                                                                        </div>
                                                                        <div class="col-md-6">
                                                                            <DxFormLayoutItem Caption="Quantity Stock" CaptionCssClass="normal-caption" ColSpanMd="12" CaptionPosition="CaptionPosition.Vertical">
                                                                                <DxSpinEdit @bind-Value="@postGoodsReceiptDetail.Qty"
                                                                                            NullText="Quantity Stock..." MinValue="0"
                                                                                            ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                                                            ShowValidationIcon="true"></DxSpinEdit>
                                                                                <ValidationMessage For="@(()=>postGoodsReceiptDetail.Qty)"></ValidationMessage>
                                                                            </DxFormLayoutItem>
                                                                        </div>
                                                                    </DxFormLayout>
                                                                    <DxFormLayout CssClass="w-100 mt">
                                                                        <div class="col-md-6">
                                                                            <DxFormLayoutItem Caption="Purchase Of Measure" CaptionCssClass="normal-caption" ColSpanMd="12" CaptionPosition="CaptionPosition.Vertical">
                                                                                <DxTextBox @bind-Text="@postGoodsReceiptDetail.PurchaseName" ReadOnly></DxTextBox>
                                                                            </DxFormLayoutItem>
                                                                        </div>
                                                                        <div class="col-md-6">
                                                                            <DxFormLayoutItem Caption="Unit Of Measure" CaptionCssClass="normal-caption" ColSpanMd="12" CaptionPosition="CaptionPosition.Vertical">
                                                                                <DxTextBox @bind-Text="@postGoodsReceiptDetail.UomName" ReadOnly></DxTextBox>
                                                                            </DxFormLayoutItem>
                                                                        </div>
                                                                    </DxFormLayout>
                                                                    @if (postGoodsReceiptDetail.TraceAbility != false)
                                                                    {
                                                                        <DxFormLayout CssClass="w-100 mt">
                                                                            <div class="col-md-6">
                                                                                <DxFormLayoutItem Caption="Select Serial Number/LoT" CaptionCssClass="normal-caption required-caption" CaptionPosition="CaptionPosition.Vertical" ColSpanMd="12">
                                                                                    <DxTextBox Text="@postGoodsReceiptDetail.Batch"
                                                                                               TextExpression="@(()=>postGoodsReceiptDetail.Batch)"
                                                                                               TextChanged="@((string value)=>CheckBatch(value))"
                                                                                               NullText="Select Serial Number/LoT"
                                                                                               ReadOnly="@(postGoodsReceipt.Id != 0 && postGoodsReceipt.Status != EnumStatusGoodsReceipt.Draft)"
                                                                                               ShowValidationIcon="true"></DxTextBox>
                                                                                    <ValidationMessage For="@(()=>postGoodsReceiptDetail.Batch)"></ValidationMessage>
                                                                                </DxFormLayoutItem>
                                                                            </div>
                                                                            <div class="col-md-6">
                                                                                <DxFormLayoutItem Caption="Expired Date" CaptionCssClass="normal-caption required-caption" CaptionPosition="CaptionPosition.Vertical" ColSpanMd="12">
                                                                                    <DxDateEdit @bind-Date="@postGoodsReceiptDetail.ExpiredDate"
                                                                                                DisplayFormat="dd MMMM yyyy"
                                                                                                ReadOnly="@(postGoodsReceipt.Id != 0 && postGoodsReceipt.Status != EnumStatusGoodsReceipt.Draft)"
                                                                                                Format="d"></DxDateEdit>
                                                                                    <ValidationMessage For="@(()=>postGoodsReceiptDetail.ExpiredDate)"></ValidationMessage>
                                                                                </DxFormLayoutItem>
                                                                            </div>
                                                                        </DxFormLayout>
                                                                    }

                                                                </EditFormTemplate>
                                                            </MyGrid>
                                                        </DxLoadingPanel>
                                                    </Items>
                                                </DxFormLayoutGroup>
                                            }
                                        </DxFormLayout>
                                    </div>
                                </div>
                                @if (getGoodsReceiptLogs.Count > 0)
                                {

                                    <DxFormLayout>
                                        <DxFormLayoutGroup ColSpanMd="12" Caption="Transaction Logs" AnimationType="LayoutAnimationType.Slide" Expanded="false" Decoration="FormLayoutGroupDecoration.Card" ExpandButtonDisplayMode="GroupExpandButtonDisplayMode.Start">
                                            <CaptionTemplate>
                                                <div>
                                                    <span class="text-center">Transaction Logs</span>
                                                </div>
                                            </CaptionTemplate>
                                            <Items>
                                                @{
                                                    var groupedLogs = getGoodsReceiptLogs
                                                    .GroupBy(x => x.CreatedDate?.Date) // Group by the date part only
                                                    .OrderByDescending(g => g.Key)
                                                    .ToList();
                                                }

                                                <section class="content w-100">
                                                    <div class="container-fluid w-100">
                                                        <div class="row w-100">
                                                            @foreach (var group in groupedLogs)
                                                            {
                                                                <div class="col-md-12">
                                                                    <div class="timeline">
                                                                        <div class="time-label mt-2">
                                                                            <span class="bg-red">@group.Key?.ToString("dd MMM, yyyy")</span>
                                                                        </div>

                                                                        @foreach (var item in group.OrderByDescending(x => x.CreatedDate.GetValueOrDefault().TimeOfDay))
                                                                        {
                                                                            <div>
                                                                                <i class="fas fa-user bg-green"></i>
                                                                                <div class="timeline-item">
                                                                                    <span class="time"><i class="fas fa-clock"></i> @item.CreatedDate.GetValueOrDefault().ToString("HH:mm")</span>
                                                                                    <h3 class="timeline-header">
                                                                                        <a class="no-underline">@item.UserBy.Name</a>
                                                                                    </h3>

                                                                                    <div class="timeline-body">
                                                                                        @{
                                                                                            string priorityClass = "";
                                                                                            string title = "";

                                                                                            switch (item.Status)
                                                                                            {
                                                                                                case EnumStatusGoodsReceipt.Draft:
                                                                                                    priorityClass = "info";
                                                                                                    title = "Draft";
                                                                                                    break;

                                                                                                case EnumStatusGoodsReceipt.Process:
                                                                                                    priorityClass = "warning";
                                                                                                    title = "Waiting";
                                                                                                    break;

                                                                                                case EnumStatusGoodsReceipt.Done:
                                                                                                    priorityClass = "success";
                                                                                                    title = "Done";
                                                                                                    break;

                                                                                                case EnumStatusGoodsReceipt.Cancel:
                                                                                                    priorityClass = "danger";
                                                                                                    title = "Cancel";
                                                                                                    break;
                                                                                            }

                                                                                            string html = $"<span class='badge text-white bg-{priorityClass} py-1 px-3' title='{title}'>{title}</span>";
                                                                                        }

                                                                                        <div class="row w-100">
                                                                                            <div class="col-md-2">
                                                                                                Status
                                                                                            </div>

                                                                                            <div class="col-md-10">
                                                                                                : @((MarkupString)html)
                                                                                            </div>
                                                                                        </div>

                                                                                        <div class="row w-100">
                                                                                            <div class="col-md-2">
                                                                                                Destination
                                                                                            </div>

                                                                                            <div class="col-md-10">
                                                                                                : @item.Source?.Name
                                                                                            </div>
                                                                                        </div>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        }
                                                                        <div>
                                                                            <i class="fas fa-clock bg-gray"></i>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            }
                                                        </div>
                                                    </div>
                                                </section>
                                            </Items>
                                        </DxFormLayoutGroup>
                                    </DxFormLayout>
                                }

                            </EditForm>
                        </DxLoadingPanel>


                    </div>
                </div>
            </div>
        </div>
    </div>

} 