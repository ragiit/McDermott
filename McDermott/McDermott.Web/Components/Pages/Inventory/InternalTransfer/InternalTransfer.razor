@page "/inventory/internal-transfers"
@rendermode InteractiveServer

<PageTitle>@Helper.APP_NAME - Internal Transfer</PageTitle>

<style>
    .my-style {
        min-width: 800px;
    }

</style>

@if (IsAccess)
{
    <div class="wrapper">

        <BaseHeaderPage Title="Good Receipt" OnClickBack="@(async () => NavigationManager.NavigateTo("inventory/internal-transfers"))" ShowBackButton="true" />
        <section class="content">
            <div class="container-fluid">
                <div class="row">
                    <div class="col">
                        <div class="card">
                            <DxLoadingPanel @bind-Visible="PanelVisible"
                                            IsContentBlocked="true"
                                            ApplyBackgroundShading="true"
                                            IndicatorAreaVisible="true"
                                            Text="Fetching Data...">

                                <MyGrid @ref="Grid"
                                        Data="getTransferStocks"
                                        @bind-SelectedDataItems="@SelectedDataItems"
                                        DataItemDeleting="OnDelete"
                                        FocusedRowChanged="Grid_FocusedRowChanged"
                                        RowDoubleClick="OnRowDoubleClick"
                                        KeyFieldName="Id">

                                    <ToolbarTemplate>
                                        <MyDxToolbarBase TItem="TransferStockDto"
                                                         Items="@getTransferStocks"
                                                         Grid="Grid"
                                                         SelectedDataItems="@SelectedDataItems"
                                                         NewItem_Click="@NewItem_Click"
                                                         EditItem_Click="@(async () => await EditItem_Click())"
                                                         DeleteItem_Click="@DeleteItem_Click"
                                                         Refresh_Click="@Refresh_Click"
                                                         IsImport="false"
                                                         EnableDelete="isActiveButton"
                                                         VisibleNew="UserAccessCRUID.IsCreate"
                                                         VisibleEdit="UserAccessCRUID.IsUpdate"
                                                         VisibleDelete="UserAccessCRUID.IsDelete" />
                                    </ToolbarTemplate>

                                    <Columns>
                                        <DxGridSelectionColumn Width="15px" />
                                        <DxGridDataColumn FieldName="KodeTransaksi" Caption="No Transaksi" />
                                        <DxGridDataColumn FieldName="Source.Name" Caption="Source Location" />
                                        <DxGridDataColumn FieldName="Destination.Name" Caption="Destination Location" />
                                        <DxGridDataColumn FieldName="SchenduleDate" DisplayFormat="dd MMMM yyyy" Caption="Schedule Date" />
                                        <DxGridDataColumn FieldName="Status" Caption="Status">
                                            <CellDisplayTemplate>
                                                @((MarkupString)GetIssueStatusIconHtml((context.DataItem as TransferStockDto).Status))
                                            </CellDisplayTemplate>
                                        </DxGridDataColumn>
                                    </Columns>
                                </MyGrid>
                            </DxLoadingPanel>
                        </div>

                    </div>
                </div>
            </div>
        </section>
    </div>
}
else
{

}