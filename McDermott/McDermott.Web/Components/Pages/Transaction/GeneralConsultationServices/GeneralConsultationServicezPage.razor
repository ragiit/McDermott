@page "/clinic-service/general-consultation-services"
@rendermode InteractiveServer

<PageTitle>McHealthCare - General Consultation Services</PageTitle>

@if (IsAccess && UserAccessCRUID is not null && UserAccessCRUID.IsRead)
{
    <div class="wrapper">

        <BaseHeaderPage Title="General Consultation Services" OnClickBack="@(async () => await LoadData())" ShowBackButton="false" />

        <section class="content">
            <div class="container-fluid">
                <div class="row">
                    <div class="col">
                        <div class="card">
                            <DxLoadingPanel @bind-Visible="PanelVisible"
                                            IndicatorAnimationType="WaitIndicatorAnimationType.Pulse"
                                            IsContentBlocked="true"
                                            ApplyBackgroundShading="true"
                                            IndicatorAreaVisible="false"
                                            Text="Fetching Data...">

                                <DxToolbar>
                                    <Items>
                                        <DxToolbarItem Click="@(async () => await LoadDashboard(true))" Tooltip="Dashboard" Alignment="ToolbarItemAlignment.Right" IconCssClass="fa-solid fa-table-columns" />
                                        <DxToolbarItem Click="@(async () => await LoadDashboard(false))" Tooltip="List" Alignment="ToolbarItemAlignment.Right" IconCssClass="fa-solid fa-list" />
                                    </Items>
                                </DxToolbar>

                                @if (IsDashboard)
                                {
                                    <DxPieChart Data="@StatusMcus"
                                                T="StatusMcuData"
                                                Diameter="null">
                                        <DxPieChartSeries T="StatusMcuData"
                                                          TArgument="string"
                                                          TValue="int"
                                                          ArgumentField="s => s.Status"
                                                          SummaryMethod="Enumerable.Sum"
                                                          ValueField="s => s.Count">
                                            <DxChartSeriesLabel Visible="true"
                                                                Position="RelativePosition.Outside">
                                                <DxChartSeriesLabelConnector Visible="true" />
                                            </DxChartSeriesLabel>
                                        </DxPieChartSeries>
                                        <DxChartTooltip Enabled="true"
                                                        Position="RelativePosition.Outside">
                                            <div style="margin: 0.75rem">
                                                <div class="fw-bold">@context.Point.Argument</div>
                                                <div>Total: @($"{context.Point.Value}")</div>
                                            </div>
                                        </DxChartTooltip>
                                        <DxChartTitle Text="General Consultation Services">
                                            <DxChartSubTitle Text="Sorted by Status" />
                                        </DxChartTitle>
                                        <DxChartLegend HorizontalAlignment="HorizontalAlignment.Center"
                                                       VerticalAlignment="VerticalEdge.Bottom"
                                                       Position="RelativePosition.Outside"
                                                       Orientation="Orientation.Horizontal" />
                                    </DxPieChart>
                                }
                                else
                                {
                                    <MyGridPaginate @ref="Grid"
                                                    Data="GeneralConsultanServices"
                                                    PageSize="10"
                                                    @bind-SelectedDataItems="@SelectedDataItems"
                                                    DataItemDeleting="OnDelete"
                                                    RowDoubleClick="EditItem_Click"
                                                    FocusedRowChanged="Grid_FocusedRowChanged"
                                                    SearchTextChanged="OnSearchBoxChanged">


                                        <ToolbarTemplate>
                                            <MyDxToolbarBase TItem="GeneralConsultanServiceDto"
                                                             Items="@GeneralConsultanServices"
                                                             SelectedDataItems="@SelectedDataItems"
                                                             NewItem_Click="@NewItem_Click"
                                                             EditItem_Click="@EditItem_Click"
                                                             DeleteItem_Click="@DeleteItem_Click"
                                                             Refresh_Click="@Refresh_Click"
                                                             IsImport="false"
                                                             Grid="Grid"
                                                             VisibleNew="UserAccessCRUID.IsCreate"
                                                             VisibleEdit="UserAccessCRUID.IsUpdate"
                                                             VisibleDelete="UserAccessCRUID.IsDelete" />
                                        </ToolbarTemplate>


                                        <Columns>
                                            <DxGridSelectionColumn Width="15px" />
                                            <DxGridDataColumn MinWidth="200"
                                                              FieldName="RegistrationDate"
                                                              FilterRowOperatorType="GridFilterRowOperatorType.Contains"
                                                              DisplayFormat="ddd, dd MMM yyyy"
                                                              Caption="Registration Date" />
                                            <DxGridDataColumn MinWidth="200" FieldName="Reference" Caption="Reference" />
                                            <DxGridDataColumn MinWidth="200" FieldName="RegistrationDate" Caption="Registration Date"  DisplayFormat="@Helper.DefaultFormatDate"/>
                                            <DxGridDataColumn MinWidth="200" FieldName="SerialNo" Caption="Serial No" />
                                            <DxGridDataColumn MinWidth="200" FieldName="StatusName" Caption="Status" />
                                            <DxGridDataColumn MinWidth="200" FieldName="Patient.Name" Caption="Patient" />
                                            <DxGridDataColumn MinWidth="200" FieldName="Pratitioner.Name" Caption="Doctor" />
                                            <DxGridDataColumn MinWidth="200" FieldName="Service.Name" Caption="Service" />
                                            <DxGridDataColumn MinWidth="200" FieldName="Payment" Caption="Payment Method" Visible="false" />
                                            <DxGridDataColumn MinWidth="200" FieldName="AppointmentDate" Caption="Appoiment Date" />
                                            <DxGridDataColumn MinWidth="200" FieldName="IsAlertInformationSpecialCase" Caption="Special Case">
                                                <CellDisplayTemplate>
                                                    @GetIssuePriorityIconHtml((context.DataItem as GeneralConsultanServiceDto))
                                                </CellDisplayTemplate>
                                            </DxGridDataColumn>
                                        </Columns>

                                        <TotalSummary>
                                            <DxGridSummaryItem SummaryType="GridSummaryItemType.Count"
                                                               FieldName="Name"
                                                               Visible="true" />
                                        </TotalSummary>
                                    </MyGridPaginate>
                                    <div class="row">
                                        <DxFormLayout>
                                            <div class="col-md-8">
                                                <DxFormLayoutItem>
                                                    <DxPager PageCount="totalCount"
                                                             ActivePageIndexChanged="OnPageIndexChanged"
                                                             ActivePageIndex="activePageIndex"
                                                             VisibleNumericButtonCount="10"
                                                             SizeMode="SizeMode.Medium"
                                                             NavigationMode="PagerNavigationMode.Auto">
                                                    </DxPager>
                                                </DxFormLayoutItem>
                                            </div>
                                            <div class="col-md-4 d-flex justify-content-end">
                                                <DxFormLayoutItem Caption="Page Size:">
                                                    <MyDxComboBox Data="(new[] { 10, 25, 50, 100 })"
                                                                  NullText="Select Page Size"
                                                                  ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Never"
                                                                  SelectedItemChanged="((int e ) => OnPageSizeIndexChanged(e))"
                                                                  @bind-Value="pageSize">
                                                    </MyDxComboBox>
                                                </DxFormLayoutItem>
                                            </div>
                                        </DxFormLayout>
                                    </div>
                                }
                            </DxLoadingPanel>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
}
else if (UserAccessCRUID is not null && !UserAccessCRUID.IsRead)
{
    <InvalidPermissionPage />
}
else
{
    <LoadingIndicatorLayout />
}