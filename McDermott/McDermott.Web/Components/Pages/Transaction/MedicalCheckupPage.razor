@page "/clinic-service/medical-checkup"
@rendermode InteractiveServer

<PageTitle>@Helper.APP_NAME - Medical Checkup</PageTitle>

@if (IsAccess)
{
    <BaseHeaderPage Title="Medical Checkup" OnClickBack="@(async () => await LoadData())" ShowBackButton="ShowForm" />

    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col">
                    @if (!ShowForm)
                    {
                        <div class="card">
                            <InputFile id="fileInput" style="display:none" OnChange="@ImportExcelFile" accept=".xlsx" multiple="false"></InputFile>
                            <DxLoadingPanel @bind-Visible="IsLoading"
                                            IndicatorAnimationType="WaitIndicatorAnimationType.Pulse"
                                            IsContentBlocked="true"
                                            ApplyBackgroundShading="true"
                                            IndicatorAreaVisible="false"
                                            Text="Fetching Data...">

                                <DxToolbar>
                                    <Items>
                                        <DxToolbarItem Click="@(() => IsDashboard = true)" Tooltip="Dashboard" Alignment="ToolbarItemAlignment.Right" IconCssClass="fa-solid fa-table-columns" />
                                        <DxToolbarItem Click="@(() => IsDashboard = false)" Tooltip="List" Alignment="ToolbarItemAlignment.Right" IconCssClass="fa-solid fa-list" />
                                    </Items>
                                </DxToolbar>

                                @if (!IsDashboard)
                                {
                                    <MyGrid @ref="Grid"
                                            KeyFieldName="Id"
                                            Data="GeneralConsultanServices"
                                            @bind-SelectedDataItems="@SelectedDataItems"
                                            DataItemDeleting="OnDeleting"
                                            FocusedRowChanged="Grid_FocusedRowChanged"
                                            RowDoubleClick="EditItem_Click">

                                        <ToolbarTemplate>
                                            <MyDxToolbarBase Grid="Grid"
                                                             TItem="GeneralConsultanServiceDto"
                                                             Items="@GeneralConsultanServices"
                                                             SelectedDataItems="@SelectedDataItems"
                                                             NewItem_Click="@NewItem_Click"
                                                             EditItem_Click="@EditItem_Click"
                                                             DeleteItem_Click="@DeleteItem_Click"
                                                             Refresh_Click="@(async () => await LoadData())"
                                                             IsImport="true"
                                                             ImportFile="ImportFile"
                                                             ExportToExcel="ExportToExcel"
                                                             VisibleNew="UserAccessCRUID.Create"
                                                             VisibleEdit="UserAccessCRUID.Update"
                                                             VisibleDelete="UserAccessCRUID.Delete" />
                                        </ToolbarTemplate>

                                        <Columns>
                                            <DxGridSelectionColumn Width="15px" />
                                            <DxGridDataColumn MinWidth="200"
                                                              FieldName="RegistrationDate"
                                                              FilterRowOperatorType="GridFilterRowOperatorType.Contains"
                                                              DisplayFormat="ddd, dd MMM yyyy"
                                                              Caption="Registration Date" />
                                            <DxGridDataColumn MinWidth="200" FieldName="Patient.Name" Caption="Patient" />
                                            <DxGridDataColumn MinWidth="200" FieldName="Pratitioner.Name" Caption="Doctor" />
                                            <DxGridDataColumn MinWidth="200" FieldName="Service.Name" Caption="Service" />
                                            <DxGridDataColumn MinWidth="200" FieldName="StatusMcuName" Caption="Status" />
                                        </Columns>
                                    </MyGrid>
                                }
                                else
                                {
                                    <DxPieChart Data="@statusMcuData"
                                                T="StatusMcuData"
                                                Diameter="null">
                                        <DxPieChartSeries T="StatusMcuData"
                                                          TArgument="string"
                                                          TValue="int"
                                                          ArgumentField="s => s.Status"
                                                          SummaryMethod="Enumerable.Sum"
                                                          ValueField="s => s.Count">
                                            <DxChartSeriesLabel Visible="true"
                                                                Position="RelativePosition.Outside">
                                                <DxChartSeriesLabelConnector Visible="true" />
                                            </DxChartSeriesLabel>
                                        </DxPieChartSeries>
                                        <DxChartTooltip Enabled="true"
                                                        Position="RelativePosition.Outside">
                                            <div style="margin: 0.75rem">
                                                <div class="fw-bold">@context.Point.Argument</div>
                                                <div>Total: @($"{context.Point.Value}")</div>
                                            </div>
                                        </DxChartTooltip>
                                        <DxChartTitle Text="Medical Checkup">
                                            <DxChartSubTitle Text="Sorted by Status" />
                                        </DxChartTitle>
                                        <DxChartLegend HorizontalAlignment="HorizontalAlignment.Center"
                                                       VerticalAlignment="VerticalEdge.Bottom"
                                                       Position="RelativePosition.Outside"
                                                       Orientation="Orientation.Horizontal" />
                                    </DxPieChart>
                                }
                            </DxLoadingPanel>
                        </div>
                    }
                    else
                    {
                        <DxLoadingPanel @bind-Visible="IsLoading"
                                        IsContentBlocked="true"
                                        CssClass="w-100"
                                        ApplyBackgroundShading="true">
                            <EditForm Model="GeneralConsultanService" Context="EditForm" OnValidSubmit="OnValidSubmitSave" OnInvalidSubmit="OnInvalidSubmitSave">
                                <DataAnnotationsValidator />

                                @if (GeneralConsultanService.Id != 0)
                                {
                                    <div class="row justify-content-end mb-3">
                                        <div class="col-auto align-self-end">
                                            @if (GeneralConsultanService.IsBatam)
                                            {
                                                <DxTabs>
                                                    <DxTab Text="@EnumStatusMCU.Draft.GetDisplayName()" Enabled="@IsStatus(EnumStatusMCU.Draft)"></DxTab>
                                                    <DxTab Text="@EnumStatusMCU.HRCandidat.GetDisplayName()" Enabled="@IsStatus(EnumStatusMCU.HRCandidat)"></DxTab>
                                                    <DxTab Text="@EnumStatusMCU.Examination.GetDisplayName()" Enabled="@IsStatus(EnumStatusMCU.Examination)"></DxTab>
                                                    <DxTab Text="@EnumStatusMCU.Result.GetDisplayName()" Enabled="@IsStatus(EnumStatusMCU.Result)"></DxTab>
                                                    <DxTab Text="@EnumStatusMCU.Done.GetDisplayName()" Enabled="@IsStatus(EnumStatusMCU.Done)"></DxTab>
                                                </DxTabs>
                                            }
                                            else
                                            {
                                                <DxTabs>
                                                    <DxTab Text="@EnumStatusMCU.Draft.GetDisplayName()" Enabled="@IsStatus(EnumStatusMCU.Draft)"></DxTab>
                                                    <DxTab Text="@EnumStatusMCU.EmployeeTest.GetDisplayName()" Enabled="@IsStatus(EnumStatusMCU.EmployeeTest)"></DxTab>
                                                    <DxTab Text="@EnumStatusMCU.HRCandidat.GetDisplayName()" Enabled="@IsStatus(EnumStatusMCU.HRCandidat)"></DxTab>
                                                    <DxTab Text="@EnumStatusMCU.Examination.GetDisplayName()" Enabled="@IsStatus(EnumStatusMCU.Examination)"></DxTab>
                                                    <DxTab Text="@EnumStatusMCU.Result.GetDisplayName()" Enabled="@IsStatus(EnumStatusMCU.Result)"></DxTab>
                                                    <DxTab Text="@EnumStatusMCU.Done.GetDisplayName()" Enabled="@IsStatus(EnumStatusMCU.Done)"></DxTab>
                                                </DxTabs>
                                            }
                                        </div>
                                    </div>

                                    @if (!GeneralConsultanService.StatusMCU.Equals(EnumStatusMCU.Done))
                                    {
                                        <div class="card">
                                            <div class="card-body">
                                                <div class="w-100">
                                                    <div class="col align-self-center">
                                                        <DxButton IconCssClass="fa-solid fa-check" Text="@StagingText" Click="OnClickConfirm" RenderStyle="ButtonRenderStyle.Primary"></DxButton>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                }

                                <div class="card">
                                    <div class="card-header">
                                        <span class="fw-bolder">@(GeneralConsultanService.Id == 0 ? "Add Medical Checkup Information" : "Medical Checkup Information")</span>
                                    </div>

                                    <div class="card-body">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <DxFormLayout Enabled="false">
                                                    <DxFormLayoutItem CaptionCssClass="required-caption normal-caption normal-caption" Caption="Patient" ColSpanMd="12">
                                                        <MyDxComboBox ReadOnly="@(!GeneralConsultanService.Status.Equals(EnumStatusGeneralConsultantService.Planned))"
                                                                      Data="@Patients"
                                                                      NullText="Select Patient..."
                                                                      @bind-Value="@GeneralConsultanService.PatientId"
                                                                      TextFieldName="Name"
                                                                      SelectedItemChanged="@((UserDto e) => SelectedItemPatientChanged(e))"
                                                                      ValueFieldName="Id">
                                                        </MyDxComboBox>
                                                        <ValidationMessage For="@(() => GeneralConsultanService.PatientId)"   />
                                                    </DxFormLayoutItem>

                                                    <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Medical Record" ColSpanMd="12">
                                                        <DxTextBox @bind-Text="(GeneralConsultanService.Patient.NoRm)" NullText="Medical Record Number" ReadOnly InputCssClass="fw-normal" />
                                                    </DxFormLayoutItem>

                                                    <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Identity Number" ColSpanMd="12">
                                                        <DxTextBox @bind-Text="(GeneralConsultanService.Patient.NoId)" NullText="Identity Number" ReadOnly InputCssClass="fw-normal" />
                                                    </DxFormLayoutItem>

                                                    <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Age" ColSpanMd="12">
                                                        <Template>
                                                            <DxGridLayout>
                                                                <Rows>
                                                                    <DxGridLayoutRow />
                                                                </Rows>
                                                                <Columns>
                                                                    <DxGridLayoutColumn Width="90%" />
                                                                    <DxGridLayoutColumn Width="30%" />
                                                                </Columns>
                                                                <Items>
                                                                    <DxGridLayoutItem Row="0" Column="0" CssClass="mt">
                                                                        <Template>
                                                                            <DxSpinEdit MinValue="0" @bind-Value="@GeneralConsultanService.Age" NullText="Age" ReadOnly InputCssClass="fw-normal" />
                                                                        </Template>
                                                                    </DxGridLayoutItem>
                                                                    <DxGridLayoutItem Row="0" Column="1" CssClass="mt ml">
                                                                        <Template>
                                                                            <h6 class="pl-1 pt-2 normal-caption">Year</h6>
                                                                        </Template>
                                                                    </DxGridLayoutItem>
                                                                </Items>
                                                            </DxGridLayout>

                                                        </Template>
                                                    </DxFormLayoutItem>

                                                    <DxFormLayoutItem CaptionCssClass="required-caption normal-caption" Caption="Reg. Type" ColSpanMd="12">
                                                        <MyDxComboBox Data="@RegisType"
                                                                      ReadOnly
                                                                      NullText="Select Registration Type..."
                                                                      AllowUserInput="true"
                                                                      @bind-Value="@GeneralConsultanService.TypeRegistration">
                                                        </MyDxComboBox>
                                                        <ValidationMessage For="@(() => GeneralConsultanService.TypeRegistration)" />
                                                    </DxFormLayoutItem>

                                                </DxFormLayout>
                                            </div>

                                            <div class="col-md-6">
                                                <DxFormLayout Enabled="true">

                                                    <DxFormLayoutItem CaptionCssClass="required-caption normal-caption" Caption="Service" ColSpanMd="12">
                                                        <MyDxComboBox Data="@Services"
                                                                      NullText="Select Service.."
                                                                      SelectedItemChanged="@((ServiceDto e) => SelectedItemServiceChanged(e))"
                                                                      @bind-Value="@GeneralConsultanService.ServiceId"
                                                                      TextFieldName="Name"
                                                                      ValueFieldName="Id">
                                                        </MyDxComboBox>
                                                        <ValidationMessage For="@(() => GeneralConsultanService.ServiceId)" />
                                                    </DxFormLayoutItem>

                                                    <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Physicion" ColSpanMd="12">
                                                        <MyDxComboBox Data="@Physicions"
                                                                      NullText="Select Physicion..."
                                                                      @bind-Value="@GeneralConsultanService.PratitionerId"
                                                                      TextFieldName="Name"
                                                                      ValueFieldName="Id">
                                                        </MyDxComboBox>
                                                        <ValidationMessage For="@(() => GeneralConsultanService.PratitionerId)" />
                                                    </DxFormLayoutItem>

                                                    <DxFormLayoutItem CaptionCssClass="required-caption normal-caption" Caption="MCU Type" ColSpanMd="12">
                                                        <MyDxComboBox Data="@MCUType"
                                                                      NullText="Select MCU Type..."
                                                                      AllowUserInput="true"
                                                                      @bind-Value="@GeneralConsultanService.TypeMedical">
                                                        </MyDxComboBox>
                                                        <ValidationMessage For="@(() => GeneralConsultanService.TypeMedical)" />
                                                    </DxFormLayoutItem>

                                                    <DxFormLayoutItem CaptionCssClass="required-caption normal-caption" Caption="Medex Type" ColSpanMd="12">
                                                        <MyDxComboBox Data="@MedexType"
                                                                      NullText="Select Medex Type..."
                                                                      AllowUserInput="true"
                                                                      @bind-Value="@GeneralConsultanService.MedexType">
                                                        </MyDxComboBox>
                                                        <ValidationMessage For="@(() => GeneralConsultanService.MedexType)" />
                                                    </DxFormLayoutItem>

                                                    <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Candidate From" ColSpanMd="12">
                                                        <DxCheckBox CssClass="normal-caption" @bind-Checked="@GeneralConsultanService.IsBatam">
                                                            <div class="normal-caption">Batam</div>
                                                        </DxCheckBox>
                                                        <DxCheckBox @bind-Checked="@(GeneralConsultanService.IsOutsideBatam)">
                                                            <div class="normal-caption">Outside Batam</div>
                                                        </DxCheckBox>
                                                    </DxFormLayoutItem>

                                                    <DxFormLayoutItem CaptionCssClass="required-caption normal-caption" Caption="Registration Date" ColSpanMd="12">
                                                        <DxDateEdit @bind-Date="@GeneralConsultanService.RegistrationDate"
                                                                    Mask="@DateTimeMask.ShortDate"
                                                                    NullText="Select Registration Date">
                                                        </DxDateEdit>
                                                    </DxFormLayoutItem>
                                                </DxFormLayout>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                @* <div class="card">
                        <div class="card-header">
                        <span class="fw-bolder">Nature Of Injury</span>
                        </div>

                        </div> *@

                                @if (!GeneralConsultanService.StatusMCU.Equals(EnumStatusMCU.Done))
                                {
                                    <div class="row  justify-content-end mb-2 mt-2">
                                        <div class="col-auto align-self-end">

                                            <DxButton RenderStyle="ButtonRenderStyle.Primary" IconCssClass="fa-solid fa-floppy-disk" Text="Save" SubmitFormOnClick="true" />

                                            <DxButton RenderStyle="ButtonRenderStyle.Danger" IconCssClass="fa-solid fa-xmark" Text="Cancel" Click="@(async () => await LoadData())"></DxButton>
                                        </div>
                                    </div>
                                }
                            </EditForm>

                        </DxLoadingPanel>

                    }

                </div>
            </div>
        </div>
    </section>
}
else
{
    <LoadingIndicatorLayout />
}

<div hidden>
    <canvas id="signature-pad" width="1000" height="1000" style="border: 2px solid #000;"></canvas>
    <div>
        <button @onclick="ClearCanvas">Clear</button>
        <button @onclick="SaveCanvas">Save</button>
    </div>
</div>

<script>
    window.initializeSignaturePad = () => {
        const canvas = document.getElementById('signature-pad');
        const ctx = canvas.getContext('2d');
        let isDrawing = false;
        let lastX = 0;
        let lastY = 0;

        canvas.addEventListener('mousedown', (e) => {
            isDrawing = true;
            [lastX, lastY] = [e.offsetX, e.offsetY];
        });

        canvas.addEventListener('mousemove', (e) => {
            if (!isDrawing) return;
            ctx.beginPath();
            ctx.moveTo(lastX, lastY);
            ctx.lineTo(e.offsetX, e.offsetY);
            ctx.stroke();
            [lastX, lastY] = [e.offsetX, e.offsetY];
        });

        canvas.addEventListener('mouseup', () => isDrawing = false);
        canvas.addEventListener('mouseout', () => isDrawing = false);

        // Initialize canvas settings
        ctx.strokeStyle = '#000';
        ctx.lineJoin = 'round';
        ctx.lineCap = 'round';
        ctx.lineWidth = 2;
    };

    window.clearCanvas = () => {
        const canvas = document.getElementById('signature-pad');
        const ctx = canvas.getContext('2d');
        ctx.clearRect(0, 0, canvas.width, canvas.height);
    };

    window.saveCanvas = () => {
        const canvas = document.getElementById('signature-pad');
        const dataURL = canvas.toDataURL('image/png');
        const link = document.createElement('a');
        link.href = dataURL;
        link.download = 'signature.png';
        link.click();
    };

</script>