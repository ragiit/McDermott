@page "/clinic-service/wellness/{PageMode}"
@rendermode InteractiveServer

<PageTitle>@Helper.APP_NAME - Wellness</PageTitle>

@if (IsAccess && UserAccessCRUID is not null && UserAccessCRUID.IsRead)
{
    <div class="wrapper">
        <BaseHeaderPage Title="Wellness" OnClickBack="@(async () => NavigationManager.NavigateTo("clinic-service/wellness"))" ShowBackButton="true" />

        <section class="content">
            <div class="container-fluid">
                <div class="row">
                    <div class="col">
                        <DxLoadingPanel @bind-Visible="PanelVisible"
                                        IndicatorAnimationType="WaitIndicatorAnimationType.Pulse"
                                        IsContentBlocked="true"
                                        ApplyBackgroundShading="true"
                                        IndicatorAreaVisible="false"
                                        Text="Fetching Data...">
                            <EditForm Context="L" Model="@WellnessProgram" OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="@HandleInvalidSubmit">
                                <DataAnnotationsValidator />
                                <ValidationSummary />
                                <AntiforgeryToken />


                                <div class="row justify-content-end mb-3">
                                    <div class="col-auto align-self-end">
                                        <DxTabs>
                                            <DxTab Text="Draft" Enabled="@IsStatus(EnumWellness.Draft)"></DxTab>
                                            <DxTab Text="Active" Enabled="@IsStatus(EnumWellness.Active)"></DxTab>
                                            <DxTab Text="Completed" Enabled="@IsStatus(EnumWellness.Completed)"></DxTab>
                                            <DxTab Text="InActive" Enabled="@IsStatus(EnumWellness.Inactive)"></DxTab>
                                        </DxTabs>
                                    </div>
                                </div>

                                @if (!IsStatus(EnumWellness.Completed) && !IsStatus(EnumWellness.Inactive))
                                {
                                    <div class="card">
                                        <div class="card-body">
                                            <div class="row w-100 justify-content-end mt-2 mb-2">

                                                @if (WellnessProgram.Id != 0)
                                                {
                                                    <div class="col-auto pe-0 ">
                                                        <DxButton Enabled="!IsLoading"
                                                                  IconCssClass="fa-solid fa-check"
                                                                  Text="@StagingText.GetDisplayName()"
                                                                  Click="ClickConfirm"
                                                                  RenderStyle="ButtonRenderStyle.Primary">
                                                        </DxButton>
                                                        <DxButton Enabled="!IsLoading"
                                                                  IconCssClass="fa-solid fa-xmark"
                                                                  Text="Inactive"
                                                                  Click="OnCancelStatus"
                                                                  RenderStyle="ButtonRenderStyle.Danger">
                                                        </DxButton>
                                                    </div>
                                                }

                                                <div class="col-sm align-self-end">
                                                    <div class="row justify-content-end">
                                                        <div class="col-auto">
                                                            <DxButton RenderStyle="ButtonRenderStyle.Primary" RenderStyleMode="@ButtonRenderStyleMode.Contained" IconCssClass="fa-solid fa-floppy-disk" Text="Save" SubmitFormOnClick="true">
                                                            </DxButton>
                                                            <DxButton RenderStyle="ButtonRenderStyle.Danger" RenderStyleMode="@ButtonRenderStyleMode.Contained" IconCssClass="fa-solid fa-xmark" Text="Close" Click="CancelForm_Click"></DxButton>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }

                                @if (IsStatus(EnumWellness.Inactive))
                                {
                                    <div class="card">
                                        <div class="card-body">
                                            <DxButton Enabled="!PanelVisible"
                                                      IconCssClass="fa-solid fa-check"
                                                      Text="Set to Draft"
                                                      Click="ClickSetToDraft"
                                                      RenderStyle="ButtonRenderStyle.Success">
                                            </DxButton>
                                        </div>
                                    </div>
                                }

                                <div class="card">
                                    <div class="card-body">
                                        <DxFormLayout CssClass="w-100">
                                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Program Name" ColSpanMd="12">
                                                <MyTextBox @bind-Text="@WellnessProgram.Name"
                                                           ReadOnly="!EnableForm"
                                                           NullText="Name" />
                                                <ValidationMessage For="@(() => WellnessProgram.Name)" />
                                            </DxFormLayoutItem>
                                              
                                            <DxFormLayoutItem CaptionCssClass="required-caption normal-caption" Caption="Category" ColSpanMd="12">
                                                <MyDxComboBox Data="@AwarenessEduCategories"
                                                              NullText="Select Category"
                                                              ReadOnly="!EnableForm"
                                                              @ref="refAwarenessEduCategoryComboBox"
                                                              @bind-Value="@WellnessProgram.AwarenessEduCategoryId"
                                                              TextFieldName="Name"
                                                              ValueFieldName="Id"
                                                              TextChanged="((string e) => OnInputAwarenessEduCategoryChanged(e))">
                                                    <Buttons>
                                                        <DxEditorButton Click="OnSearchAwarenessEduCategoryIndexDecrement"
                                                                        IconCssClass="fa-solid fa-caret-left"
                                                                        Visible="EnableForm"
                                                                        Tooltip="Previous Index" />
                                                        <DxEditorButton Click="OnSearchAwarenessEduCategory"
                                                                        Visible="EnableForm"
                                                                        IconCssClass="fa-solid fa-magnifying-glass"
                                                                        Tooltip="Search" />
                                                        <DxEditorButton Click="OnSearchAwarenessEduCategoryIndexIncrement"
                                                                        IconCssClass="fa-solid fa-caret-right"
                                                                        Visible="EnableForm"
                                                                        Tooltip="Next Index" />
                                                    </Buttons>
                                                    <Columns>
                                                        <DxListEditorColumn FieldName="@nameof(WellnessProgramDto.Name)" Caption="Name" /> 
                                                    </Columns>
                                                </MyDxComboBox>
                                                <ValidationMessage For="@(()=>WellnessProgram.AwarenessEduCategoryId)" />
                                            </DxFormLayoutItem>

                                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Start Date" ColSpanMd="12">
                                                <DxDateEdit @bind-Date="@WellnessProgram.StartDate"
                                                            DisplayFormat="@Helper.DefaultFormatDate"
                                                            ReadOnly="!EnableForm" />
                                            </DxFormLayoutItem>

                                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="End Date" ColSpanMd="12">
                                                <DxDateEdit @bind-Date="@WellnessProgram.EndDate"
                                                            DisplayFormat="@Helper.DefaultFormatDate"
                                                            ReadOnly="!EnableForm" />
                                            </DxFormLayoutItem>

                                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Slug" ReadOnly ColSpanMd="12">
                                                <DxMaskedInput @bind-Value="@WellnessProgram.Slug"
                                                               ReadOnly
                                                               NullText="Slug">
                                                    <Buttons>
                                                        <DxEditorButton CssClass="text-bold btn-primary" Click="OnClickSlugProgram" Text="Open Link" Visible="IsStatus(EnumWellness.Active)" />
                                                    </Buttons>
                                                </DxMaskedInput>
                                            </DxFormLayoutItem>

                                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Content" ColSpanMd="12">
                                                <BlazoredTextEditor ReadOnly="!EnableForm"  @ref=QuillHtml Placeholder="write somthing...">
                                                    <ToolbarContent>
                                                        <select class="ql-header">
                                                            <option selected=""></option>
                                                            <option value="1"></option>
                                                            <option value="2"></option>
                                                            <option value="3"></option>
                                                            <option value="4"></option>
                                                            <option value="5"></option>
                                                        </select>
                                                        <span class="ql-formats">
                                                            <button class="ql-bold"></button>
                                                            <button class="ql-italic"></button>
                                                            <button class="ql-underline"></button>
                                                            <button class="ql-strike"></button>
                                                        </span>
                                                        <span class="ql-formats">
                                                            <select class="ql-color"></select>
                                                            <select class="ql-background"></select>
                                                        </span>
                                                        <span class="ql-formats">
                                                            <button class="ql-list" value="ordered"></button>
                                                            <button class="ql-list" value="bullet"></button>
                                                            <button class="ql-indent" value="-1"></button>
                                                            <button class="ql-indent" value="+1"></button>
                                                            <select class="ql-align">
                                                                <option selected=""></option>
                                                                <option value="center"></option>
                                                                <option value="right"></option>
                                                                <option value="justify"></option>
                                                            </select>
                                                        </span>
                                                        <span class="ql-formats">
                                                            <button class="ql-list" value="ordered"></button>
                                                            <button class="ql-list" value="bullet"></button>
                                                        </span>
                                                        <span class="ql-formats">
                                                            <button class="ql-link"></button>
                                                        </span>
                                                        <span class="ql-formats">
                                                            @* <button class="ql-image"></button> *@
                                                            <button class="ql-video"></button>
                                                        </span>
                                                    </ToolbarContent>
                                                    <EditorContent>
                                                        @((MarkupString)WellnessProgram.Content)
                                                    </EditorContent>
                                                </BlazoredTextEditor>
                                            </DxFormLayoutItem>

                                            @* <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Show Content Output?" ReadOnly ColSpanMd="12">
                                        <DxCheckBox Checked="IsShowPreviewOutput"
                                        CheckedExpression="@(()=>IsShowPreviewOutput)" CheckedChanged="@((bool value) => ShowAoutPutPreview(value))"></DxCheckBox>

                                        </DxFormLayoutItem> *@
                                        </DxFormLayout>
                                    </div>
                                </div>
                                @*
                            @if (IsShowPreviewOutput)
                            {
                            <div class="card w-100">
                            <div class="card-header">
                            The preview Of Content
                            </div>
                            <div class="card-body">
                            <DxButton @onclick=@(async ()=> await ShowAoutPutPreview(true))>Refresh</DxButton>
                            @preview
                            </div>
                            </div>
                            } *@

                                @if (WellnessProgram.Id != 0)
                                {
                                    <div class="w-100">
                                        <div class="card">
                                            <div class="">
                                                <DxTabs>
                                                    <DxTabPage CssClass="w-100" Text="Activities Details">
                                                        <div class="card">
                                                            <DxFormLayout CssClass="w-100">
                                                                <DxLoadingPanel @bind-Visible="PanelVisible"
                                                                                IndicatorAnimationType="WaitIndicatorAnimationType.Pulse"
                                                                                IsContentBlocked="true"
                                                                                ApplyBackgroundShading="true"
                                                                                IndicatorAreaVisible="false"
                                                                                Text="Fetching Data...">
                                                                    <MyGridPaginate @ref="GridActivityDetail"
                                                                                    Context="GridDetailContext"
                                                                                    Data="@WellnessProgramDetails"
                                                                                    @bind-SelectedDataItems="@SelectedDataItemWellnessProgramDetails"
                                                                                    KeyFieldName="Id"
                                                                                    FocusedRowChanged="GridFocusedRowActivityDetailVisibleIndex_FocusedRowChanged"
                                                                                    EditModelSaving="OnSaveActivityDetail"
                                                                                    DataItemDeleting="OnDeleteActivityDetail"
                                                                                    SearchTextChanged="OnSearchBoxChangedWellnessProgramDetail">
                                                                        <ToolbarTemplate>
                                                                            <MyDxToolbarBase TItem="WellnessProgramDetailDto"
                                                                                             Items="@WellnessProgramDetails"
                                                                                             SelectedDataItems="SelectedDataItemWellnessProgramDetails"
                                                                                             Grid="GridActivityDetail"
                                                                                             NewItem_Click="NewActivityDetail_Click"
                                                                                             EditItem_Click="EditActivityDetail_Click"
                                                                                             IsImport="false"
                                                                                             DeleteItem_Click="DeleteActivityDetail_Click"
                                                                                             Refresh_Click="RefreshActivityDetails_Click"
                                                                                             VisibleNew="@((!IsStatus(EnumWellness.Completed) || !IsStatus(EnumWellness.Inactive)) && EnableForm)"
                                                                                             VisibleEdit="@((!IsStatus(EnumWellness.Completed) || !IsStatus(EnumWellness.Inactive)) && EnableForm)"
                                                                                             VisibleDelete="@((!IsStatus(EnumWellness.Completed) || !IsStatus(EnumWellness.Inactive)) && EnableForm)" />
                                                                        </ToolbarTemplate>
                                                                        <Columns>
                                                                            <DxGridSelectionColumn Width="15px" />
                                                                            <DxGridDataColumn FieldName="Name" Caption="Name" />
                                                                            <DxGridDataColumn FieldName="StartDate" Caption="Start Time" DisplayFormat="@Helper.DefaultFormatDateTime"   />
                                                                            <DxGridDataColumn FieldName="EndDate" Caption="End Time" DisplayFormat="@Helper.DefaultFormatDateTime" />
                                                                            <DxGridDataColumn FieldName="Notes" />
                                                                            <DxGridDataColumn FieldName="Slug" />
                                                                            @if (IsStatus(EnumWellness.Active))
                                                                            {
                                                                                <DxGridDataColumn Caption="Action ">
                                                                                    <CellDisplayTemplate>
                                                                                        <DxButton RenderStyle="@ButtonRenderStyle.Success" IconCssClass="fa-solid fa-play mr-1" Text="Open Link" @onclick="() => OnClickSlugProgramActivity(((WellnessProgramDetailDto)context.DataItem).Slug)"></DxButton>
                                                                                    </CellDisplayTemplate>
                                                                                </DxGridDataColumn>
                                                                            }
                                                                        </Columns>
                                                                        <EditFormTemplate Context="EditFormContextz">
                                                                            @{
                                                                                var a = (WellnessProgramDetailDto)EditFormContextz.EditModel;

                                                                            }
                                                                            <DxFormLayout CssClass="w-100">
                                                                                <DxFormLayoutItem CaptionCssClass="normal-caption required-caption" Caption="Name" ColSpanMd="12">
                                                                                    <MyTextBox @bind-Text="@a.Name"
                                                                                               NullText="Name" />
                                                                                </DxFormLayoutItem>

                                                                                <DxFormLayoutItem CaptionCssClass="normal-caption required-caption" Caption="Start Time" ColSpanMd="12">
                                                                                    <DxDateEdit @bind-Date="@a.StartDate" MinDate="WellnessProgram.StartDate" TimeSectionVisible="true"
                                                                                                DisplayFormat="@Helper.DefaultFormatDateTime" />
                                                                                </DxFormLayoutItem>

                                                                                <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="End Time" ColSpanMd="12">
                                                                                    <DxDateEdit @bind-Date="@a.EndDate" TimeSectionVisible="true"
                                                                                                DisplayFormat="@Helper.DefaultFormatDateTime" />
                                                                                </DxFormLayoutItem>

                                                                                <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Notes" ColSpanMd="12">
                                                                                    <MyTextBox @bind-Text="@a.Notes"
                                                                                               NullText="Notes" />
                                                                                </DxFormLayoutItem>

                                                                                <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Slug" ReadOnly ColSpanMd="12">
                                                                                    <DxMaskedInput @bind-Value="@a.Slug"
                                                                                                   ReadOnly
                                                                                                   NullText="Slug">
                                                                                        <Buttons>
                                                                                            <DxEditorButton CssClass="text-bold btn-primary" Click="@(() => OnClickSlugProgramActivity(a.Slug))" Text="Open Link" Visible="IsStatus(EnumWellness.Active)" />
                                                                                        </Buttons>
                                                                                    </DxMaskedInput>
                                                                                </DxFormLayoutItem>
                                                                            </DxFormLayout>
                                                                        </EditFormTemplate>
                                                                    </MyGridPaginate>
                                                                    <div class="row">
                                                                        <DxFormLayout>
                                                                            <div class="col-md-9">
                                                                                <DxFormLayoutItem>
                                                                                    <DxPager PageCount="totalCountWellnessProgramDetail"
                                                                                             ActivePageIndexChanged="OnPageIndexChangedOnSearchBoxChangedWellnessProgramDetail"
                                                                                             ActivePageIndex="activePageIndexWellnessProgramDetail"
                                                                                             VisibleNumericButtonCount="10"
                                                                                             SizeMode="SizeMode.Medium"
                                                                                             NavigationMode="PagerNavigationMode.Auto">
                                                                                    </DxPager>
                                                                                </DxFormLayoutItem>
                                                                            </div>
                                                                            <div class="col-md-3 d-flex justify-content-end">
                                                                                <DxFormLayoutItem Caption="Page Size:">
                                                                                    <MyDxComboBox Data="(new[] { 10, 25, 50, 100 })"
                                                                                                  NullText="Select Page Size"
                                                                                                  ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Never"
                                                                                                  SelectedItemChanged="((int e ) => OnpageSizeWellnessProgramDetailIndexChanged(e))"
                                                                                                  @bind-Value="pageSizeWellnessProgramDetail">
                                                                                    </MyDxComboBox>
                                                                                </DxFormLayoutItem>
                                                                            </div>
                                                                        </DxFormLayout>
                                                                    </div>
                                                                </DxLoadingPanel>
                                                            </DxFormLayout>
                                                        </div>
                                                    </DxTabPage>
                                                    <DxTabPage CssClass="w-100" Text="Participants" Click="(async () => await LoadDataParticipants())">
                                                        <div class="card">
                                                            <DxLoadingPanel @bind-Visible="PanelVisible"
                                                                            IndicatorAnimationType="WaitIndicatorAnimationType.Pulse"
                                                                            IsContentBlocked="true"
                                                                            ApplyBackgroundShading="true"
                                                                            IndicatorAreaVisible="false"
                                                                            Text="Fetching Data...">
                                                                <MyGridPaginate @ref="GridParticipant"
                                                                                Data="WellnessProgramParticipants"
                                                                                KeyFieldName="Id"
                                                                                AllowSelectRowByClick="false"
                                                                                FocusedRowEnabled="false"
                                                                                @bind-SelectedDataItems="@SelectedDataItemParticipants"
                                                                                SearchTextChanged="OnSearchBoxChangedParticipants">

                                                                    <ToolbarTemplate>
                                                                        <DxToolbar ItemRenderStyleMode="ToolbarRenderStyleMode.Plain">
                                                                            <DxToolbarItem BeginGroup="true" Text="Refresh" Click="(async () => await LoadDataParticipants())" IconCssClass="fa-solid fa-arrows-rotate" />
                                                                        </DxToolbar>
                                                                    </ToolbarTemplate>

                                                                    <Columns>
                                                                        <DxGridDataColumn MinWidth="200" FieldName="Date" Caption="Participant Join Date" DisplayFormat="@Helper.DefaultFormatDateTime" />
                                                                        <DxGridDataColumn MinWidth="200" FieldName="Patient.Name" Caption="Name" />
                                                                        <DxGridDataColumn MinWidth="200" FieldName="Patient.Email" Caption="Email" />
                                                                        <DxGridDataColumn MinWidth="200" FieldName="Patient.Department.Name" Caption="Department" />
                                                                    </Columns>

                                                                    <GroupSummary>
                                                                        <DxGridSummaryItem SummaryType="GridSummaryItemType.Count" FieldName="TypeRegistration" />
                                                                    </GroupSummary>
                                                                </MyGridPaginate>
                                                                <div class="row">
                                                                    <DxFormLayout>
                                                                        <div class="col-md-8">
                                                                            <DxFormLayoutItem>
                                                                                <DxPager PageCount="totalCountParticipants"
                                                                                         ActivePageIndexChanged="OnPageIndexChangedParticipants"
                                                                                         ActivePageIndex="activePageIndexParticipants"
                                                                                         VisibleNumericButtonCount="10"
                                                                                         SizeMode="SizeMode.Medium"
                                                                                         NavigationMode="PagerNavigationMode.Auto">
                                                                                </DxPager>
                                                                            </DxFormLayoutItem>
                                                                        </div>
                                                                        <div class="col-md-4 d-flex justify-content-end">
                                                                            <DxFormLayoutItem Caption="Page Size:">
                                                                                <MyDxComboBox Data="(new[] { 10, 25, 50, 100 })"
                                                                                              NullText="Select Page Size"
                                                                                              ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Never"
                                                                                              SelectedItemChanged="((int e ) => OnpageSizeParticipantsIndexChanged(e))"
                                                                                              @bind-Value="pageSizeParticipants">
                                                                                </MyDxComboBox>
                                                                            </DxFormLayoutItem>
                                                                        </div>
                                                                    </DxFormLayout>
                                                                </div>
                                                            </DxLoadingPanel>
                                                        </div>
                                                    </DxTabPage>
                                                    <DxTabPage CssClass="w-100" Text="Attendences" Click="(async () => await LoadDataAttendances())">
                                                        <div class="card">
                                                            <DxLoadingPanel @bind-Visible="PanelVisible"
                                                                            IndicatorAnimationType="WaitIndicatorAnimationType.Pulse"
                                                                            IsContentBlocked="true"
                                                                            ApplyBackgroundShading="true"
                                                                            IndicatorAreaVisible="false"
                                                                            Text="Fetching Data...">
                                                                <MyGridPaginate @ref="GridAttendance"
                                                                                Data="WellnessProgramAttendances"
                                                                                KeyFieldName="Id"
                                                                                AllowSelectRowByClick="false"
                                                                                FocusedRowEnabled="false"
                                                                                @bind-SelectedDataItems="@SelectedDataItemAttendances"
                                                                                SearchTextChanged="OnSearchBoxChangedAttendances">

                                                                    <ToolbarTemplate>
                                                                        <DxToolbar ItemRenderStyleMode="ToolbarRenderStyleMode.Plain">
                                                                            <DxToolbarItem BeginGroup="true" Text="Refresh" Click="(async () => await LoadDataAttendances())" IconCssClass="fa-solid fa-arrows-rotate" />
                                                                        </DxToolbar>
                                                                    </ToolbarTemplate>

                                                                    <Columns>
                                                                        <DxGridDataColumn MinWidth="200" FieldName="Date" Caption="Attendance Join Date" DisplayFormat="@Helper.DefaultFormatDateTime" />
                                                                        <DxGridDataColumn MinWidth="200" FieldName="WellnessProgramDetail.Name" Caption="Activity" GroupIndex="0" />
                                                                        <DxGridDataColumn MinWidth="200" FieldName="Patient.Name" Caption="Name" />
                                                                        <DxGridDataColumn MinWidth="200" FieldName="Patient.Email" Caption="Email" />
                                                                        <DxGridDataColumn MinWidth="200" FieldName="Patient.Department.Name" Caption="Department" />
                                                                    </Columns>

                                                                    <GroupSummary>
                                                                        <DxGridSummaryItem SummaryType="GridSummaryItemType.Count" FieldName="TypeRegistration" />
                                                                    </GroupSummary>
                                                                </MyGridPaginate>
                                                                <div class="row">
                                                                    <DxFormLayout>
                                                                        <div class="col-md-8">
                                                                            <DxFormLayoutItem>
                                                                                <DxPager PageCount="totalCountAttendances"
                                                                                         ActivePageIndexChanged="OnPageIndexChangedAttendances"
                                                                                         ActivePageIndex="activePageIndexAttendances"
                                                                                         VisibleNumericButtonCount="10"
                                                                                         SizeMode="SizeMode.Medium"
                                                                                         NavigationMode="PagerNavigationMode.Auto">
                                                                                </DxPager>
                                                                            </DxFormLayoutItem>
                                                                        </div>
                                                                        <div class="col-md-4 d-flex justify-content-end">
                                                                            <DxFormLayoutItem Caption="Page Size:">
                                                                                <MyDxComboBox Data="(new[] { 10, 25, 50, 100 })"
                                                                                              NullText="Select Page Size"
                                                                                              ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Never"
                                                                                              SelectedItemChanged="((int e ) => OnpageSizeAttendancesIndexChanged(e))"
                                                                                              @bind-Value="pageSizeAttendances">
                                                                                </MyDxComboBox>
                                                                            </DxFormLayoutItem>
                                                                        </div>
                                                                    </DxFormLayout>
                                                                </div>
                                                            </DxLoadingPanel>
                                                        </div>
                                                    </DxTabPage>
                                                </DxTabs>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </EditForm>
                        </DxLoadingPanel>
                    </div>
                </div>
            </div>
        </section>
    </div>
}
else if (UserAccessCRUID is not null && !UserAccessCRUID.IsRead)
{
    <InvalidPermissionPage />
}
else
{
    <LoadingIndicatorLayout />
}