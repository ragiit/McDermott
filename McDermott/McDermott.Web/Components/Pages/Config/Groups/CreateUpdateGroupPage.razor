@page "/configuration/groups/{PageMode}"
@using McDermott.Web.Components.Layout
@rendermode InteractiveServer

<PageTitle>McHealthCare - Group</PageTitle>

@if (IsAccess && UserAccessCRUID is not null && (UserAccessCRUID.IsCreate || UserAccessCRUID.IsUpdate))
{
    <InputFile id="fileInput" style="display:none" OnChange="@ImportExcelFile" accept=".xlsx" multiple="false"></InputFile>
    <InputFile id="fileInput2" style="display:none" OnChange="@ImportExcelFile2" accept=".xlsx" multiple="false"></InputFile>

    <div class="wrapper">

        <BaseHeaderPage Title="Group" OnClickBack="@(async () => NavigationManager.NavigateTo("configuration/groups"))" ShowBackButton="true" />

        <section class="content">
            <div class="container-fluid">
                <div class="row">
                    <div class="col">
                        <DxLoadingPanel @bind-Visible="PanelVisible"
                                        IndicatorAnimationType="WaitIndicatorAnimationType.Pulse"
                                        IsContentBlocked="true"
                                        ApplyBackgroundShading="true"
                                        IndicatorAreaVisible="false"
                                        Text="Fetching Data...">
                            <EditForm Model="@Group" @onkeypress="@KeyPressHandler" Context="EditFormContext22" Enhance OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="@HandleInvalidSubmit">
                                <DataAnnotationsValidator />
                                <ValidationSummary />
                                <AntiforgeryToken />

                                <div class="card sticky">
                                    <div class="card-body">
                                        <div class=" row w-100">
                                            <div class="w-100 row justify-content-end mt-2 mb-2">
                                                <div class="col-auto align-self-end p-0 m-0">
                                                    <DxButton RenderStyle="ButtonRenderStyle.Primary" RenderStyleMode="@ButtonRenderStyleMode.Contained" IconCssClass="fa-solid fa-floppy-disk" Text="Save" SubmitFormOnClick="true">
                                                    </DxButton>
                                                    <DxButton RenderStyle="ButtonRenderStyle.Danger" RenderStyleMode="@ButtonRenderStyleMode.Contained" IconCssClass="fa-solid fa-xmark" Text="Cancel" Click="CancelItemGroupMenuGridGropMenu_Click"></DxButton>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="card">
                                    <div class="card-body">

                                        <DataAnnotationsValidator />
                                        <AntiforgeryToken />
                                        <DxFormLayout CssClass="w-100">
                                            <DxFormLayoutItem CaptionPosition="CaptionPosition.Vertical" Caption="Group" CaptionCssClass="normal-caption required-caption" ColSpanMd="12">
                                                <DxTextBox @bind-Text="@Group.Name"
                                                           ShowValidationIcon="true"
                                                           ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                           NullText="Group" />
                                                <ValidationMessage For="@(() => Group.Name)"   />
                                            </DxFormLayoutItem>

                                            @if (Group.Id != 0)
                                            {
                                                <DxFormLayoutItem CaptionCssClass="normal-caption" Context="ItemContext" CaptionPosition="CaptionPosition.Vertical" Caption="Menu" ColSpanMd="12">
                                                    <Template>
                                                        <MyGridPaginate @ref="GridGropMenu"
                                                                        Data="GroupMenus.Where(x => x.Menu is not null)"
                                                                        @bind-SelectedDataItems="@SelectedDataItemsGroupMenu"
                                                                        KeyFieldName="MenuId"
                                                                        FocusedRowChanged="GridGropMenu_FocusedRowChanged"
                                                                        EditModelSaving="OnSaveGroupMenu"
                                                                        SearchTextChanged="OnSearchBoxChanged"
                                                                        DataItemDeleting="OnDeleteGroupMenu">

                                                            <ToolbarTemplate>
                                                                <MyDxToolbarBase TItem="GroupMenuDto"
                                                                                 Items="@GroupMenus"
                                                                                 SelectedDataItems="@SelectedDataItemsGroupMenu"
                                                                                 NewItem_Click="@NewItemGroup_Click"
                                                                                 EditItem_Click="() => EditItemGroup_Click(GridGropMenu)"
                                                                                 DeleteItem_Click="@DeleteItem_Click"
                                                                                 Refresh_Click="@Refresh_Click"
                                                                                 ImportFile="ImportFile2"
                                                                                 ExportToExcel="ExportToExcel2"
                                                                                 IsImport="UserAccessCRUID.IsImport"
                                                                                 Grid="GridGropMenu"
                                                                                 VisibleNew="UserAccessCRUID.IsCreate"
                                                                                 VisibleEdit="UserAccessCRUID.IsUpdate"
                                                                                 VisibleDelete="UserAccessCRUID.IsDelete" />
                                                            </ToolbarTemplate>

                                                            <Columns>
                                                                <DxGridSelectionColumn Context="ToolbarContext" Width="15px" />
                                                                <DxGridDataColumn MinWidth="200" Context="ToolbarContext" FieldName="Menu.Name" Caption="Menu" SortIndex="0" />
                                                                <DxGridDataColumn MinWidth="200" Context="ToolbarContext" FieldName="Menu.Parent.Name" Caption="Parent" SortIndex="0" />
                                                                <DxGridDataColumn MinWidth="50" Context="ToolbarContext" FieldName="IsCreate" Caption="Create" />
                                                                <DxGridDataColumn MinWidth="50" Context="ToolbarContext" FieldName="IsRead" Caption="Read" />
                                                                <DxGridDataColumn MinWidth="50" Context="ToolbarContext" FieldName="IsUpdate" Caption="Update" />
                                                                <DxGridDataColumn MinWidth="50" Context="ToolbarContext" FieldName="IsDelete" Caption="Delete" />
                                                                <DxGridDataColumn MinWidth="50" Context="ToolbarContext" FieldName="IsImport" Caption="Import" />
                                                            </Columns>


                                                            <TotalSummary>
                                                                <DxGridSummaryItem SummaryType="GridSummaryItemType.Count"
                                                                                   FieldName="Menu.Name"
                                                                                   Visible="true" />
                                                            </TotalSummary>

                                                            <EditFormTemplate Context="EditFormContext">
                                                                @{
                                                                    var a = (GroupMenuDto)EditFormContext.EditModel;
                                                                }
                                                                <DxFormLayout CssClass="w-100">
                                                                    <DxFormLayoutItem CaptionCssClass="required-caption normal-caption" Caption="Menu" ColSpanMd="12">
                                                                        <MyDxComboBox Data="Menus"
                                                                                      NullText="Select Menu"
                                                                                      TextFieldName="Name"
                                                                                      ValueFieldName="Id"
                                                                                      @oninput="OnInputMenu"
                                                                                      SelectedItemChanged="((MenuDto e) => SelectedItemChanged(e))"
                                                                                      @bind-Value="a.MenuId">
                                                                            <Columns>
                                                                                <DxListEditorColumn Visible="false" FieldName="@nameof(MenuDto.Id)"
                                                                                                    Caption="Id" />
                                                                                <DxListEditorColumn FieldName="@nameof(MenuDto.Name)"
                                                                                                    Caption="Name" />
                                                                                <DxListEditorColumn FieldName="Parent.Name"
                                                                                                    Caption="Parent Menu" />
                                                                                <DxListEditorColumn FieldName="@nameof(MenuDto.Sequence)"
                                                                                                    Caption="Sequence" />
                                                                                <DxListEditorColumn FieldName="@nameof(MenuDto.Url)"
                                                                                                    Caption="Url" />
                                                                            </Columns>
                                                                        </MyDxComboBox>
                                                                        <ValidationMessage For="@(()=>a.MenuId)" />
                                                                    </DxFormLayoutItem>

                                                                    <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Create">
                                                                        <DxCheckBox @bind-Checked="@a.IsCreate" />
                                                                        <ValidationMessage For="@(()=> @a.IsCreate)"   />
                                                                    </DxFormLayoutItem>
                                                                    <DxFormLayoutItem CaptionCssClass=" normal-caption" Caption="Read">
                                                                        <DxCheckBox @bind-Checked="@a.IsRead" />
                                                                        <ValidationMessage For="@(()=> @a.IsRead)"   />
                                                                    </DxFormLayoutItem>
                                                                    <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Update">
                                                                        <DxCheckBox @bind-Checked="@a.IsUpdate" />
                                                                        <ValidationMessage For="@(()=> @a.IsUpdate)"   />
                                                                    </DxFormLayoutItem>
                                                                    <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Delete">
                                                                        <DxCheckBox @bind-Checked="@a.IsDelete" />
                                                                        <ValidationMessage For="@(()=> @a.IsDelete)"   />
                                                                    </DxFormLayoutItem>
                                                                    <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Import">
                                                                        <DxCheckBox @bind-Checked="@a.IsImport" />
                                                                        <ValidationMessage For="@(()=> @a.IsImport)"   />
                                                                    </DxFormLayoutItem>
                                                                </DxFormLayout>
                                                            </EditFormTemplate>
                                                        </MyGridPaginate>

                                                        <div class="row">
                                                            <DxFormLayout>
                                                                <div class="col-md-9">
                                                                    <DxFormLayoutItem>
                                                                        <DxPager PageCount="totalCount"
                                                                                 ActivePageIndexChanged="OnPageIndexChanged"
                                                                                 ActivePageIndex="activePageIndex"
                                                                                 VisibleNumericButtonCount="10"
                                                                                 SizeMode="SizeMode.Medium"
                                                                                 NavigationMode="PagerNavigationMode.Auto">
                                                                        </DxPager>
                                                                    </DxFormLayoutItem>
                                                                </div>
                                                                <div class="col-md-3 d-flex justify-content-end">
                                                                    <DxFormLayoutItem Caption="Page Size:">
                                                                        <MyDxComboBox Data="(new[] { 10, 25, 50, 100 })"
                                                                                      NullText="Select Page Size"
                                                                                      ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Never"
                                                                                      SelectedItemChanged="((int e ) => OnPageSizeIndexChanged(e))"
                                                                                      @bind-Value="pageSize">
                                                                        </MyDxComboBox>
                                                                    </DxFormLayoutItem>
                                                                </div>
                                                            </DxFormLayout>
                                                        </div>
                                                    </Template>
                                                </DxFormLayoutItem>

                                            }
                                        </DxFormLayout>

                                    </div>
                                </div>
                            </EditForm>
                        </DxLoadingPanel>
                    </div>
                </div>
            </div>
        </section>
    </div>
}
else if (UserAccessCRUID is not null && (!UserAccessCRUID.IsCreate && !UserAccessCRUID.IsUpdate))
{
    <InvalidPermissionPage />
}
else
{
    <LoadingIndicatorLayout />
}   