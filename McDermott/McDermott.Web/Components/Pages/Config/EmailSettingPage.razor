@page "/config/email-setting"
@rendermode InteractiveServer

<PageTitle>McDermott - Master Data Email Setting</PageTitle>
<style>
    .my-style {
        min-width: 50%;
    }
</style>
@if (IsAccess)
{
    <div class="wrapper">

        <McDermott.Web.Components.Layout.BaseContentHeaderLayout Title="Email Setting" />

        <section class="content">
            <div class="container-fluid">
                <div class="row">
                    <div class="col">
                        <div class="card">
                            <div class="card-body">
                                <DxLoadingPanel @bind-Visible="PanelVisible"
                                                IndicatorAnimationType="WaitIndicatorAnimationType.Pulse"
                                                IsContentBlocked="true"
                                                ApplyBackgroundShading="true"
                                                IndicatorAreaVisible="false"
                                                Text="Fetching Data...">

                                    <DxGrid @ref="Grid" PagerNavigationMode="PagerNavigationMode.InputBox"
                                            Data="EmailSettings"
                                            PageSize="10"
                                            @bind-SelectedDataItems="@SelectedDataItems"
                                            FilterMenuButtonDisplayMode="GridFilterMenuButtonDisplayMode.Always"
                                            KeyFieldName="Id"
                                            CustomizeDataRowEditor="Grid_CustomizeDataRowEditor"
                                            DataItemDeleting="OnDelete"
                                            PagerPosition="GridPagerPosition.Bottom"
                                            PageSizeSelectorVisible="true"
                                            PageSizeSelectorItems="@(new int[] { 10, 20, 50, 100 })"
                                            PageSizeSelectorAllRowsItemVisible="true"
                                            PagerSwitchToInputBoxButtonCount="10"
                                            AllowSelectRowByClick="true"
                                            FocusedRowEnabled="true"
                                            PagerVisibleNumericButtonCount="10"
                                            FocusedRowChanged="Grid_FocusedRowChanged"
                                            ShowGroupPanel="true"
                                            AutoExpandAllGroupRows="true"
                                            ShowFilterRow="true"
                                            CustomizeElement="Grid_CustomizeElement"
                                            ShowSearchBox="true"
                                            SelectAllCheckboxMode="GridSelectAllCheckboxMode.Mixed"
                                            KeyboardNavigationEnabled="true">
                                        <ToolbarTemplate>
                                            <DxToolbar ItemRenderStyleMode="ToolbarRenderStyleMode.Plain">
                                                <DxToolbarItem Visible="@UserAccessCRUID.Create" Text="New" Click="() => NewItem_Click()" IconCssClass="fa-solid fa-plus" />
                                                <DxToolbarItem Visible="@UserAccessCRUID.Update" Text="Edit" Click=" EditItem_Click" IconCssClass="fa-solid fa-pen-to-square" Enabled="SelectedDataItems.Count > 0 && EmailSettings.Count > 0" />
                                                <DxToolbarItem Visible="@UserAccessCRUID.Delete" Text="Delete" Click="DeleteItem_Click" IconCssClass="fa-solid fa-trash" Enabled="SelectedDataItems.Count > 0 && EmailSettings.Count > 0" />
                                            </DxToolbar>


                                        </ToolbarTemplate>

                                        <Columns>
                                            <DxGridSelectionColumn Width="15px" />
                                            <DxGridDataColumn FieldName="Sequence" Caption="Priority" SortIndex="0" />
                                            <DxGridDataColumn FieldName="Description" Caption="Description" />
                                            <DxGridDataColumn FieldName="Smtp_Host" Caption="SMTP Server" />
                                            <DxGridDataColumn FieldName="Smtp_User" Caption="Username" />
                                            <DxGridDataColumn FieldName="Smtp_Encryption" Caption="Connection Security" />
                                            <DxGridDataColumn FieldName="Status" Caption="Status" />
                                        </Columns>

                                    </DxGrid>
                                </DxLoadingPanel>
                                <DxPopup @bind-Visible="@PopUpVisible"
                                         HeaderText="@TextPopUp"
                                         Width="60%"
                                         Height="90%">
                                    <EditForm Model="@FormEmails" Context="EditFormContext"
                                              OnInvalidSubmit="@HandleInvalidSubmit"
                                              OnValidSubmit="@HandleValidSubmit">
                                        <DataAnnotationsValidator />
                                        <DxFormLayout CssClass="mt pt-1">
                                            <DxFormLayoutGroup Caption="Configuration Email" ColSpanLg="12" CssClass="mt-3 mb-2">
                                                <DxFormLayoutItem ColSpanMd="6" Caption="Description:" CaptionCssClass="normal-caption">
                                                    <DxTextBox @bind-Text="@FormEmails.Description" NullText="Description.." ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto" ShowValidationIcon="true"></DxTextBox>
                                                </DxFormLayoutItem>
                                                <DxFormLayoutItem ColSpanMd="6" Caption="Priority:" CaptionCssClass="normal-caption">
                                                    <DxSpinEdit @bind-Value="@FormEmails.Sequence" NullText="Priority" MinValue="0" ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto" ShowValidationIcon="true" />
                                                </DxFormLayoutItem>
                                            </DxFormLayoutGroup>
                                            <DxFormLayoutGroup Caption="Connection Information" ColSpanMd="12" CssClass="my-2">
                                                <DxFormLayoutItem ColSpanMd="6" Caption="SMTP Server:" CaptionCssClass="required-caption normal-caption">
                                                    <DxTextBox @bind-Text="@FormEmails.Smtp_Host" NullText="Smtp Server" ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto" ShowValidationIcon="true" />
                                                    <ValidationMessage For="@(()=>FormEmails.Smtp_Host)" />
                                                </DxFormLayoutItem>
                                                <DxFormLayoutItem ColSpanMd="6" Caption="SMTP Port:" CaptionCssClass="required-caption normal-caption">
                                                    <DxTextBox @bind-Text="@FormEmails.Smtp_Port" NullText="Port" ShowValidationIcon="true" />
                                                    <ValidationMessage For="@(()=>FormEmails.Smtp_Port)" />
                                                </DxFormLayoutItem>
                                            </DxFormLayoutGroup>
                                            <DxFormLayoutGroup Caption="Security And Authentication" ColSpanMd="12" CssClass="my-2">
                                                <DxFormLayoutItem ColSpanMd="12" Caption="Conection Security:" CaptionCssClass="required-caption normal-caption">
                                                    <Template>
                                                        <DxComboBox Data="@Stts_Ecrypt"
                                                                    NullText="Select Ecrypt..."
                                                                    AllowUserInput="true"
                                                                    SelectedItemChanged="@((string city) => SelectedItemChanged(city))"
                                                                    ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                                    FilteringMode="@DataGridFilteringMode.Contains"
                                                                    @bind-Value="@FormEmails.Smtp_Encryption"
                                                                    ShowValidationIcon="true">
                                                        </DxComboBox>
                                                        <ValidationMessage For="@(()=>FormEmails.Smtp_Encryption)" />
                                                    </Template>
                                                </DxFormLayoutItem>
                                                <DxFormLayoutItem ColSpanMd="12" Caption="Username:" CaptionCssClass="required-caption normal-caption">
                                                    <DxTextBox @bind-Text="@FormEmails.Smtp_User" NullText="Username" ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto" ShowValidationIcon="true" /><ValidationMessage For="@(()=>FormEmails.Smtp_User)" />
                                                </DxFormLayoutItem>
                                                <DxFormLayoutItem ColSpanMd="12" Caption="Password:" CaptionCssClass="required-caption normal-caption">
                                                    <DxTextBox @bind-Text="@FormEmails.Smtp_Pass"
                                                               NullText="Password"
                                                               Password="true"
                                                               ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                               InputId="tbPassword" ShowValidationIcon="true" />
                                                    <ValidationMessage For="@(()=>FormEmails.Smtp_Pass)" />
                                                </DxFormLayoutItem>
                                            </DxFormLayoutGroup>
                                        </DxFormLayout>
                                        <DxFormLayout CssClass="col-12 my-0 py-1">
                                            <DxFormLayoutItem ColSpanMd="5" CssClass="my-2">
                                                <DxButton IconCssClass="fa-solid fa-wifi"
                                                          RenderStyleMode="@ButtonRenderStyleMode.Outline"
                                                          Text="Test Conenction"
                                                          onclick="@TestConnect"
                                                          CssClass="w-20 ml" />
                                            </DxFormLayoutItem>
                                            <DxFormLayoutItem ColSpanMd="6" CssClass="my-2">
                                                @if (isLoading)
                                                {
                                                    <LoadingIndicatorLayout></LoadingIndicatorLayout>
                                                }
                                                else
                                                {
                                                    @if (IsConnected == true)
                                                    {
                                                        <h6 class="text-success">Connection Successful!</h6>
                                                    }
                                                    else if (IsConnected == false)
                                                    {
                                                        <h6 class="text-danger">Connection Failed!</h6>
                                                    }
                                                    else
                                                    {
                                                        <h6 class="text-info">Connection Status Unknown.</h6>
                                                    }

                                                }

                                            </DxFormLayoutItem>
                                            <DxFormLayoutItem ColSpanMd="12" CssClass="my-2">
                                                <div class="row justify-content-end">
                                                    <div class="col-auto align-self-end">
                                                        <DxButton Text="Save" RenderStyleMode="@ButtonRenderStyleMode.Outline" RenderStyle="ButtonRenderStyle.Info" SubmitFormOnClick="true" Click="OnSave"></DxButton>
                                                        <DxButton Text="Discard" RenderStyleMode="@ButtonRenderStyleMode.Outline" RenderStyle="ButtonRenderStyle.Danger" Click="OnCancel"></DxButton>
                                                    </div>
                                                </div>
                                            </DxFormLayoutItem>

                                        </DxFormLayout>

                                    </EditForm>
                                </DxPopup>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>


}