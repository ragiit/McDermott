@page "/config/menu"
@rendermode InteractiveServer

<PageTitle>McHealthCare - Menu</PageTitle>

@if (IsAccess)
{
    <div class="wrapper">

        <BaseHeaderPage Title="Menu" OnClickBack="@(async () => await LoadData())" ShowBackButton="false" />

        <section class="content">
            <div class="container-fluid">
                <div class="row">
                    <div class="col">
                        <div class="card">
                            <InputFile id="fileInput" style="display:none" OnChange="@ImportExcelFile" accept=".xlsx" multiple="false"></InputFile>

                            <DxLoadingPanel @bind-Visible="PanelVisible"
                                            IndicatorAnimationType="WaitIndicatorAnimationType.Pulse"
                                            IsContentBlocked="true"
                                            ApplyBackgroundShading="true"
                                            IndicatorAreaVisible="false"
                                            Text="Fetching Data...">
                                <MyGrid @ref="Grid"
                                        Data="Menus.OrderBy(x => x.ParentMenu == null).ThenBy(x =>  x.Sequence.GetValueOrDefault().ToInt32())"
                                        @bind-SelectedDataItems="@SelectedDataItems"
                                        EditModelSaving="OnSave"
                                        DataItemDeleting="OnDelete"
                                        FocusedRowChanged="Grid_FocusedRowChanged"
                                        KeyFieldName="Id">

                                    <ToolbarTemplate>
                                        <MyDxToolbarBase TItem="MenuDto"
                                                         Items="@Menus"
                                                         SelectedDataItems="@SelectedDataItems"
                                                         NewItem_Click="@NewItem_Click"
                                                         EditItem_Click="@EditItem_Click"
                                                         Grid="Grid"
                                                         DeleteItem_Click="@DeleteItem_Click"
                                                         Refresh_Click="@Refresh_Click"
                                                         IsImport="true"
                                                         ImportFile="ImportFile"
                                                         ExportToExcel="ExportToExcel"
                                                         VisibleNew="UserAccessCRUID.Create"
                                                         VisibleEdit="UserAccessCRUID.Update"
                                                         VisibleDelete="UserAccessCRUID.Delete" />
                                    </ToolbarTemplate>

                                    <Columns>
                                        <DxGridSelectionColumn Width="15px" />
                                        <DxGridDataColumn MinWidth="200" FieldName="Name" SortIndex="0" />
                                        <DxGridDataColumn MinWidth="200" FieldName="ParentMenu" Caption="Parent" SortIndex="0" />
                                        <DxGridDataColumn MinWidth="200" FieldName="Sequence" />
                                        <DxGridDataColumn MinWidth="200" FieldName="Url" Caption="URL" />

                                    </Columns>
                                    <EditFormTemplate Context="EditFormContext">
                                        @{
                                            var a = (MenuDto)EditFormContext.EditModel;
                                        }
                                        <DxFormLayout CssClass="w-100">
                                            <DxFormLayoutItem CaptionCssClass="required-caption normal-caption" Caption="Name" ColSpanMd="12">
                                                <DxTextBox @bind-Text="@a.Name" ShowValidationIcon="true" ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto" NullText="Name" />
                                                <ValidationMessage For="@(()=> a.Name)"   />
                                            </DxFormLayoutItem>
                                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Parent Menu" ColSpanMd="12">
                                                <MyDxComboBox Data="@ParentMenuDto"
                                                              NullText="Select Parent Menu..."
                                                              @bind-Value="@a.ParentMenu"
                                                              TextFieldName="Name"
                                                              ValueFieldName="Name">
                                                </MyDxComboBox>
                                            </DxFormLayoutItem>
                                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Sequence" ColSpanMd="12">
                                                <DxSpinEdit ShowValidationIcon="true" MinValue="0" @bind-Value="@a.Sequence" NullText="Sequence" ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto" />
                                            </DxFormLayoutItem>
                                            <DxFormLayoutItem CaptionCssClass="required-caption normal-caption" Caption="URL" ColSpanMd="12">
                                                <DxTextBox @bind-Text="@a.Url" ShowValidationIcon="true" ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto" NullText="Url" />
                                                <ValidationMessage For="@(()=> a.Url)"   />
                                            </DxFormLayoutItem>
                                        </DxFormLayout>
                                    </EditFormTemplate>
                                </MyGrid>
                            </DxLoadingPanel>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
}
else
{
    <LoadingIndicatorLayout />
}