@page "/medical/diagnoses"
@rendermode InteractiveServer

<PageTitle>McHealthCare - Diagnosis</PageTitle>

@if (IsAccess && UserAccessCRUID is not null && UserAccessCRUID.IsRead)
{
    <div class="wrapper">

        <BaseHeaderPage Title="Diagnosis" OnClickBack="@(async () => await LoadData())" ShowBackButton="false" />

        <section class="content">
            <div class="container-fluid">
                <div class="row">
                    <div class="col">
                        <div class="card">
                            <InputFile id="fileInput" style="display:none" OnChange="@ImportExcelFile" accept=".xlsx" multiple="false"></InputFile>

                            <DxLoadingPanel @bind-Visible="PanelVisible"
                                            IndicatorAnimationType="WaitIndicatorAnimationType.Pulse"
                                            IsContentBlocked="true"
                                            ApplyBackgroundShading="true"
                                            IndicatorAreaVisible="false"
                                            Text="Fetching Data...">

                                <MyGridPaginate @ref="Grid"
                                                Data="Diagnoses"
                                                PageSize="10"
                                                @bind-SelectedDataItems="@SelectedDataItems"
                                                KeyFieldName="Id"
                                                EditModelSaving="OnSave"
                                                DataItemDeleting="OnDelete"
                                                SearchTextChanged="OnSearchBoxChanged"
                                                FocusedRowChanged="Grid_FocusedRowChanged">

                                    <ToolbarTemplate>
                                        <MyDxToolbarBase TItem="DiagnosisDto"
                                                         Items="@Diagnoses"
                                                         Grid="Grid"
                                                         SelectedDataItems="@SelectedDataItems"
                                                         NewItem_Click="@NewItem_Click"
                                                         EditItem_Click="@EditItem_Click"
                                                         DeleteItem_Click="@DeleteItem_Click"
                                                         Refresh_Click="@(async () => await LoadData())"
                                                         ImportFile="ImportFile"
                                                         ExportToExcel="ExportToExcel"
                                                         IsImport="UserAccessCRUID.IsImport"
                                                         VisibleNew="UserAccessCRUID.IsCreate"
                                                         VisibleEdit="UserAccessCRUID.IsUpdate"
                                                         VisibleDelete="UserAccessCRUID.IsDelete" />
                                    </ToolbarTemplate>

                                    <Columns>
                                        <DxGridSelectionColumn Width="15px" />
                                        <DxGridDataColumn FieldName="Code" />
                                        <DxGridDataColumn FieldName="Name" Caption="Name (en)" />
                                        <DxGridDataColumn FieldName="NameInd" Caption="Name (id)" />
                                        <DxGridDataColumn FieldName="CronisCategory.Name" Caption="Chronic Category" />
                                    </Columns>

                                    <EditFormTemplate Context="EditFormContext">
                                        @{
                                            var a = (DiagnosisDto)EditFormContext.EditModel;
                                        }
                                        <DxFormLayout CssClass="w-100">
                                            <DxFormLayoutItem CaptionCssClass="required-caption normal-caption" Caption="Name (en)" ColSpanMd="12">
                                                <MyTextBox @bind-Text="@a.Name" NullText="Name (en)" />
                                                <ValidationMessage For="@(()=> a.Name)"   />
                                            </DxFormLayoutItem>
                                            <DxFormLayoutItem CaptionCssClass="required-caption normal-caption" Caption="Name (id)" ColSpanMd="12">
                                                <MyTextBox @bind-Text="@a.NameInd" NullText="Name (id)" />
                                                <ValidationMessage For="@(()=> a.NameInd)"   />
                                            </DxFormLayoutItem>
                                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Code" ColSpanMd="12">
                                                <MyTextBox @bind-Text="@a.Code" NullText="Code" />
                                                <ValidationMessage For="@(()=> a.Code)"   />
                                            </DxFormLayoutItem> 
                                            <DxFormLayoutItem CaptionCssClass="required-caption normal-caption" Caption="Chronic Category" ColSpanMd="12">
                                                <MyDxComboBox Data="Cronises"
                                                              NullText="Select Chronic Category"
                                                              TextFieldName="Name"
                                                              ValueFieldName="Id"
                                                              @oninput="OnInputCronisCategory"
                                                              SelectedItemChanged="((CronisCategoryDto e) => SelectedItemChanged(e))"
                                                              @bind-Value="a.CronisCategoryId">
                                                    <Columns>
                                                        <DxListEditorColumn FieldName="@nameof(CronisCategory.Name)" Caption="Name" />
                                                        <DxListEditorColumn FieldName="@nameof(CronisCategory.Description)" Caption="Description" />
                                                    </Columns>
                                                </MyDxComboBox>
                                                <ValidationMessage For="@(()=>a.CronisCategoryId)" />
                                            </DxFormLayoutItem>
                                        </DxFormLayout>
                                    </EditFormTemplate>
                                </MyGridPaginate>
                                <div class="row">
                                    <DxFormLayout>
                                        <div class="col-md-9">
                                            <DxFormLayoutItem>
                                                <DxPager PageCount="totalCount"
                                                         ActivePageIndexChanged="OnPageIndexChanged"
                                                         ActivePageIndex="activePageIndex"
                                                         VisibleNumericButtonCount="10"
                                                         SizeMode="SizeMode.Medium"
                                                         NavigationMode="PagerNavigationMode.Auto">
                                                </DxPager>
                                            </DxFormLayoutItem>
                                        </div>
                                        <div class="col-md-3 d-flex justify-content-end">
                                            <DxFormLayoutItem Caption="Page Size:">
                                                <MyDxComboBox Data="(new[] { 10, 25, 50, 100 })"
                                                              NullText="Select Page Size"
                                                              ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Never"
                                                              SelectedItemChanged="((int e ) => OnPageSizeIndexChanged(e))"
                                                              @bind-Value="pageSize">
                                                </MyDxComboBox>
                                            </DxFormLayoutItem>
                                        </div>
                                    </DxFormLayout>
                                </div>
                            </DxLoadingPanel>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
}
else if (UserAccessCRUID is not null && !UserAccessCRUID.IsRead)
{
    <InvalidPermissionPage />
}
else
{
    <LoadingIndicatorLayout />
}