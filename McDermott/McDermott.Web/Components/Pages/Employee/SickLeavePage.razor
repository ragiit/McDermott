@page "/employee/sick-leave"
@page "/employee/sick-leave/{Id:long}"
@rendermode InteractiveServer

<div class="wrapper">
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>Sick Leave Management</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="/">Home</a></li>
                        <li class="breadcrumb-item" @onclick="LoadData"><a href="/employee/sick-leave">Sick Leave Mangement</a></li>
                    </ol>
                </div>
            </div>
        </div>
    </section>

    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col">
                    <div class="card">
                        <div class="card-body">
                            <DxLoadingPanel @bind-Visible="IsLoading"
                                            IndicatorAnimationType="WaitIndicatorAnimationType.Pulse"
                                            IsContentBlocked="true"
                                            ApplyBackgroundShading="true"
                                            IndicatorAreaVisible="false"
                                            Text="Fetching Data...">
                                <DxGrid @ref="@Grid"
                                        Data="@SickLeaves"
                                        PagerNavigationMode="PagerNavigationMode.InputBox"
                                        PageSize="10"
                                        @bind-SelectedDataItems="@SelectedDataItems"
                                        AllowSelectRowByClick="true"
                                        FilterMenuButtonDisplayMode="GridFilterMenuButtonDisplayMode.Always"
                                        KeyFieldName="Id"
                                        CustomizeDataRowEditor="Grid_CustomizeDataRowEditor"
                                        FocusedRowEnabled="true"
                                        PopupEditFormCssClass="pw-800"
                                        PagerPosition="GridPagerPosition.Bottom"
                                        PageSizeSelectorVisible="true"
                                        PageSizeSelectorItems="@(new int[] { 10, 20, 50, 100 })"
                                        PageSizeSelectorAllRowsItemVisible="true"
                                        PagerSwitchToInputBoxButtonCount="10"
                                        PagerVisibleNumericButtonCount="10"
                                        FocusedRowChanged="Grid_FocusedRowChanged"
                                        ShowGroupPanel="true"
                                        CustomizeElement="GridExtention.Grid_CustomizeElement"
                                        AutoExpandAllGroupRows="true"
                                        ShowFilterRow="true"
                                        ShowSearchBox="true"
                                        SelectAllCheckboxMode="GridSelectAllCheckboxMode.Mixed"
                                        KeyboardNavigationEnabled="true">
                                    <ToolbarTemplate>
                                        <DxToolbar ItemRenderStyleMode="ToolbarRenderStyleMode.Contained">
                                            <DxToolbarItem Text="Send Email" RenderStyle="ButtonRenderStyle.Primary" CssClass="w-100" Click="ConfirmAndSendEmail" IconCssClass="fa-solid fa-envelope-circle-check" Enabled="SelectedDataItems.Count > 0 && SickLeaves.Count > 0 && Employee" />
                                        </DxToolbar>
                                    </ToolbarTemplate>
                                    
                                    <Columns>
                                        <DxGridSelectionColumn Width="15px" />
                                        <DxGridDataColumn FieldName="PatientId" AllowSort="false" Width="10px" MinWidth="100" TextAlignment="GridTextAlignment.Center">
                                            <CellDisplayTemplate>
                                                <DxButton RenderStyle="ButtonRenderStyle.Success"
                                                          Attributes="@(new Dictionary<string, object> {  ["title"] = "Print" })"
                                                          IconCssClass="fa-solid fa-print"
                                                          Click="@(()=>PrintToLeave((context.DataItem as SickLeaveDto).GeneralConsultans.PatientId))"
                                                          CssClass="me-1" />

                                               @*  <DxButton RenderStyle="ButtonRenderStyle.Primary"
                                                          Attributes="@(new Dictionary<string, object> {  ["title"] = "Send To Email" })"
                                                          IconCssClass="fa-solid fa-paper-plane"
                                                          Click="@(()=>SendToEmail((context.DataItem as SickLeaveDto).PatientId))"
                                                          IconPosition="ButtonIconPosition.AfterText" /> *@
                                            </CellDisplayTemplate>
                                            <HeaderCaptionTemplate>Action</HeaderCaptionTemplate>
                                        </DxGridDataColumn>
                                        <DxGridDataColumn MinWidth="200" FieldName="GeneralConsultans.Patient.Name" Caption="Patient Name" />
                                        <DxGridDataColumn MinWidth="150" FieldName="GeneralConsultans.NoRM" Caption="NO RM" />
                                        <DxGridDataColumn MinWidth="150" FieldName="TypeLeave" Caption="Type" />
                                        <DxGridDataColumn MinWidth="150" FieldName="YesOrNoEmployee" Caption="IsEmployee" />
                                        @if (TypeLeaves == "SickLeave")
                                        {
                                            <DxGridDataColumn MinWidth="150" FieldName="GeneralConsultans.StartDateSickLeave" Caption="Start Date Leave" DisplayFormat="dd MMMM yyyy" />
                                            <DxGridDataColumn MinWidth="150" FieldName="GeneralConsultans.EndDateSickLeave" Caption="End Date Leave" DisplayFormat="dd MMMM yyyy" />
                                        }
                                        else if (TypeLeaves == "Maternity")
                                        {
                                            <DxGridDataColumn MinWidth="150" FieldName="GeneralConsultans.StartMaternityLeave" Caption="Start Date Leave" DisplayFormat="dd MMMM yyyy" />
                                            <DxGridDataColumn MinWidth="150" FieldName="GeneralConsultans.EndMaternityLeave" Caption="End Date Leave" DisplayFormat="dd MMMM yyyy" />

                                        }
                                        <DxGridDataColumn MinWidth="200" FieldName="Diagnosis" Caption="Diagnosis" />
                                        <DxGridDataColumn MinWidth="130" FieldName="Status" Caption="Status" />
                                    </Columns>
                                </DxGrid>
                            </DxLoadingPanel>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

<DxPopup Visible="isPrint" Width="874px">
    <DxRichEdit ActiveRibbonTabIndex="5" DocumentContent="@DocumentContent" CssClass="w-100 ch-720">
        <MailMergeSettings>
            <DxMailMergeSettings ViewMergedData="true" Data="SickLeaves"></DxMailMergeSettings>
        </MailMergeSettings>
    </DxRichEdit>
</DxPopup>

<DxPopup Visible="isShow" HeaderText="Send Email" CloseOnOutsideClick="false" CloseOnEscape="false" ShowFooter="true" ShowCloseButton="false" Width="300" MinWidth="100">
    <BodyContentTemplate>
        <div class="text-wrap">
            <p class="fw-4">Are you sure you want to send this email? </p>
           </div>
    </BodyContentTemplate>
    <FooterContentTemplate Context="Context">
        <DxButton Enabled="!IsLoading" CssClass="popup-button my-1 ms-2" Click="SendToEmail" RenderStyle="ButtonRenderStyle.Primary" Text="Yes" SubmitFormOnClick="true"/>
        <DxButton CssClass="popup-button my-1 ms-2" Click="Cancel" RenderStyle="ButtonRenderStyle.Danger" Text="No"  />
    </FooterContentTemplate>
</DxPopup>