<div class="w-100">
    <div class="w-100">
        <div class="card">
            <div class="card-header">
                <span class="fw-bolder">General Information</span>
            </div>

            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <DxFormLayout>
                            <DxFormLayoutItem CaptionCssClass="required-caption normal-caption" Caption="Name" ColSpanMd="12">
                                <DxTextBox @bind-Text="@UserForm.Name"
                                           ShowValidationIcon="true"
                                           ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                           NullText="Name" />
                                <ValidationMessage For="@(() => UserForm.Name)"   />
                            </DxFormLayoutItem>
                            @if (Convert.ToBoolean(UserForm.IsPatient))
                            {
                                <DxFormLayoutItem CaptionCssClass="required-caption normal-caption" Caption="Medical Record" ColSpanMd="12">
                                    <DxTextBox @bind-Text="@UserForm.NoRm"
                                               ShowValidationIcon="true"
                                               ReadOnly
                                               ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                               NullText="Medical Record" />
                                    <ValidationMessage For="@(() => UserForm.NoRm)"   />
                                </DxFormLayoutItem>
                            }
                            <DxFormLayoutItem CaptionCssClass="required-caption normal-caption" Caption="Email" ColSpanMd="12">
                                <DxMaskedInput @bind-Value="@UserForm.Email"
                                               Mask="@Helper.EmailMask"
                                               ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                               NullText="mail@domain.com"
                                               ShowValidationIcon="true"
                                               MaskMode="MaskMode.RegEx">
                                    <Buttons>
                                        <DxEditorButton IconCssClass="fa-solid fa-envelope" />
                                    </Buttons>
                                    <ChildContent>
                                        <DxRegExMaskProperties MaskAutoCompleteMode="@MaskAutoCompleteMode.Strong"
                                                               Placeholder="@('_')"
                                                               PlaceholdersVisible="true" />
                                    </ChildContent>
                                </DxMaskedInput>
                                <ValidationMessage For="@(() => UserForm.Email)"   />
                            </DxFormLayoutItem>
                            <DxFormLayoutItem Caption="Identity Number" ColSpanMd="12" CaptionCssClass="normal-caption">
                                <DxMaskedInput @bind-Value="@UserForm.NoId"
                                               ShowValidationIcon="true"
                                               ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                               NullText="Identity Number">
                                </DxMaskedInput>
                            </DxFormLayoutItem>
                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Identity Type" ColSpanMd="12">
                                <MyDxComboBox Data="@Helper.IdentityTypes" @bind-Value="@UserForm.TypeId"></MyDxComboBox>
                            </DxFormLayoutItem>
                            <DxFormLayoutItem CaptionCssClass="normal-caption" ColSpanMd="12" Caption="Expired Identity"
                                              Visible="@((UserForm.TypeId == null || UserForm.TypeId.Contains("VISA") || UserForm.TypeId.Contains("SIM")))">
                                <DxDateEdit NullText="Expired Identity" @bind-Date="@UserForm.ExpiredId" Mask="@DateTimeMask.ShortDate" />
                            </DxFormLayoutItem>
                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Religion" ColSpanMd="12">
                                <MyDxComboBox Data="@Religions" NullText="Religion" @bind-Value="@UserForm.ReligionId" TextFieldName="Name" ValueFieldName="Id" />
                            </DxFormLayoutItem>
                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Date of Birth" ColSpanMd="12">
                                <DxDateEdit @bind-Date="@UserForm.DateOfBirth" NullText="Date of Birth" MaxDate="DateTime.Now" Mask="@DateTimeMask.ShortDate" />
                            </DxFormLayoutItem>
                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Gender" ColSpanMd="12">
                                <MyDxComboBox Data="@Helper.Genders" NullText="Gender" @bind-Value="@UserForm.Gender" />
                            </DxFormLayoutItem>
                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Martial Status" ColSpanMd="12">
                                <MyDxComboBox Data="@Helper.MartialStatuss" @bind-Value="@UserForm.MartialStatus" NullText="Select Martial Status"></MyDxComboBox>
                            </DxFormLayoutItem>
                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Blood Type" ColSpanMd="12">
                                <MyDxComboBox Data="@Helper.BloodTypes" @bind-Value="@UserForm.BloodType" NullText="Select Blood Type"></MyDxComboBox>
                            </DxFormLayoutItem>
                        </DxFormLayout>
                    </div>
                    <div class="col-md-6">
                        <DxFormLayout>
                            <DxFormLayoutItem CaptionCssClass="required-caption normal-caption" Caption="Mobile" ColSpanMd="12">
                                <DxMaskedInput @bind-Value="@UserForm.MobilePhone"
                                               ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                               NullText="Mobile Phone"
                                               ShowValidationIcon="true">
                                </DxMaskedInput>
                                <ValidationMessage For="@(() => UserForm.MobilePhone)"   />
                            </DxFormLayoutItem>
                            <DxFormLayoutItem CaptionCssClass="required-caption normal-caption" Caption="Current Mobile" ColSpanMd="12">
                                <DxMaskedInput @bind-Value="@UserForm.CurrentMobile"
                                               ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                               NullText="Current Mobile"
                                               ShowValidationIcon="true">
                                </DxMaskedInput>
                                <ValidationMessage For="@(() => UserForm.MobilePhone)"   />
                            </DxFormLayoutItem>
                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Phone" ColSpanMd="12">
                                <DxMaskedInput @bind-Value="@UserForm.HomePhoneNumber"
                                               ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                               ShowValidationIcon="true"
                                               NullText="Home Mobile Phone">
                                </DxMaskedInput>
                            </DxFormLayoutItem>
                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="NPWP" ColSpanMd="12">
                                <DxTextBox @bind-Text="@UserForm.Npwp" ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto" NullText="NPWP" />
                            </DxFormLayoutItem>
                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Emergency Name" ColSpanMd="12">
                                <DxTextBox @bind-Text="@UserForm.EmergencyName" ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto" NullText="Emergency Name" />
                            </DxFormLayoutItem>
                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Emergency Relation" ColSpanMd="12">
                                <DxTextBox @bind-Text="@UserForm.EmergencyRelation" ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto" NullText="Emergency Relation" />
                            </DxFormLayoutItem>
                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Emergency Email" ColSpanMd="12">
                                <DxTextBox @bind-Text="@UserForm.EmergencyEmail" ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto" NullText="Emergency Email" />
                            </DxFormLayoutItem>
                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Emergency Phone" ColSpanMd="12">
                                <DxMaskedInput @bind-Value="@UserForm.EmergencyPhone"
                                               NullText="Emergency Phone"
                                               ShowValidationIcon="true"
                                               ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto">
                                </DxMaskedInput>
                            </DxFormLayoutItem>
                        </DxFormLayout>
                    </div>
                    <div class="col-md-12">
                        <DxFormLayout>
                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Residence Address" ColSpanMd="12">
                                <DxCheckBox @bind-Checked="@UserForm.IsSameDomicileAddress" />
                            </DxFormLayoutItem>
                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="KTP Address" ColSpanMd="12">
                                <Template>
                                    <DxGridLayout ColumnSpacing="8px" RowSpacing="8px">
                                        <Rows>
                                            <DxGridLayoutRow />
                                            <DxGridLayoutRow />
                                            <DxGridLayoutRow />
                                            <DxGridLayoutRow />
                                            <DxGridLayoutRow />
                                            <DxGridLayoutRow />
                                        </Rows>
                                        <Columns>
                                            <DxGridLayoutColumn />
                                            <DxGridLayoutColumn />
                                        </Columns>
                                        <Items>
                                            <DxGridLayoutItem Row="0" Column="0" ColumnSpan="12">
                                                <Template>
                                                    <DxTextBox ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto" @bind-Text="@UserForm.IdCardAddress1" NullText="Street 1" />
                                                </Template>
                                            </DxGridLayoutItem>
                                            <DxGridLayoutItem Row="1" Column="0" ColumnSpan="12">
                                                <Template>
                                                    <DxTextBox ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto" @bind-Text="@UserForm.IdCardAddress2" NullText="Street 2" />
                                                </Template>
                                            </DxGridLayoutItem>
                                            <DxGridLayoutItem Row="2" Column="0" ColumnSpan="12">
                                                <Template>
                                                    <DxTextBox ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto" @bind-Text="@UserForm.IdCardRtRw" NullText="RT/RW" />
                                                </Template>
                                            </DxGridLayoutItem>
                                            <DxGridLayoutItem Row="3" Column="0" ColumnSpan="12">
                                                <Template>
                                                    <MyDxComboBox Data="Countries"
                                                                  NullText="Select Country"
                                                                  TextFieldName="Name"
                                                                  ValueFieldName="Id"
                                                                  @oninput="OnInputCountry"
                                                                  SelectedItemChanged="((CountryDto e) => SelectedItemChangedCountryChanged(e))"
                                                                  @bind-Value="UserForm.IdCardCountryId">
                                                        <Columns>
                                                            <DxListEditorColumn FieldName="@nameof(Country.Name)" Caption="Name" />
                                                            <DxListEditorColumn FieldName="@nameof(Country.Code)" Caption="Code" />
                                                        </Columns>
                                                    </MyDxComboBox>
                                                    <ValidationMessage For="@(()=>UserForm.IdCardCountryId)" />
                                                </Template>
                                            </DxGridLayoutItem>
                                            <DxGridLayoutItem Row="4" Column="0">
                                                <Template>
                                                    <MyDxComboBox Data="Provinces"
                                                                  NullText="Select Province"
                                                                  TextFieldName="Name"
                                                                  ValueFieldName="Id"
                                                                  @oninput="OnInputProvince"
                                                                  SelectedItemChanged="((ProvinceDto e) => SelectedItemChangedProvinceChanged(e))"
                                                                  @bind-Value="UserForm.IdCardProvinceId">
                                                        <Columns>
                                                            <DxListEditorColumn FieldName="@nameof(ProvinceDto.Name)" Caption="Name" />
                                                            <DxListEditorColumn FieldName="Country.Name" Caption="Country" />
                                                        </Columns>
                                                    </MyDxComboBox>
                                                    <ValidationMessage For="@(()=>UserForm.IdCardProvinceId)" />
                                                </Template>
                                            </DxGridLayoutItem>
                                            <DxGridLayoutItem Row="4" Column="1">
                                                <Template>
                                                    <MyDxComboBox Data="Cities"
                                                                  NullText="Select City"
                                                                  TextFieldName="Name"
                                                                  ValueFieldName="Id"
                                                                  @oninput="OnInputCity"
                                                                  SelectedItemChanged="((CityDto e) => SelectedItemChangedCityChanged(e))"
                                                                  @bind-Value="UserForm.IdCardCityId">
                                                        <Columns>
                                                            <DxListEditorColumn FieldName="@nameof(CityDto.Name)" Caption="Name" />
                                                            <DxListEditorColumn FieldName="Province.Name" Caption="Province" />
                                                        </Columns>
                                                    </MyDxComboBox>
                                                    <ValidationMessage For="@(()=>UserForm.IdCardCityId)" />
                                                </Template>
                                            </DxGridLayoutItem>
                                            <DxGridLayoutItem Row="5" Column="0">
                                                <Template>
                                                    <MyDxComboBox Data="Districts"
                                                                  NullText="Select District"
                                                                  TextFieldName="Name"
                                                                  ValueFieldName="Id"
                                                                  @oninput="OnInputDistrict"
                                                                  SelectedItemChanged="((DistrictDto e) => SelectedItemChangedDistrictChanged(e))"
                                                                  @bind-Value="UserForm.IdCardDistrictId">
                                                        <Columns>
                                                            <DxListEditorColumn FieldName="@nameof(District.Name)" Caption="Name" />
                                                            <DxListEditorColumn FieldName="Province.Name" Caption="Province" />
                                                            <DxListEditorColumn FieldName="City.Name" Caption="City" />
                                                        </Columns>
                                                    </MyDxComboBox>
                                                    <ValidationMessage For="@(()=>UserForm.IdCardDistrictId)" />
                                                </Template>
                                            </DxGridLayoutItem>
                                            <DxGridLayoutItem Row="5" Column="1">
                                                <Template>
                                                    <MyDxComboBox Data="Villages"
                                                                  NullText="Select Village"
                                                                  TextFieldName="Name"
                                                                  ValueFieldName="Id"
                                                                  @oninput="OnInputVillage"
                                                                  SelectedItemChanged="((VillageDto e) => SelectedItemChangedVillageChanged(e))"
                                                                  @bind-Value="UserForm.IdCardVillageId">
                                                        <Columns>
                                                            <DxListEditorColumn FieldName="@nameof(VillageDto.Name)" Caption="Name" />
                                                            <DxListEditorColumn FieldName="Province.Name" Caption="Province" />
                                                            <DxListEditorColumn FieldName="City.Name" Caption="City" />
                                                            <DxListEditorColumn FieldName="District.Name" Caption="District" />
                                                        </Columns>
                                                    </MyDxComboBox>
                                                    <ValidationMessage For="@(()=>UserForm.IdCardVillageId)" />
                                                </Template>
                                            </DxGridLayoutItem>
                                        </Items>
                                    </DxGridLayout>
                                </Template>
                            </DxFormLayoutItem>
                            <DxFormLayoutItem Visible="@(!UserForm.IsSameDomicileAddress)" CaptionCssClass="normal-caption" Caption="Residence Address" ColSpanMd="12">
                                <Template>
                                    <DxGridLayout ColumnSpacing="8px" RowSpacing="8px">
                                        <Rows>
                                            <DxGridLayoutRow />
                                            <DxGridLayoutRow />
                                            <DxGridLayoutRow />
                                            <DxGridLayoutRow />
                                            <DxGridLayoutRow />
                                            <DxGridLayoutRow />
                                        </Rows>
                                        <Columns>
                                            <DxGridLayoutColumn />
                                            <DxGridLayoutColumn />
                                        </Columns>
                                        <Items>
                                            <DxGridLayoutItem Row="0" Column="0" ColumnSpan="12">
                                                <Template>
                                                    <DxTextBox ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto" @bind-Text="@UserForm.DomicileAddress1" NullText="Street 1" />
                                                </Template>
                                            </DxGridLayoutItem>
                                            <DxGridLayoutItem Row="1" Column="0" ColumnSpan="12">
                                                <Template>
                                                    <DxTextBox ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto" @bind-Text="@UserForm.DomicileAddress2" NullText="Street 2" />
                                                </Template>
                                            </DxGridLayoutItem>
                                            <DxGridLayoutItem Row="2" Column="0" ColumnSpan="12">
                                                <Template>
                                                    <DxTextBox ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto" @bind-Text="@UserForm.DomicileRtRw" NullText="RT/RW" />
                                                </Template>
                                            </DxGridLayoutItem>

                                            <DxGridLayoutItem Row="3" Column="0" ColumnSpan="12">
                                                <Template>
                                                    <MyDxComboBox Data="Countries2"
                                                                  NullText="Select Country"
                                                                  TextFieldName="Name"
                                                                  ValueFieldName="Id"
                                                                  @oninput="OnInputCountry2"
                                                                  SelectedItemChanged="((CountryDto e) => SelectedItemChangedCountry2Changed(e))"
                                                                  @bind-Value="UserForm.DomicileCountryId">
                                                        <Columns>
                                                            <DxListEditorColumn FieldName="@nameof(Country.Name)" Caption="Name" />
                                                            <DxListEditorColumn FieldName="@nameof(Country.Code)" Caption="Code" />
                                                        </Columns>
                                                    </MyDxComboBox>
                                                    <ValidationMessage For="@(()=>UserForm.DomicileCountryId)" />
                                                </Template>
                                            </DxGridLayoutItem>
                                            <DxGridLayoutItem Row="4" Column="0">
                                                <Template>
                                                    <MyDxComboBox Data="Provinces2"
                                                                  NullText="Select Province"
                                                                  TextFieldName="Name"
                                                                  ValueFieldName="Id"
                                                                  @oninput="OnInputProvince2"
                                                                  SelectedItemChanged="((ProvinceDto e) => SelectedItemChangedProvince2Changed(e))"
                                                                  @bind-Value="UserForm.DomicileProvinceId">
                                                        <Columns>
                                                            <DxListEditorColumn FieldName="@nameof(ProvinceDto.Name)" Caption="Name" />
                                                            <DxListEditorColumn FieldName="Country.Name" Caption="Country" />
                                                        </Columns>
                                                    </MyDxComboBox>
                                                    <ValidationMessage For="@(()=>UserForm.DomicileProvinceId)" />
                                                </Template>
                                            </DxGridLayoutItem>
                                            <DxGridLayoutItem Row="4" Column="1">
                                                <Template>
                                                    <MyDxComboBox Data="Cities2"
                                                                  NullText="Select City"
                                                                  TextFieldName="Name"
                                                                  ValueFieldName="Id"
                                                                  @oninput="OnInputCity2"
                                                                  SelectedItemChanged="((CityDto e) => SelectedItemChangedCityChanged(e))"
                                                                  @bind-Value="UserForm.DomicileCityId">
                                                        <Columns>
                                                            <DxListEditorColumn FieldName="@nameof(CityDto.Name)" Caption="Name" />
                                                            <DxListEditorColumn FieldName="Province.Name" Caption="Province" />
                                                        </Columns>
                                                    </MyDxComboBox>
                                                    <ValidationMessage For="@(()=>UserForm.DomicileCityId)" />
                                                </Template>
                                            </DxGridLayoutItem>
                                            <DxGridLayoutItem Row="5" Column="0">
                                                <Template>
                                                    <MyDxComboBox Data="Districts2"
                                                                  NullText="Select District"
                                                                  TextFieldName="Name"
                                                                  ValueFieldName="Id"
                                                                  @oninput="OnInputDistrict"
                                                                  SelectedItemChanged="((DistrictDto e) => SelectedItemChangedDistrictChanged(e))"
                                                                  @bind-Value="UserForm.DomicileDistrictId">
                                                        <Columns>
                                                            <DxListEditorColumn FieldName="@nameof(District.Name)" Caption="Name" />
                                                            <DxListEditorColumn FieldName="Province.Name" Caption="Province" />
                                                            <DxListEditorColumn FieldName="City.Name" Caption="City" />
                                                        </Columns>
                                                    </MyDxComboBox>
                                                    <ValidationMessage For="@(()=>UserForm.DomicileDistrictId)" />
                                                </Template>
                                            </DxGridLayoutItem>
                                            <DxGridLayoutItem Row="5" Column="1">
                                                <Template>
                                                    <MyDxComboBox Data="Villages2"
                                                                  NullText="Select Village"
                                                                  TextFieldName="Name"
                                                                  ValueFieldName="Id"
                                                                  @oninput="OnInputVillage2"
                                                                  SelectedItemChanged="((VillageDto e) => SelectedItemChangedVillage2Changed(e))"
                                                                  @bind-Value="UserForm.IdCardVillageId">
                                                        <Columns>
                                                            <DxListEditorColumn FieldName="@nameof(VillageDto.Name)" Caption="Name" />
                                                            <DxListEditorColumn FieldName="Province.Name" Caption="Province" />
                                                            <DxListEditorColumn FieldName="City.Name" Caption="City" />
                                                            <DxListEditorColumn FieldName="District.Name" Caption="District" />
                                                        </Columns>
                                                    </MyDxComboBox>
                                                    <ValidationMessage For="@(()=>UserForm.IdCardVillageId)" />
                                                </Template>
                                            </DxGridLayoutItem> 
                                        </Items>
                                    </DxGridLayout>
                                </Template>
                            </DxFormLayoutItem>
                        </DxFormLayout>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public UserDto UserForm { get; set; } = new();

    [Parameter] public List<ReligionDto> Religions { get; set; } = [];

    [Parameter] public List<CountryDto> Countries { get; set; } = [];
    [Parameter] public List<ProvinceDto> Provinces { get; set; } = [];
    [Parameter] public List<CityDto> Cities { get; set; } = [];
    [Parameter] public List<DistrictDto> Districts { get; set; } = [];
    [Parameter] public List<VillageDto> Villages { get; set; } = [];
    
    // Residence
    [Parameter] public List<CountryDto> Countries2 { get; set; } = [];
    [Parameter] public List<ProvinceDto> Provinces2 { get; set; } = [];
    [Parameter] public List<CityDto> Cities2 { get; set; } = [];
    [Parameter] public List<DistrictDto> Districts2 { get; set; } = [];
    [Parameter] public List<VillageDto> Villages2 { get; set; } = [];

    [Parameter] public EventCallback<ChangeEventArgs> OnInputCountry { get; set; }
    [Parameter] public EventCallback<ChangeEventArgs> OnInputProvince { get; set; }
    [Parameter] public EventCallback<ChangeEventArgs> OnInputCity { get; set; }
    [Parameter] public EventCallback<ChangeEventArgs> OnInputDistrict { get; set; }
    [Parameter] public EventCallback<ChangeEventArgs> OnInputVillage { get; set; }
    
    // Residence
    [Parameter] public EventCallback<ChangeEventArgs> OnInputCountry2 { get; set; }
    [Parameter] public EventCallback<ChangeEventArgs> OnInputProvince2 { get; set; }
    [Parameter] public EventCallback<ChangeEventArgs> OnInputCity2 { get; set; }
    [Parameter] public EventCallback<ChangeEventArgs> OnInputDistrict2 { get; set; }
    [Parameter] public EventCallback<ChangeEventArgs> OnInputVillage2 { get; set; }
     
    [Parameter] public EventCallback<CountryDto> SelectedItemChangedCountry { get; set; }
    [Parameter] public EventCallback<ProvinceDto> SelectedItemChangedProvince { get; set; }
    [Parameter] public EventCallback<CityDto> SelectedItemChangedCity { get; set; }
    [Parameter] public EventCallback<DistrictDto> SelectedItemChangedDistrict { get; set; }
    [Parameter] public EventCallback<VillageDto> SelectedItemChangedVillage { get; set; }

    [Parameter] public EventCallback<CountryDto> SelectedItemChangedCountry2 { get; set; }
    [Parameter] public EventCallback<ProvinceDto> SelectedItemChangedProvince2 { get; set; }
    [Parameter] public EventCallback<CityDto> SelectedItemChangedCity2 { get; set; }
    [Parameter] public EventCallback<DistrictDto> SelectedItemChangedDistrict2 { get; set; }
    [Parameter] public EventCallback<VillageDto> SelectedItemChangedVillage2 { get; set; }

    protected void SelectedItemChangedCountryChanged(CountryDto selectedItem) => SelectedItemChangedCountry.InvokeAsync(selectedItem); 
    protected void SelectedItemChangedProvinceChanged(ProvinceDto selectedItem) => SelectedItemChangedProvince.InvokeAsync(selectedItem); 
    protected void SelectedItemChangedCityChanged(CityDto selectedItem) => SelectedItemChangedCity.InvokeAsync(selectedItem);
    protected void SelectedItemChangedDistrictChanged(DistrictDto selectedItem) => SelectedItemChangedDistrict.InvokeAsync(selectedItem);
    protected void SelectedItemChangedVillageChanged(VillageDto selectedItem) => SelectedItemChangedVillage.InvokeAsync(selectedItem);

    protected void SelectedItemChangedCountry2Changed(CountryDto selectedItem) => SelectedItemChangedCountry2.InvokeAsync(selectedItem);
    protected void SelectedItemChangedProvince2Changed(ProvinceDto selectedItem) => SelectedItemChangedProvince2.InvokeAsync(selectedItem);
    protected void SelectedItemChangedCity2Changed(CityDto selectedItem) => SelectedItemChangedCity2.InvokeAsync(selectedItem);
    protected void SelectedItemChangedDistrict2Changed(DistrictDto selectedItem) => SelectedItemChangedDistrict2.InvokeAsync(selectedItem);
    protected void SelectedItemChangedVillage2Changed(VillageDto selectedItem) => SelectedItemChangedVillage2.InvokeAsync(selectedItem);
}
