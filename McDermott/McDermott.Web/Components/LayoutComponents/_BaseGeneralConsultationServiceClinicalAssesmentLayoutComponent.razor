@using McDermott.Web.Components.Popups

<DxTabPage CssClass="w-100" Text="Clinical Assesment">
    <div class="w-100 mt-2">
        <div class="card">
            <div class="card-header">
                <span class="fw-bolder">Clinical Assesment</span>
            </div>

            <div class="card-body">
                <div class="row w-100">
                    <div class="col-md-6">
                        <DxFormLayout CssClass="w-100">
                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Information From" ColSpanMd="12">
                                <MyDxComboBox ReadOnly="ReadOnlyForm()"
                                              Data="@InformationFrom"
                                              NullText="Select Information From..."
                                              @bind-Value="@GeneralConsultanService.InformationFrom">
                                </MyDxComboBox>
                            </DxFormLayoutItem>

                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Clinic Visit Types" ColSpanMd="12">
                                <MyDxComboBox ReadOnly="ReadOnlyForm()" Data="@ClinicVisitTypes"
                                              NullText="Select Clinic Visit Type..."
                                              @bind-Value="@GeneralConsultanService.ClinicVisitTypes">
                                </MyDxComboBox>
                            </DxFormLayoutItem>

                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Weight" ColSpanMd="12">
                                <DxSpinEdit ReadOnly="ReadOnlyForm()" MinValue="0" @bind-Value="@GeneralConsultanService.Weight" NullText="Weight" />
                            </DxFormLayoutItem>

                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Height" ColSpanMd="12">
                                <DxSpinEdit ReadOnly="ReadOnlyForm()" MinValue="0" @bind-Value="@GeneralConsultanService.Height" NullText="Height" />
                            </DxFormLayoutItem>

                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="RR" ColSpanMd="12">
                                <DxSpinEdit ReadOnly="ReadOnlyForm()" MinValue="0" @bind-Value="@GeneralConsultanService.RR" NullText="RR" />
                            </DxFormLayoutItem>

                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="SpO2" ColSpanMd="12">
                                <DxSpinEdit ReadOnly="ReadOnlyForm()" MinValue="0" @bind-Value="@GeneralConsultanService.SpO2" />
                            </DxFormLayoutItem>

                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Waist Circumference" ColSpanMd="12">
                                <DxSpinEdit ReadOnly="ReadOnlyForm()" MinValue="0" @bind-Value="@GeneralConsultanService.WaistCircumference" />
                            </DxFormLayoutItem>

                            <DxFormLayoutItem CssClass="mt-3" CaptionCssClass="normal-caption" Caption="Body Max Index" ColSpanMd="12">
                                <h3>@GeneralConsultanService.BMIIndexString</h3>
                            </DxFormLayoutItem>

                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Scrinning Triage Scale" ColSpanMd="12">
                                <MyDxComboBox Data="@Colors"
                                              Context="oeee"
                                              NullText="Scrinning Triage Scale..."
                                              ReadOnly="ReadOnlyForm()"
                                              @bind-Value="@GeneralConsultanService.ScrinningTriageScale">
                                    <ItemTemplate>
                                        @{
                                            var item = oeee as string;
                                        }
                                        <div style="display: flex; align-items: center;">
                                            <div style="width: 15px; height: 15px; background-color: @(item?.ToLower()); margin-right: 10px;"></div>
                                            <span>@item</span>
                                        </div>
                                    </ItemTemplate>
                                    <EditBoxTemplate>
                                        <div style="display: flex; align-items: center;">
                                            <div style="width: 15px; height: 15px; background-color: @(GeneralConsultanService.ScrinningTriageScale?.ToLower()); margin-right: 10px;"></div>
                                            <span>@GeneralConsultanService.ScrinningTriageScale</span>
                                        </div>
                                    </EditBoxTemplate>
                                </MyDxComboBox>
                            </DxFormLayoutItem>

                            <DxFormLayoutItem CaptionCssClass="text-bold" BeginRow="true" Caption="GCS">
                                <p></p>
                            </DxFormLayoutItem>

                            <DxFormLayoutItem CaptionCssClass="normal-caption" BeginRow="true" Caption="E" ColSpanMd="12">
                                <DxSpinEdit ReadOnly="ReadOnlyForm()" MinValue="0" @bind-Value="@GeneralConsultanService.E" NullText="E" />
                            </DxFormLayoutItem>
                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="V" ColSpanMd="12">
                                <DxSpinEdit ReadOnly="ReadOnlyForm()" MinValue="0" @bind-Value="@GeneralConsultanService.V" NullText="V" />
                            </DxFormLayoutItem>
                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="M" ColSpanMd="12">
                                <DxSpinEdit ReadOnly="ReadOnlyForm()" MinValue="0" @bind-Value="@GeneralConsultanService.M" NullText="M" />
                            </DxFormLayoutItem>
                        </DxFormLayout>
                    </div>

                    <div class="col-md-6">
                        <DxFormLayout CssClass="w-100">
                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Awareness" ColSpanMd="12">
                                <MyDxComboBox ReadOnly="ReadOnlyForm()" Data="@Awareness"
                                              NullText="Select Awareness..."
                                              TextFieldName="NmSadar"
                                              ValueFieldName="Id"
                                              @bind-Value="@GeneralConsultanService.AwarenessId">
                                </MyDxComboBox>
                            </DxFormLayoutItem>

                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Temp" ColSpanMd="12">
                                <DxSpinEdit Increment="0.1M"
                                            ReadOnly="ReadOnlyForm()"
                                            MinValue="0"
                                            @bind-Value="@GeneralConsultanService.Temp"
                                            NullText="Temp" />
                            </DxFormLayoutItem>

                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="HR" ColSpanMd="12">
                                <Template>
                                    <DxGridLayout>
                                        <Rows>
                                            <DxGridLayoutRow />
                                        </Rows>
                                        <Columns>
                                            <DxGridLayoutColumn Width="90%" />
                                            <DxGridLayoutColumn Width="10%" />
                                        </Columns>
                                        <Items>
                                            <DxGridLayoutItem Row="0" Column="0" CssClass="mt">
                                                <Template>
                                                    <DxSpinEdit ReadOnly="ReadOnlyForm()" MinValue="30" MaxValue="160" @bind-Value="@GeneralConsultanService.HR" NullText="HR" />
                                                </Template>
                                            </DxGridLayoutItem>
                                            <DxGridLayoutItem Row="0" Column="1" CssClass="mt ml">
                                                <Template>
                                                    <h6 class="pl-1 pt-2">BPM</h6>
                                                </Template>
                                            </DxGridLayoutItem>
                                        </Items>
                                    </DxGridLayout>

                                </Template>
                            </DxFormLayoutItem>

                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Systolic/Diastolic BP" ColSpanMd="12">
                                <Template>
                                    <DxGridLayout ColumnSpacing="8px">
                                        <Rows>
                                            <DxGridLayoutRow />
                                        </Rows>
                                        <Columns>
                                            <DxGridLayoutColumn />
                                            <DxGridLayoutColumn />
                                        </Columns>
                                        <Items>
                                            <DxGridLayoutItem Row="0" Column="0">
                                                <Template>
                                                    <DxSpinEdit ReadOnly="ReadOnlyForm()" MinValue="40" MaxValue="203" @bind-Value="@GeneralConsultanService.Systolic" />
                                                </Template>
                                            </DxGridLayoutItem>
                                            <DxGridLayoutItem Row="0" Column="2">
                                                <Template>
                                                    <DxSpinEdit ReadOnly="ReadOnlyForm()" MinValue="60" MaxValue="180" @bind-Value="@GeneralConsultanService.DiastolicBP" />
                                                </Template>
                                            </DxGridLayoutItem>
                                        </Items>
                                    </DxGridLayout>
                                </Template>
                            </DxFormLayoutItem>

                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Pain Scale" ColSpanMd="12">
                                <DxSpinEdit ReadOnly="ReadOnlyForm()" MinValue="0" MaxValue="10" @bind-Value="@GeneralConsultanService.PainScale">
                                    <Buttons>
                                        <DxEditorButton IconCssClass="fa-regular fa-face-smile" Click="(() => IsPopUpPainScale = true)" />
                                    </Buttons>
                                </DxSpinEdit>
                            </DxFormLayoutItem>

                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption=" " ColSpanMd="12">

                            </DxFormLayoutItem>

                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption=" " ColSpanMd="12">

                            </DxFormLayoutItem>

                            <DxFormLayoutItem CssClass="mt-3" CaptionCssClass="normal-caption" Caption="BMI State" ColSpanMd="12">
                                <h3>@GeneralConsultanService.BMIState</h3>
                            </DxFormLayoutItem>

                            <DxFormLayoutItem Caption="Risk of Falling" CaptionCssClass=" normal-caption" ColSpanMd="12">
                                <Template>
                                    <DxGridLayout ColumnSpacing="8px">
                                        <Rows>
                                            <DxGridLayoutRow />
                                        </Rows>
                                        <Columns>
                                            <DxGridLayoutColumn />
                                            <DxGridLayoutColumn />
                                        </Columns>
                                        <Items>
                                            <DxGridLayoutItem Row="0" Column="0" CssClass="normal-caption" ColumnSpan="1">
                                                <Template>
                                                    <MyDxComboBox Data="@RiskOfFalling"
                                                                  ReadOnly="ReadOnlyForm()"
                                                                  NullText="Risk of Falling..."
                                                                  SelectedItemChanged="@((string e) => OnSelectRiskOfFalling(e))"
                                                                  @bind-Value="@GeneralConsultanService.RiskOfFalling">
                                                    </MyDxComboBox>
                                                </Template>
                                            </DxGridLayoutItem>
                                            <DxGridLayoutItem Row="0" Column="1" CssClass=" normal-caption" ColumnSpan="6">
                                                <Template>
                                                    <MyDxComboBox Data="@RiskOfFallingDetail"
                                                                  ReadOnly="ReadOnlyForm()"
                                                                  NullText="@(GeneralConsultanService.RiskOfFalling)"
                                                                  @bind-Value="@GeneralConsultanService.RiskOfFallingDetail">
                                                    </MyDxComboBox>
                                                </Template>
                                            </DxGridLayoutItem>
                                        </Items>
                                    </DxGridLayout>
                                </Template>
                            </DxFormLayoutItem>

                           

                            <DxFormLayoutItem CaptionCssClass="required-caption normal-caption" Caption="Prognosa" ColSpanMd="12">
                                <MyDxComboBox Data="@PrognosaRequests"
                                              NullText="Select Prognosa"
                                              @bind-Value="@GeneralConsultanService.KdPrognosa"
                                              TextFieldName="NmPrognosa"
                                              ReadOnly="ReadOnlyForm()"
                                              ValueFieldName="KdPrognosa">

                                    <Buttons>
                                        <DxEditorButton Click="LoadPrognosaData"
                                                        IconCssClass="fa-solid fa-arrows-rotate"
                                                        Visible="!ReadOnlyForm()"
                                                        Tooltip="Refresh" />
                                    </Buttons>
                                </MyDxComboBox>

                            </DxFormLayoutItem>

                            @if (IsAccident)
                            {
                                <DxFormLayoutItem CssClass="mt-3" CaptionCssClass="normal-caption" Caption=" " ColSpanMd="12">
                                    <DxButton Text="Localization Status" Click="(() => IsPopUpAccident = true)" IconCssClass="fas fa-map-marker-alt" />
                                </DxFormLayoutItem> 
                            }
                        </DxFormLayout>
                    </div>
                </div>
            </div>
        </div>
    </div>
</DxTabPage>

<PopUpPainScale IsPopUpPainScale="@IsPopUpPainScale"
                OnClosePopup="(() => IsPopUpPainScale = false)" />

<PopUpGCAccident IsPopUp="@IsPopUpAccident"
                 OnClosePopup="(() => IsPopUpAccident = false)" />

    @code {
        private bool IsReadOnlyForm => ReadOnlyForm?.Invoke() ?? true;

        public List<PrognosaRequest> PrognosaRequests { get; set; } = [];
        [Parameter] public GeneralConsultanServiceDto GeneralConsultanService { get; set; } = new();
        [Parameter] public Func<bool> ReadOnlyForm { get; set; }


        private List<AwarenessDto> Awareness { get; set; } = [];

        private bool IsPopUpPainScale = false;
        private bool IsPopUpAccident = false;
        [Parameter] public bool IsAccident { get; set; } = false;

        private List<string> RiskOfFallingDetail = [];
        private void OnSelectRiskOfFalling(string e)
        {
        RiskOfFallingDetail.Clear();
        GeneralConsultanService.RiskOfFallingDetail = null;
        if (e is null)
        {
            return;
        }

        if (e == "Humpty Dumpty")
        {
            RiskOfFallingDetail = Helper.HumptyDumpty.ToList();
        }
        else if (e == "Morse")
        {
            RiskOfFallingDetail = Helper.Morse.ToList();
        }
        else
        {
            RiskOfFallingDetail = Helper.Geriati.ToList();
        }
        }

        private async Task LoadPrognosaData()
        {
        PrognosaRequests = await GetPrognosaData();
        }

        private async Task<List<PrognosaRequest>> GetPrognosaData()
        {
        try
        {
            var result = await PcareService.SendPCareService(nameof(SystemParameter.PCareBaseURL), $"prognosa", HttpMethod.Get);
            if (result.Item2 == 200)
            {
                dynamic data = JsonConvert.DeserializeObject<dynamic>(result.Item1);

                var dynamicList = (IEnumerable<dynamic>)data.list;

                var a = dynamicList.Select(item => new PrognosaRequest
                    {
                        KdPrognosa = item.kdPrognosa,
                        NmPrognosa = item.nmPrognosa,
                    }).ToList();

                return a;
            }
            else
            {
                dynamic data = JsonConvert.DeserializeObject<dynamic>(result.Item1);
                ToastService.ShowError($"{data.metaData.message}\n Code: {data.metaData.code}");

                return [];
            }
        }
        catch (Exception ex)
        {
            ex.HandleException(ToastService);
        }

        return [];
        }

        protected override async Task OnInitializedAsync()
        {
        Awareness = await Mediator.Send(new GetAwarenessQuery());
        }
}