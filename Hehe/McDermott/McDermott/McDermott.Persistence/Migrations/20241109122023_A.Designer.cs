// <auto-generated />
using System;
using McDermott.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace McDermott.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241109122023_A")]
    partial class A
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("McDermott.Domain.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("BiologicalMother")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BloodType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrentMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DegreeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DepartmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("DoctorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorServiceIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DomicileAddress1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DomicileAddress2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DomicileCityId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DomicileCountryId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DomicileDistrictId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DomicileProvinceId")
                        .HasColumnType("bigint");

                    b.Property<string>("DomicileRtRw")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DomicileVillageId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DomicileZip")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyRelation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredId")
                        .HasColumnType("datetime2");

                    b.Property<string>("FamilyMedicalHistory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FamilyMedicalHistoryOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FoodPatientAllergyIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("HomePhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCardAddress1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCardAddress2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("IdCardCityId")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdCardCountryId")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdCardDistrictId")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdCardProvinceId")
                        .HasColumnType("bigint");

                    b.Property<string>("IdCardRtRw")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("IdCardVillageId")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdCardZip")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefaultData")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDoctor")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmployee")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsEmployeeRelation")
                        .HasColumnType("bit");

                    b.Property<string>("IsFamilyMedicalHistory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsFoodPatientAllergyIds")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHr")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMcu")
                        .HasColumnType("bit");

                    b.Property<string>("IsMedicationHistory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsNurse")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPatient")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPharmacologyPatientAllergyIds")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPharmacy")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPhysicion")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSameDomicileAddress")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUser")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWeatherPatientAllergyIds")
                        .HasColumnType("bit");

                    b.Property<long?>("JobPositionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("JoinDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Legacy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MartialStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicationHistory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobilePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherNIK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoBpjsKs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoBpjsTk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoRm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Npwp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("OccupationalId")
                        .HasColumnType("bigint");

                    b.Property<string>("Oracle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PastMedicalHistory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientAllergyIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PharmacologyPatientAllergyIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicanCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ReligionId")
                        .HasColumnType("bigint");

                    b.Property<string>("SAP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SipExp")
                        .HasColumnType("datetime2");

                    b.Property<string>("SipFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SipNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SpecialityId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("StrExp")
                        .HasColumnType("datetime2");

                    b.Property<string>("StrFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SupervisorId")
                        .HasColumnType("bigint");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeatherPatientAllergyIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
