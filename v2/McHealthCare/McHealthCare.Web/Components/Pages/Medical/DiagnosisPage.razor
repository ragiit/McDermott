@page "/medical/diagnoses"
@using McHealthCare.Application.Dtos.Medical

<PageTitle>McHealthCare - Diagnosis</PageTitle>

<BaseHeaderPage Title="Diagnosis" OnClickBack="@(async () => await LoadData())" ShowBackButton="false" />

@if (!IsLoading && UserAccess.Item1 && UserAccess.Item2.IsRead)
{
    <div class="content">
        <div class="container-fluid">
            <div class="card">
                <div class="card-body">
                    <div>
                        <DxLoadingPanel @bind-Visible="PanelVisible"
                                        IndicatorAnimationType="WaitIndicatorAnimationType.Pulse"
                                        IsContentBlocked="true"
                                        ApplyBackgroundShading="true"
                                        IndicatorAreaVisible="false"
                                        Text="Fetching Data...">
                            <MyDxGrid @ref="Grid"
                                      Data="getDiagnosis"
                                      @bind-SelectedDataItems="@SelectedDataItems"
                                      RowDoubleClick="@(async () =>  await Grid.StartEditRowAsync(FocusedRowVisibleIndex))"
                                      EditModelSaving="OnSave"
                                      DataItemDeleting="OnDelete"
                                      FocusedRowChanged="@((GridFocusedRowChangedEventArgs args) => FocusedRowVisibleIndex = args.VisibleIndex)"
                                      KeyFieldName="Id">

                                <ToolbarTemplate>
                                    <MyDxToolbarBase TItem="DiagnosisDto"
                                                     Items="@getDiagnosis"
                                                     Grid="Grid"
                                                     SelectedDataItems="@SelectedDataItems"
                                                     NewItem_Click="@(async () => await Grid.StartEditNewRowAsync())"
                                                     EditItem_Click="@(async () => await Grid.StartEditRowAsync(FocusedRowVisibleIndex))"
                                                     DeleteItem_Click="@(() => Grid.ShowRowDeleteConfirmation(FocusedRowVisibleIndex))"
                                                     Refresh_Click="@(async () => await LoadData())"
                                                     ImportFile="@(async () => await JsRuntime.InvokeVoidAsync("clickInputFile", "fileInput"))"
                                                     ExportToExcel="@(async () => await Helper.GenerateColumnImportTemplateExcelFileAsync(JsRuntime, FileExportService, "countries_template.xlsx", ExportFileDatas))"
                                                     VisibleNew="UserAccess.Item2.IsCreate"
                                                     VisibleEdit="UserAccess.Item2.IsUpdate"
                                                     VisibleDelete="UserAccess.Item2.IsDelete"
                                                     VisibleImport="UserAccess.Item2.IsImport" />
                                </ToolbarTemplate>

                                <Columns>
                                    <DxGridSelectionColumn Width="15px" />
                                    <DxGridDataColumn MinWidth="200" FieldName="Name" SortIndex="0" />
                                    <DxGridDataColumn MinWidth="100" FieldName="Code"  />
                                    <DxGridDataColumn MinWidth="200" FieldName="DiseaseCategory.Name" Caption="Disease Category" />
                                    <DxGridDataColumn MinWidth="200" FieldName="ChronicCategory.Name" Caption="Chronic Category" />
                                </Columns>

                                <EditFormTemplate Context="EditFormContext">
                                    @{
                                        var a = (DiagnosisDto)EditFormContext.EditModel;
                                    }
                                    <DxFormLayout CssClass="w-100">
                                        <DxFormLayoutItem Caption="Name" CaptionCssClass="required-caption normal-caption" ColSpanMd="12">
                                            <MyTextBox @bind-Text="@a.Name"
                                                       NullText="Name" />
                                            <ValidationMessage For="@(() => a.Name)"   />
                                        </DxFormLayoutItem>

                                        <DxFormLayoutItem Caption="Code" CaptionCssClass="normal-caption" ColSpanMd="12">
                                            <MyTextBox @bind-Text="@a.Code"
                                                       NullText="Code" />
                                            <ValidationMessage For="@(() => a.Code)"   />
                                        </DxFormLayoutItem>

                                        <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Disease Category" ColSpanMd="12">
                                            <MyDxComboBox Data="@getDiseaseCategory"
                                                          NullText="Select Disease..."
                                                          @bind-Value="a.DiseaseCategoryId"
                                                          ValueFieldName="Id"
                                                          TextFieldName="Name">
                                            </MyDxComboBox>
                                            <ValidationMessage For="@(() => a.DiseaseCategoryId)" />
                                        </DxFormLayoutItem>
                                        <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Chronic Category" ColSpanMd="12">
                                            <MyDxComboBox Data="@getChronicCategory"
                                                          NullText="Select Chronic..."
                                                          @bind-Value="a.ChronicCategoryId"
                                                          ValueFieldName="Id"
                                                          TextFieldName="Name">
                                            </MyDxComboBox>
                                            <ValidationMessage For="@(() => a.ChronicCategoryId)" />
                                        </DxFormLayoutItem>

                                    </DxFormLayout>
                                </EditFormTemplate>
                            </MyDxGrid>
                        </DxLoadingPanel>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else if (UserAccess.Item2 is not null && !UserAccess.Item2.IsRead)
{
    <InvalidPermissionPage />
}
else
{
    <LoadingIndicatorLayout />
}
