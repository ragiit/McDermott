@page "/inventory/internal-transfers"
<PageTitle>McHealthCare - Internal Transfer</PageTitle>

<BaseHeaderPage Title="Internal Transfer" OnClickBack="@(async () => await BackButtonAsync())" ShowBackButton="PageMode == EnumPageMode.Create.GetDisplayName() || PageMode == EnumPageMode.Update.GetDisplayName()" />


<style>
    .my-style {
        min-width: 800px;
    }

</style>

@if (!IsLoading && UserAccess.Item1 && UserAccess.Item2.IsRead)
{
    <div class="content">
        <div class="container-fluid">
            <div class="row g-0">
                <div class="col">
                    @if (PageMode == EnumPageMode.Create.GetDisplayName() || PageMode == EnumPageMode.Update.GetDisplayName())
                    {
                        <DxLoadingPanel @bind-Visible="IsLoading"
                                        IndicatorAnimationType="WaitIndicatorAnimationType.Pulse"
                                        IsContentBlocked="true"
                                        ApplyBackgroundShading="true"
                                        IndicatorAreaVisible="false"
                                        Text="Fetching Data...">
                            <EditForm Model="@postInternalTransfer" Context="EditFormContext22" OnValidSubmit="HandleValidSubmitAsync" OnInvalidSubmit="@HandleInvalidSubmitAsync">
                                <DataAnnotationsValidator />
                                <div class="card">
                                    <div class="card-body">
                                        <div class="w-100 row">
                                            <div class="col align-self-center">
                                                <div class="col d-flex justify-content-end p-0">
                                                    <DxButton RenderStyle="ButtonRenderStyle.Primary" RenderStyleMode="@ButtonRenderStyleMode.Outline" CssClass="me-1" IconCssClass="fa-solid fa-floppy-disk" Text="Save" SubmitFormOnClick="true"></DxButton>
                                                    <DxButton RenderStyle="ButtonRenderStyle.Danger" RenderStyleMode="@ButtonRenderStyleMode.Outline" IconCssClass="fa-solid fa-xmark" Text="Cancel" Click="CancelItemGroupMenuGrid_Click"></DxButton>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="card">
                                    <div class="card-header">
                                        <span class="fw-bolder">@(postInternalTransfer.Id == Guid.Empty ? "Add Group" : "Edit Group")</span>
                                    </div>
                                    <div class="card-body">
                                        <DxFormLayout CssClass="w-100">
                                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Source Location" ColSpanMd="12">
                                                <MyDxComboBox Data="@getLocations"
                                                              NullText="Select Source Location..."
                                                              @bind-Value="postInternalTransfer.SourceId"
                                                              TextFieldName="Name"
                                                              ValueFieldName="Id">
                                                </MyDxComboBox>
                                                <ValidationMessage For="@(() => postInternalTransfer.SourceId)" />
                                            </DxFormLayoutItem>
                                            <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Destination Location" ColSpanMd="12">
                                                <MyDxComboBox Data="@getLocations"
                                                              NullText="Select Destination Location..."
                                                              @bind-Value="postInternalTransfer.DestinationId"
                                                              TextFieldName="Name"
                                                              ValueFieldName="Id">
                                                </MyDxComboBox>
                                                <ValidationMessage For="@(() => postInternalTransfer.DestinationId)" />
                                            </DxFormLayoutItem>
                                            <DxFormLayoutItem Caption="Schedule Date" CaptionCssClass="normal-caption" ColSpanMd="12">
                                                <DxDateEdit @bind-Date="@postInternalTransfer.SchenduleDate"
                                                            ShowValidationIcon="true"
                                                            DisplayFormat="dd MMMM yyyy"></DxDateEdit>
                                            </DxFormLayoutItem>
                                            <DxFormLayoutItem Caption="Reference" CaptionCssClass="normal-caption" ColSpanMd="12">
                                                <MyTextBox @bind-Text="@postInternalTransfer.Reference" NullText="Reference" />
                                            </DxFormLayoutItem>

                                            @if (postInternalTransfer.Id != Guid.Empty)
                                            {
                                                <DxFormLayoutGroup Caption="Products" CssClass="mt-3" ColSpanMd="12" ExpandButtonDisplayMode="GroupExpandButtonDisplayMode.Start" AnimationType="LayoutAnimationType.Slide">
                                                    <Items>
                                                        <MyDxGrid @ref="Gridproduct"
                                                                  Data="getInternalTransferProducts"
                                                                  @bind-SelectedDataItems="@SelectedDataItemsProduct"
                                                                  KeyFieldName="ProductId"
                                                                  FocusedRowChanged="CanDeleteSelectedItemsMenu"
                                                                  EditModelSaving="OnSaveProduct"
                                                                  DataItemDeleting="OnDeleteProduct">

                                                            <ToolbarTemplate>
                                                                <MyDxToolbarBase TItem="TransferStockProductDto"
                                                                                 Items="@getInternalTransferProducts"
                                                                                 SelectedDataItems="@SelectedDataItemsProduct"
                                                                                 NewItem_Click="@(async () => await Gridproduct.StartEditNewRowAsync())"
                                                                                 EditItem_Click="@(async () =>  await Gridproduct.StartEditRowAsync(FocusedRowVisibleIndexProduct))"
                                                                                 DeleteItem_Click="@(() => Gridproduct.ShowRowDeleteConfirmation(FocusedRowVisibleIndexProduct))"
                                                                                 Refresh_Click="@LoadDataProductAsync"
                                                                                 Grid="Gridproduct"
                                                                                 ImportFile="@(async () => await JsRuntime.InvokeVoidAsync("clickInputFile", "fileInput2"))"
                                                                                 ExportToExcel="@(async () => await Helper.GenerateColumnImportTemplateExcelFileAsync(JsRuntime, FileExportService, "group_menu_template.xlsx", ExportFileDataProduct))"
                                                                                 EnableDelete="!IsDeletedMenu"
                                                                                 EnableEdit=" !IsDeletedMenu"
                                                                                 VisibleNew="UserAccess.Item2.IsCreate"
                                                                                 VisibleEdit="UserAccess.Item2.IsUpdate"
                                                                                 VisibleDelete="UserAccess.Item2.IsDelete"
                                                                                 VisibleImport="UserAccess.Item2.VisibleImport" />
                                                            </ToolbarTemplate>

                                                            <Columns>
                                                                <DxGridSelectionColumn Width="15px" />
                                                                <DxGridDataColumn MinWidth="200" FieldName="Product.Name" Caption="Product" SortIndex="0" />
                                                                <DxGridDataColumn MinWidth="200" FieldName="QtyStock" Caption="Demand" />
                                                                <DxGridDataColumn MinWidth="50" FieldName="Batch" Caption="Batch" />
                                                                <DxGridDataColumn MinWidth="50" FieldName="ExpiredDate" Caption="Expired Date" />
                                                                <DxGridDataColumn MinWidth="50" FieldName="Uom.Name" Caption="Unit of Measure" />
                                                            </Columns>
                                                            <EditFormTemplate Context="EditFormContext">
                                                                @{
                                                                    var a = (TransferStockProductDto)EditFormContext.EditModel;
                                                                }
                                                                <DxFormLayout CssClass="w-100">
                                                                    <div class="col-md-6">
                                                                        <DxFormLayoutItem CaptionCssClass="required-caption normal-caption" Caption="Product" ColSpanMd="12">
                                                                            <MyDxComboBox Data="@getProducts"
                                                                                          NullText="Select Product..."
                                                                                          @bind-Value="@a.ProductId"
                                                                                          TextFieldName="Name"
                                                                                          ValueFieldName="Id"
                                                                                          SelectedItemChanged="@((ProductDto item)=>ChangeProduct(item))">
                                                                            </MyDxComboBox>
                                                                            <ValidationMessage For="@(()=>a.ProductId)" />
                                                                        </DxFormLayoutItem>
                                                                        <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Unit of Measure" ColSpanMd="12">
                                                                            <MyTextBox @bind-Text="@a.UomName" NullText=""></MyTextBox>
                                                                        </DxFormLayoutItem>
                                                                        <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Batch" ColSpanMd="12">
                                                                            <MyDxComboBox Data="@Batch"
                                                                                          NullText="Batch.."
                                                                                          @bind-Value="@a.Batch"
                                                                            SelectedItemChanged="@((string value)=>ChangeBatch(value))"></MyDxComboBox>
                                                                        </DxFormLayoutItem>
                                                                    </div>
                                                                    <div class="col-md-6">
                                                                    </div>
                                                                </DxFormLayout>
                                                            </EditFormTemplate>
                                                        </MyDxGrid>
                                                    </Items>
                                                </DxFormLayoutGroup>
                                            }
                                        </DxFormLayout>
                                    </div>
                                </div>
                            </EditForm>
                        </DxLoadingPanel>
                    }
                </div>
            </div>
        </div>
    </div>
}
