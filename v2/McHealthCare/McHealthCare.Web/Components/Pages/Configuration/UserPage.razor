@page "/configuration/users"
@page "/configuration/users/{PageMode}"
@page "/configuration/users/{PageMode}/{Id}"
@using static McHealthCare.Extentions.EnumHelper

<PageTitle>McHealthCare - Users</PageTitle>

<BaseHeaderPage Title="Users" OnClickBack="@(async () => await BackButtonAsync())" ShowBackButton="PageMode == EnumPageMode.Create.GetDisplayName() || PageMode == EnumPageMode.Update.GetDisplayName()" />

@if (!IsLoading && UserAccess.Item1 && UserAccess.Item2.IsRead)
{ 
    <div class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col">
                    @if (PageMode == EnumPageMode.Create.GetDisplayName() || PageMode == EnumPageMode.Update.GetDisplayName())
                    {
                         
                    }
                    else
                    {
                        <div class="card">
                            <div class="card-body">
                                <DxLoadingPanel @bind-Visible="PanelVisible"
                                                IndicatorAnimationType="WaitIndicatorAnimationType.Pulse"
                                                IsContentBlocked="true"
                                                ApplyBackgroundShading="true"
                                                IndicatorAreaVisible="false"
                                                Text="Fetching Data...">
                                    <MyDxGrid @ref="Grid"
                                              Data="Users"
                                              @bind-SelectedDataItems="@SelectedDataItems"
                                              RowDoubleClick="@(async () => await InitializeEditAsync())"
                                              DataItemDeleting="OnDeleteAsync"
                                              FocusedRowChanged="CanDeleteSelectedItems"
                                              KeyFieldName="Id">

                                        <ToolbarTemplate>
                                            <MyDxToolbarBase TItem="ApplicationUser"
                                                             Items="@Users"
                                                             Grid="Grid"
                                                             SelectedDataItems="@SelectedDataItems"
                                                             NewItem_Click="@(async () => InitializeNew())"
                                                             EditItem_Click="@(async () =>  await InitializeEditAsync())"
                                                             DeleteItem_Click="@(() => Grid.ShowRowDeleteConfirmation(FocusedRowVisibleIndex))"
                                                             Refresh_Click="@(async () => await LoadDataAsync())"
                                                             ImportFile="@(async () => await JsRuntime.InvokeVoidAsync("clickInputFile", "fileInput"))" 
                                                             VisibleNew="UserAccess.Item2.IsCreate"
                                                             VisibleEdit="UserAccess.Item2.IsUpdate"
                                                             EnableDelete="!IsDeleted"
                                                             VisibleDelete="UserAccess.Item2.IsDelete"
                                                             VisibleImport="UserAccess.Item2.IsImport" />

                                        </ToolbarTemplate>

                                        <Columns>
                                            <DxGridSelectionColumn Width="15px" />
                                            <DxGridDataColumn MinWidth="200" FieldName="@(nameof(ApplicationUser.Name))" />
                                            <DxGridDataColumn MinWidth="200" FieldName="@(nameof(ApplicationUser.Email))" />
                                            <DxGridDataColumn MinWidth="200" FieldName="@(nameof(ApplicationUser.NoId))" />
                                            <DxGridDataColumn MinWidth="200" FieldName="@(nameof(ApplicationUser.TypeId))" /> 
                                            <DxGridDataColumn MinWidth="200" FieldName="@(nameof(ApplicationUser.MobilePhone))" /> 
                                            <DxGridDataColumn MinWidth="200" FieldName="@(nameof(ApplicationUser.PhoneNumber))" /> 
                                            <DxGridDataColumn MinWidth="200" FieldName="@(nameof(ApplicationUser.MobilePhone))" /> 
                                        </Columns>
                                    </MyDxGrid>
                                </DxLoadingPanel>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
}
else if (UserAccess.Item2 is not null && !UserAccess.Item2.IsRead)
{
    <InvalidPermissionPage />
}
else
{
    <LoadingIndicatorLayout />
}


