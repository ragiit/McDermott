@page "/config/countries"
@inject IToastService toastService


<PageTitle>McHealthCare - Countries</PageTitle>


    <div class="container-fluid">
        <div class="page-title">
            <div class="row">
                <div class="col-6">
                    <h4>
                       Country
                    </h4>
                </div>
            </div>
        </div>
    </div>

    <div class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-sm-12">
                    <div class="card">                        
                        <InputFile id="fileInput" style="display:none" OnChange="@ImportExcelFile" accept=".xlsx" multiple="false"></InputFile>
                        <div class="card-body">
                            <DxLoadingPanel @bind-Visible="PanelVisible"
                                            IndicatorAnimationType="WaitIndicatorAnimationType.Pulse"
                                            IsContentBlocked="true"
                                            ApplyBackgroundShading="true"
                                            IndicatorAreaVisible="false"
                                            Text="Fetching Data...">
                                <MyDxGrid @ref="Grid"
                                          Data="Countries"
                                          @bind-SelectedDataItems="@SelectedDataItems"
                                          RowDoubleClick="@(async () =>  await Grid.StartEditRowAsync(FocusedRowVisibleIndex))"
                                          EditModelSaving="OnSave"
                                          DataItemDeleting="OnDelete"
                                          FocusedRowChanged="@((GridFocusedRowChangedEventArgs args) => FocusedRowVisibleIndex = args.VisibleIndex)"
                                          KeyFieldName="Id">

                                    <ToolbarTemplate>
                                        <MyDxToolbarBase TItem="CountryDto"
                                                         Items="@Countries"
                                                         Grid="Grid"
                                                         SelectedDataItems="@SelectedDataItems"
                                                         NewItem_Click="@(async () => await Grid.StartEditNewRowAsync())"
                                                         EditItem_Click="@(async () =>  await Grid.StartEditRowAsync(FocusedRowVisibleIndex))"
                                                         DeleteItem_Click="@(() => Grid.ShowRowDeleteConfirmation(FocusedRowVisibleIndex))"
                                                         Refresh_Click="@(async () => await LoadData())"
                                                         IsImport="true"
                                                         ImportFile="@(async () => await JsRuntime.InvokeVoidAsync("clickInputFile", "fileInput"))"
                                                         ExportToExcel="@(async () => await Helper.GenerateColumnImportTemplateExcelFileAsync(JsRuntime, FileExportService, "Countries_template.xlsx", ExportFileDatas))" />
                                    </ToolbarTemplate>

                                    <Columns>
                                        <DxGridSelectionColumn Width="15px" />
                                        <DxGridDataColumn MinWidth="200" FieldName="Name" SortIndex="0" />
                                        <DxGridDataColumn MinWidth="200" FieldName="Code" />
                                    </Columns>
                                    <EditFormTemplate Context="EditFormContext">
                                        @{
                                            var a = (CountryDto)EditFormContext.EditModel;
                                        }
                                        <DxFormLayout>
                                            <DxFormLayoutItem CaptionCssClass="required-caption normal-caption" Caption="Name" ColSpanMd="12">
                                                <MyTextBox @bind-Text="@a.Name" NullText="Name" />
                                                <ValidationMessage For="@(()=> a.Name)"   />
                                            </DxFormLayoutItem>
                                            <DxFormLayoutItem CaptionCssClass="caption normal-caption" Caption="Code" ColSpanMd="12">
                                                <MyTextBox @bind-Text="@a.Code" NullText="Code" />
                                                <ValidationMessage For="@(()=> a.Code)"   />
                                            </DxFormLayoutItem>
                                        </DxFormLayout>
                                    </EditFormTemplate>
                                </MyDxGrid>
                            </DxLoadingPanel>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
