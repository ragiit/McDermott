@page "/configuration/email-templates"
@using Blazored.TextEditor 

<PageTitle>McHealthCare - Email Template</PageTitle>

<BaseHeaderPage Title="Email Template" OnClickBack="@(async () => await LoadData())" ShowBackButton="false" />

@if (!IsLoading && UserAccess.Item1 && UserAccess.Item2.IsRead)
{
    <div class="content">
        <div class="container-fluid">
            <div class="row g-0">
                <div class="col-sm-12">
                    <div class="card"> 
                        <div class="card-body">
                            <div>
                                <DxLoadingPanel @bind-Visible="PanelVisible"
                                                IndicatorAnimationType="WaitIndicatorAnimationType.Pulse"
                                                IsContentBlocked="true"
                                                ApplyBackgroundShading="true"
                                                IndicatorAreaVisible="false"
                                                Text="Fetching Data...">
                                    <MyDxGrid @ref="Grid"
                                              Data="EmailTemplates"
                                              @bind-SelectedDataItems="@SelectedDataItems"
                                              RowDoubleClick="@(async () =>  await Grid.StartEditRowAsync(FocusedRowVisibleIndex))"
                                              EditModelSaving="OnSave"
                                              DataItemDeleting="OnDelete"
                                              FocusedRowChanged="@((GridFocusedRowChangedEventArgs args) => FocusedRowVisibleIndex = args.VisibleIndex)"
                                              KeyFieldName="Id">

                                        <ToolbarTemplate>
                                            <MyDxToolbarBase TItem="EmailTemplateDto"
                                                             Items="@EmailTemplates"
                                                             Grid="Grid"
                                                             SelectedDataItems="@SelectedDataItems"
                                                             NewItem_Click="NewItem_Click "
                                                             EditItem_Click="@(async () =>  await Grid.StartEditRowAsync(FocusedRowVisibleIndex))"
                                                             DeleteItem_Click="@(() => Grid.ShowRowDeleteConfirmation(FocusedRowVisibleIndex))"
                                                             Refresh_Click="@(async () => await LoadData())"
                                                             ImportFile="@(async () => await JsRuntime.InvokeVoidAsync("clickInputFile", "fileInput"))" 
                                                             VisibleNew="UserAccess.Item2.IsCreate"
                                                             VisibleEdit="UserAccess.Item2.IsUpdate"
                                                             VisibleDelete="UserAccess.Item2.IsDelete"
                                                             VisibleImport="UserAccess.Item2.VisibleImport" />
                                        </ToolbarTemplate>

                                        <Columns>
                                            <DxGridSelectionColumn Width="15px" />
                                            <DxGridDataColumn FieldName="EmailFrom.Smtp_User" Caption="From" />
                                            <DxGridDataColumn FieldName="Subject" Caption="Subject" />
                                            <DxGridDataColumn FieldName="To" Caption="To" />
                                            <DxGridDataColumn FieldName="Status" Caption="Status" />
                                        </Columns>
                                        <EditFormTemplate Context="EditFormContext">
                                            @{
                                                var EmailFormTemplate = (EmailTemplateDto)EditFormContext.EditModel;
                                            }
                                          <DxFormLayout CssClass="w-100">
                                                <DxFormLayoutItem ColSpanMd="12">
                                                    <label>Subject</label>
                                                    <DxTextBox @bind-Text="@EmailFormTemplate.Subject" NullText="Subject" />
                                                </DxFormLayoutItem>
                                                <DxFormLayoutItem ColSpanMd="12">
                                                    <label for="by">By</label>
                                                    <DxTextBox ReadOnly="true" Enabled="false" @bind-Text="@userBy" InputCssClass="fw-bold" />
                                                </DxFormLayoutItem>
                                                <DxFormLayoutItem ColSpanMd="12">
                                                    <label>From</label>
                                                    <DxComboBox ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto" FilteringMode="@DataGridFilteringMode.Contains"
                                                                Data="@EmailSettings"
                                                                NullText="Select Partner..."
                                                                @bind-Value="@EmailFormTemplate.EmailFromId"
                                                                TextFieldName="Smtp_User"
                                                                ValueFieldName="Id">
                                                    </DxComboBox>
                                                </DxFormLayoutItem>
                                                <DxFormLayoutItem ColSpanMd="12">
                                                    <label>To</label>
                                                    <DxTextBox @bind-Text="@EmailFormTemplate.To" NullText="mail@mail.com" />
                                                </DxFormLayoutItem>
                                                <DxFormLayoutItem ColSpanMd="12">
                                                    <label>Cc</label>
                                                    <DxTagBox Data="@EmailCc"
                                                              NullText="Select Cc..."
                                                              TData="string"
                                                              TValue="string"
                                                              FilteringMode="@DataGridFilteringMode.Contains"
                                                              AllowCustomTags="true"
                                                              @bind-Tags="@CcBy"
                                                              ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                              CssClass="cw-480"
                                                              InputId="tbCustomTags" />
                                                </DxFormLayoutItem> 
                                                <DxFormLayoutItem ColSpanMd="12">
                                                    <label>Body</label>
                                                    <div class="custom-editor">
                                                        <BlazoredTextEditor @ref="@QuillHtml" Placeholder="Enter non HTML format like centering...">
                                                            <ToolbarContent>
                                                                <select class="ql-header">
                                                                    <option selected=""></option>
                                                                    <option value="1"></option>
                                                                    <option value="2"></option>
                                                                    <option value="3"></option>
                                                                    <option value="4"></option>
                                                                    <option value="5"></option>
                                                                </select>
                                                                <span class="ql-formats">
                                                                    <button class="ql-bold"></button>
                                                                    <button class="ql-italic"></button>
                                                                    <button class="ql-underline"></button>
                                                                    <button class="ql-strike"></button>
                                                                </span>
                                                                <span class="ql-formats">
                                                                    <select class="ql-color"></select>
                                                                    <select class="ql-background"></select>
                                                                </span>
                                                                <span class="ql-formats">
                                                                    <button class="ql-list" value="ordered"></button>
                                                                    <button class="ql-list" value="bullet"></button>
                                                                </span>
                                                                <span class="ql-formats">
                                                                    <button class="ql-image"></button>
                                                                    <button class="ql-video"></button>
                                                                </span>
                                                                <span class="ql-formats">
                                                                    <button class="ql-link"></button>
                                                                </span>
                                                            </ToolbarContent>
                                                            <EditorContent>
                                                                @((MarkupString)@EmailFormTemplate.Message)
                                                            </EditorContent>
                                                        </BlazoredTextEditor>
                                                    </div>
                                                </DxFormLayoutItem>
                                            </DxFormLayout>
                                        </EditFormTemplate>
                                    </MyDxGrid>
                                </DxLoadingPanel>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else if (UserAccess.Item2 is not null && !UserAccess.Item2.IsRead)
{
    <InvalidPermissionPage />
}
else
{
    <LoadingIndicatorLayout />
}