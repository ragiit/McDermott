@page "/configuration/menus"

<PageTitle>McHealthCare - Menus</PageTitle>

<BaseHeaderPage Title="Menus" OnClickBack="@(async () => await LoadData())" ShowBackButton="false" />

@if (!IsLoading && UserAccess.Item1 && UserAccess.Item2.IsRead)
{
    <div class="content">

        <div class="container-fluid">
            <div class="row">
                <div class="col">
                    <div class="card">
                    <div class="card-body">

                        <InputFile id="fileInput" style="display:none" OnChange="@ImportExcelFile" accept=".xlsx" multiple="false"></InputFile>

                        <DxLoadingPanel @bind-Visible="PanelVisible"
                                        IndicatorAnimationType="WaitIndicatorAnimationType.Pulse"
                                        IsContentBlocked="true"
                                        ApplyBackgroundShading="true"
                                        IndicatorAreaVisible="false"
                                        Text="Fetching Data...">
                            <MyDxGrid @ref="Grid"
                                      Data="Menus"
                                      @bind-SelectedDataItems="@SelectedDataItems"
                                      RowDoubleClick="@(async () =>  await Grid.StartEditRowAsync(FocusedRowVisibleIndex))"
                                      EditModelSaving="OnSave"
                                      DataItemDeleting="OnDelete"
                                          FocusedRowChanged="CanDeleteSelectedItemsMenu"
                                      KeyFieldName="Id">

                                <ToolbarTemplate>
                                    <MyDxToolbarBase TItem="MenuDto"
                                                     Items="@Menus"
                                                     Grid="Grid"
                                                     SelectedDataItems="@SelectedDataItems"
                                                     NewItem_Click="@(async () => await Grid.StartEditNewRowAsync())"
                                                     EditItem_Click="@(async () =>  await Grid.StartEditRowAsync(FocusedRowVisibleIndex))"
                                                     DeleteItem_Click="@(() => Grid.ShowRowDeleteConfirmation(FocusedRowVisibleIndex))"
                                                     Refresh_Click="@(async () => await LoadData())"
                                                     ImportFile="@(async () => await JsRuntime.InvokeVoidAsync("clickInputFile", "fileInput"))"
                                                     ExportToExcel="@(async () => await Helper.GenerateColumnImportTemplateExcelFileAsync(JsRuntime, FileExportService, "menus_template.xlsx", ExportFileDatas))"
                                                     EnableEdit="!IsDeletedMenu"
                                                     EnableDelete="!IsDeletedMenu"
                                                     VisibleNew="UserAccess.Item2.IsCreate"
                                                     VisibleEdit="UserAccess.Item2.IsUpdate"
                                                     VisibleDelete="UserAccess.Item2.IsDelete"
                                                     VisibleImport="UserAccess.Item2.IsImport" />
                                </ToolbarTemplate>

                                <Columns>
                                    <DxGridSelectionColumn Width="15px" />
                                    <DxGridDataColumn MinWidth="200" FieldName="Parent.Name" GroupIndex="0" Caption="Parent" />
                                    <DxGridDataColumn MinWidth="200" FieldName="Name" />
                                    <DxGridDataColumn MinWidth="200" FieldName="Sequence" SortIndex="0" />
                                    <DxGridDataColumn MinWidth="200" FieldName="Url" Caption="URL" />
                                </Columns>

                                <EditFormTemplate Context="EditFormContext">
                                    @{
                                        var a = (MenuDto)EditFormContext.EditModel;
                                    }
                                    <DxFormLayout CssClass="w-100">
                                        <DxFormLayoutItem CaptionCssClass="required-caption normal-caption" Caption="Name" ColSpanMd="12">
                                            <MyTextBox @bind-Text="@a.Name" NullText="Name" />
                                            <ValidationMessage For="@(()=> a.Name)"   />
                                        </DxFormLayoutItem>
                                        <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Parent Menu" ColSpanMd="12">
                                            <MyDxComboBox Data="@ParentMenuDto"
                                                          NullText="Select Parent Menu..."
                                                          @bind-Value="@a.ParentId"
                                                          TextFieldName="Name"
                                                          ValueFieldName="Id">
                                            </MyDxComboBox>
                                        </DxFormLayoutItem>
                                        <DxFormLayoutItem CaptionCssClass="normal-caption" Caption="Sequence" ColSpanMd="12">
                                            <DxSpinEdit ShowValidationIcon="true" MinValue="0" @bind-Value="@a.Sequence" NullText="Sequence" ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto" />
                                        </DxFormLayoutItem>
                                        <DxFormLayoutItem CaptionCssClass="required-caption normal-caption" Caption="Url" ColSpanMd="12">
                                            <MyDxComboBox Data="@Helper.URLS"
                                                          NullText="Select URL..."
                                                          @bind-Value="@a.Url">
                                            </MyDxComboBox>
                                            <ValidationMessage For="@(()=> a.Url)"   />
                                        </DxFormLayoutItem>
                                    </DxFormLayout>
                                </EditFormTemplate>

                            </MyDxGrid>
                            </DxLoadingPanel>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else if (UserAccess.Item2 is not null && !UserAccess.Item2.IsRead)
{
    <InvalidPermissionPage />
}
else
{
    <LoadingIndicatorLayout />
}

